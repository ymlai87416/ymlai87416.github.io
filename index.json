[{"categories":null,"content":"JDK ","date":"2022-08-21","objectID":"/opensource/jdk/:0:0","tags":null,"title":"Java Development kit","uri":"/opensource/jdk/"},{"categories":null,"content":"Study material Clone on 19 Aug https://github.com/ymlai87416-oss/jdk https://github.com/ymlai87416-oss/cglib https://github.com/kangjianwei/LearningJDK/blob/master/%E5%B7%B2%E9%98%85%E4%BB%A3%E7%A0%81%E6%B8%85%E5%8D%95_%E6%8C%89%E5%8A%9F%E8%83%BD%E6%8E%92%E5%BA%8F.md ","date":"2022-08-21","objectID":"/opensource/jdk/:1:0","tags":null,"title":"Java Development kit","uri":"/opensource/jdk/"},{"categories":null,"content":"Class loader How to load java class ","date":"2022-08-21","objectID":"/opensource/jdk/:2:0","tags":null,"title":"Java Development kit","uri":"/opensource/jdk/"},{"categories":null,"content":"Compile and JIT How JIT is being done? ","date":"2022-08-21","objectID":"/opensource/jdk/:3:0","tags":null,"title":"Java Development kit","uri":"/opensource/jdk/"},{"categories":null,"content":"Data structure Java lib is java.util.*, and the code path is Link ArrayList, LinkedLis: The class Node is private, so it never return to outside. Link HashSet, HashMap, ConcurrentHashMap HashSet use HashMap to implement. HashMap Internal parameter: load factor=0.75, max cap = 1024^3 HashMap if key list longer than 8, convert it to tree (Link)[https://github.com/openjdk/jdk/blob/4b03e135e157cb6cc9ba5eebf4a1f1b6e9143f48/src/java.base/share/classes/java/util/HashMap.java#L761] before 1.7, it is front insert O(1), now it is back insert O(8), or O(log n) ConcurrentHashMap use CAS to keep track of cell version and sychronized the rest. TreeMap Stack PriorityQueue A simple heap implements sift-up and sift-down Queue and ArrayDeque ArrayDeque is just a circular array ","date":"2022-08-21","objectID":"/opensource/jdk/:4:0","tags":null,"title":"Java Development kit","uri":"/opensource/jdk/"},{"categories":null,"content":"Concurrent Thread: Link locate at java.lang Thread share the same classloader CAS: locate at java.util.concurrent.atomic There is a variable U of Unsafe. A lot of native method there include compareAndSetInt() Seems take times when there is a lot of state. Implement spinning lock by CAS thread id to internal variable. Reentrant lock: Source code at java.util.concurrent.locks.ReentrantLock Similiar to synchronized(lock) have conditions so await = wait() and signal = notify() and signalAll = notifyAll() Only 1 thread can enter the lock section Semaphore Source code at java.util.concurrent AbstractQueueSynchronizer -\u003e Sync -\u003e FairSync and NonFairSync. Leetcode question Dinning philosopher seems not working Barrier Source code at java.util.concurrent Use to join a number of thread. Use spinning when wait. Can also run some Runnable when it is tripped. ","date":"2022-08-21","objectID":"/opensource/jdk/:4:1","tags":null,"title":"Java Development kit","uri":"/opensource/jdk/"},{"categories":null,"content":"Garbage collector The garbage collector is locate at jdk. The garbage collector code is locate at Here Seems most of them have C1 and C2 folder (C1 for client and C2 for server) Need a long read ","date":"2022-08-21","objectID":"/opensource/jdk/:4:2","tags":null,"title":"Java Development kit","uri":"/opensource/jdk/"},{"categories":null,"content":"Code injection cglib / aspectJ / byteBuddy ","date":"2022-08-21","objectID":"/opensource/jdk/:4:3","tags":null,"title":"Java Development kit","uri":"/opensource/jdk/"},{"categories":null,"content":"Kafka ","date":"2022-08-21","objectID":"/opensource/kafka/:0:0","tags":null,"title":"Kafka","uri":"/opensource/kafka/"},{"categories":null,"content":"Producer KafkaProducer Sender NetworkClient ","date":"2022-08-21","objectID":"/opensource/kafka/:1:0","tags":null,"title":"Kafka","uri":"/opensource/kafka/"},{"categories":null,"content":"Consumer KafkaConsumer Fetcher ","date":"2022-08-21","objectID":"/opensource/kafka/:2:0","tags":null,"title":"Kafka","uri":"/opensource/kafka/"},{"categories":null,"content":"How Kafka keep things in kernel Kafka中Zero-Copy的相关总结 Kafka零拷贝 FileRecords ","date":"2022-08-21","objectID":"/opensource/kafka/:3:0","tags":null,"title":"Kafka","uri":"/opensource/kafka/"},{"categories":null,"content":"Linux Linux System Programming 6 Hours Course ","date":"2022-08-21","objectID":"/opensource/linux/:0:0","tags":null,"title":"Linux","uri":"/opensource/linux/"},{"categories":null,"content":"Study resources ","date":"2022-08-21","objectID":"/opensource/linux/:1:0","tags":null,"title":"Linux","uri":"/opensource/linux/"},{"categories":null,"content":"Network ","date":"2022-08-21","objectID":"/opensource/linux/:2:0","tags":null,"title":"Linux","uri":"/opensource/linux/"},{"categories":null,"content":"OSI model Physical Data link -\u003e This is the driver Network -\u003e This is IP layer Transport -\u003e This is TCP/UDP layer Session -\u003e Socket.accept() layer Presentation -\u003e GSON library Application TCP on IP Code 3 ways for establish connection 4 ways for closing connection, because both client and server may have data left for sending. UDP on IP Code epoll (https://www.youtube.com/watch?v=WfJodwornTM) Efficient as it only returned socket/file which have changes. ","date":"2022-08-21","objectID":"/opensource/linux/:2:1","tags":null,"title":"Linux","uri":"/opensource/linux/"},{"categories":null,"content":"Mail list and bug https://bugzilla.kernel.org/ ","date":"2022-08-21","objectID":"/opensource/linux/:2:2","tags":null,"title":"Linux","uri":"/opensource/linux/"},{"categories":null,"content":"Redis Clone on 19 Aug https://github.com/ymlai87416-oss/redis ","date":"2022-08-21","objectID":"/opensource/redis/:1:0","tags":null,"title":"Redis","uri":"/opensource/redis/"},{"categories":null,"content":"Online study resources https://www.zhihu.com/question/28677076 ","date":"2022-08-21","objectID":"/opensource/redis/:1:1","tags":null,"title":"Redis","uri":"/opensource/redis/"},{"categories":null,"content":"Algorithm explain HyperLogLog ","date":"2022-08-21","objectID":"/opensource/redis/:1:2","tags":null,"title":"Redis","uri":"/opensource/redis/"},{"categories":null,"content":"How to compile Redis ","date":"2022-08-21","objectID":"/opensource/redis/:1:3","tags":null,"title":"Redis","uri":"/opensource/redis/"},{"categories":null,"content":"Useful video Linux技术精讲-Redis 源码就该这么读，让你豁然开朗 ","date":"2022-08-21","objectID":"/opensource/redis/:1:4","tags":null,"title":"Redis","uri":"/opensource/redis/"},{"categories":null,"content":"Study point 第一阶段阅读Redis的数据结构部分，基本位于如下文件中： 内存分配 zmalloc.c 和 zmalloc.h 动态字符串 sds.h 和 sds.c Double linked list adlist.c 和 adlist.h Dictionary dict.h和dict.c expand (5x), resize (0.1), rehash (timer) Skip list 跳跃表 server.h文件里面关于zskiplist结构和zskiplistNode结构，以及t_zset.c中所有zsl开头的函数，比如 zslCreate、zslInsert、zslDeleteNode等等。 Random level. Prefer to use then ziplist in 128 items, or element size=64 基数统计 hyperloglog.c 中的 hllhdr 结构， 以及所有以 hll 开头的函数 pfscan, pfadd, pfmerge 第二阶段 熟悉Redis的内存编码结构 整数集合数据结构 intset.h和intset.c 压缩列表数据结构 ziplist.h和ziplist.c 第三阶段 熟悉Redis数据类型的实现 对象系统 object.c 字符串键 t_string.c 列表建 t_list.c 散列键 t_hash.c 集合键 t_set.c 有序集合键 t_zset.c中除 zsl 开头的函数之外的所有函数 HyperLogLog键 hyperloglog.c中所有以pf开头的函数 第四阶段 熟悉Redis数据库的实现 数据库实现 redis.h文件中的redisDb结构，以及db.c文件 通知功能 notify.c RDB持久化 rdb.c AOF持久化 aof.c 以及一些独立功能模块的实现 发布和订阅 redis.h文件的pubsubPattern结构，以及pubsub.c文件 事务 redis.h文件的multiState结构以及multiCmd结构，multi.c文件 第五阶段 熟悉客户端和服务器端的代码实现 事件处理模块 ae.c/ae_epoll.c/ae_evport.c/ae_kqueue.c/ae_select.c 网路链接库 anet.c和networking.c 服务器端 redis.c 客户端 redis-cli.c 这个时候可以阅读下面的独立功能模块的代码实现 lua脚本 scripting.c 慢查询 slowlog.c 监视 monitor.c 第六阶段 这一阶段主要是熟悉Redis多机部分的代码实现 复制功能 replication.c Redis Sentinel sentinel.c 集群 cluster.c 其他代码文件介绍关于测试方面的文件有： memtest.c 内存检测 redis_benchmark.c 用于redis性能测试的实现。 redis_check_aof.c 用于更新日志检查的实现。 redis_check_dump.c 用于本地数据库检查的实现。 testhelp.c 一个C风格的小型测试框架。 一些工具类的文件如下： bitops.c GETBIT、SETBIT 等二进制位操作命令的实现 debug.c 用于调试时使用 endianconv.c 高低位转换，不同系统，高低位顺序不同 help.h 辅助于命令的提示信息 lzf_c.c 压缩算法系列 lzf_d.c 压缩算法系列 rand.c 用于产生随机数 release.c 用于发布时使用 sha1.c sha加密算法的实现 util.c 通用工具方法 crc64.c 循环冗余校验 sort.c SORT命令的实现 一些封装类的代码实现： bio.c background I/O的意思，开启后台线程用的 latency.c 延迟类 migrate.c 命令迁移类，包括命令的还原迁移等 pqsort.c 排序算法类 rio.c redis定义的一个I/O类 syncio.c 用于同步Socket和文件I/O操作 ","date":"2022-08-21","objectID":"/opensource/redis/:1:5","tags":null,"title":"Redis","uri":"/opensource/redis/"},{"categories":null,"content":"Scaling https://github.com/twitter/twemproxy ","date":"2022-08-21","objectID":"/opensource/redis/:1:6","tags":null,"title":"Redis","uri":"/opensource/redis/"},{"categories":null,"content":"Spring Spring popular library: doFilterInternal HandlerMethodIvoker AnnotationMethodHandlerAdapter HttpMessageConverter ","date":"2022-08-21","objectID":"/opensource/spring/:1:0","tags":null,"title":"Spring","uri":"/opensource/spring/"},{"categories":null,"content":"Spring boot Useful map: Link Spring boot popular library: When called SpringApplication.run(…), Here is the code Starter projects: Use to simplified the dependency. All located under the spring-boot-starters Autoconfig Locate at org/springframework/boot/autoconfigure/ Simplify so that you can use YAML and ride on default value. Run once CommandLineRunner or ApplicationRunner Can also be handled by event @EventListener(ApplicationReadyEvent.class) ","date":"2022-08-21","objectID":"/opensource/spring/:2:0","tags":null,"title":"Spring","uri":"/opensource/spring/"},{"categories":null,"content":"AutoConfiguration ","date":"2022-08-21","objectID":"/opensource/spring/:2:1","tags":null,"title":"Spring","uri":"/opensource/spring/"},{"categories":null,"content":"Spring cloud ","date":"2022-08-21","objectID":"/opensource/spring/:3:0","tags":null,"title":"Spring","uri":"/opensource/spring/"},{"categories":null,"content":"Webserver ","date":"2022-08-21","objectID":"/opensource/webserver/:0:0","tags":null,"title":"Web server","uri":"/opensource/webserver/"},{"categories":null,"content":"Tomcat Java 全栈知识体系 Startup: Main() and Bootstrap Main function at tomcat/java/org/apache/catalina/startup/Bootstrap.java Catalina Now start the application. tomcat 首先是个http服务器，关注点有tcp连接的处理，http协议的解析等， 然后是个java servlet容器，关注点有应用的加载,classloader隔离等，同时tomcat支持jsp,关注点有jsp的语法解析,动态编译，动态加载等。 当然作为成熟的容器，还有许多管理功能监控功能等。 ","date":"2022-08-21","objectID":"/opensource/webserver/:1:0","tags":null,"title":"Web server","uri":"/opensource/webserver/"},{"categories":null,"content":"Netty TBC ","date":"2022-08-21","objectID":"/opensource/webserver/:2:0","tags":null,"title":"Web server","uri":"/opensource/webserver/"},{"categories":null,"content":"Nginx Why does node.js scale? Libuv \u0026 epoll \u0026 fcntl 理解 Nginx 源码 Init nginx.c ","date":"2022-08-21","objectID":"/opensource/webserver/:3:0","tags":null,"title":"Web server","uri":"/opensource/webserver/"},{"categories":null,"content":"Zookeeper ZooKeeper源码分析与实战 etcd is used by kubernetes for the same purpose etcd和Zookeeper孰优孰劣？ ","date":"2022-08-21","objectID":"/opensource/zookeeper/:0:0","tags":null,"title":"Zookeeper","uri":"/opensource/zookeeper/"},{"categories":null,"content":"Handle Request Request SyncRequestProcessor Snapshot decided by how big log count and log size. PrepRequestProcessor FinalRequestProcessor ","date":"2022-08-21","objectID":"/opensource/zookeeper/:1:0","tags":null,"title":"Zookeeper","uri":"/opensource/zookeeper/"},{"categories":null,"content":"Data structure (ZooKeeper （四） 源码剖析：数据模型和存储)[https://juejin.cn/post/6844904163646652430] ZKDatabase DataTree This is where the data is stored. FileTxnSnapLog Single thread block write? ","date":"2022-08-21","objectID":"/opensource/zookeeper/:2:0","tags":null,"title":"Zookeeper","uri":"/opensource/zookeeper/"},{"categories":null,"content":"Network (ZooKeeper （三）源码剖析: 服务端网络连接层 NIO)[https://juejin.cn/post/6844904159167283213] NIO Mechanism: NIOServerCnxnFactory.java ","date":"2022-08-21","objectID":"/opensource/zookeeper/:3:0","tags":null,"title":"Zookeeper","uri":"/opensource/zookeeper/"},{"categories":null,"content":"Watch node The actual implementation is at ZKDatabase with the help of the DataTree ","date":"2022-08-21","objectID":"/opensource/zookeeper/:4:0","tags":null,"title":"Zookeeper","uri":"/opensource/zookeeper/"},{"categories":null,"content":"Election ZooKeeper（二） 源码剖析: 群首选举 ","date":"2022-08-21","objectID":"/opensource/zookeeper/:5:0","tags":null,"title":"Zookeeper","uri":"/opensource/zookeeper/"},{"categories":null,"content":"ZAB Zookeeper (五) 源码剖析: Zab 协议 Leader -\u003e request -\u003e get ack -\u003e send commit -\u003e done ProposalRequestProcessor CommitRequest (under quorum) AckRequestProcessor FinalRequest ","date":"2022-08-21","objectID":"/opensource/zookeeper/:6:0","tags":null,"title":"Zookeeper","uri":"/opensource/zookeeper/"},{"categories":null,"content":"Data structure holding bits Boolean[]: 4-20bytes boolean[]: 1bytes BitSet: 1bit Refer: boolean[] vs. BitSet: Which is more efficient? ","date":"2022-04-04","objectID":"/algorithm/binary/:1:0","tags":null,"title":"Binary","uri":"/algorithm/binary/"},{"categories":null,"content":"Number of bit set static int NumberOfSetBits(int i) { i = i - ((i \u003e\u003e\u003e 1) \u0026 0x55555555); i = (i \u0026 0x33333333) + ((i \u003e\u003e\u003e 2) \u0026 0x33333333); return (((i + (i \u003e\u003e\u003e 4)) \u0026 0x0F0F0F0F) * 0x01010101) \u003e\u003e\u003e 24; } static int NumberOfSetBits(int i){ int cnt = 0; while(i != 0){ i = i \u0026 (i - 1); //equivalent to i -= (i \u0026 -i); ++cnt; } return cnt; } Refer: UVA10496 ","date":"2022-04-04","objectID":"/algorithm/binary/:2:0","tags":null,"title":"Binary","uri":"/algorithm/binary/"},{"categories":null,"content":"Last set bit Get last set bit, useful in Fenwick tree. static int lastSetBit(int n) { return n \u0026 (-n); } Remove last set bit x = x \u0026 (x - 1); ","date":"2022-04-04","objectID":"/algorithm/binary/:3:0","tags":null,"title":"Binary","uri":"/algorithm/binary/"},{"categories":null,"content":"Rotate bit private int rotate8_(int data, int distance){ distance = distance \u0026 7; data \u0026= 0xFF; return (data \u003e\u003e distance) | (data \u003c\u003c (8 - distance)) \u0026 0xFF; } Refer: GJ-2022-1B-C ","date":"2022-04-04","objectID":"/algorithm/binary/:4:0","tags":null,"title":"Binary","uri":"/algorithm/binary/"},{"categories":null,"content":"Finding mid Wrong: mid = (high + low) / 2 Correct: mid = low + (high-low)/2 Consider case where high=-4 and low=-5, mid will be -4 which is high, so it will keep looping because you cannot reduce high value. ","date":"2022-04-04","objectID":"/algorithm/binary_search/:1:0","tags":null,"title":"Binary search","uri":"/algorithm/binary_search/"},{"categories":null,"content":"Finding exact value Where the exact value must be find Inclusive version stop at low \u003e high, while exclusive version stop at low == high. private int iterativeInclusive(){ int low = 0, high = nums.length-1; while(low \u003c= high){ int mid = low + (high-low)/2; if(nums[mid] == target){ return mid; } if(nums[mid] \u003c target) low = mid+1; else high = mid-1; } return -1; } private int iterativeExclusive(){ int low = 0, high = nums.length; while(low \u003c high){ int mid = low + (high-low)/2; if(nums[mid] == target){ return mid; } if(nums[mid] \u003c target) low = mid+1; else high = mid; } return -1; } Refer: Binary Search ","date":"2022-04-04","objectID":"/algorithm/binary_search/:2:0","tags":null,"title":"Binary search","uri":"/algorithm/binary_search/"},{"categories":null,"content":"Finding floor value or ceiling value Better use inclusive high version. For exclusive version, you have to search range says (0, 2), then it can stucks with (0, 2) forever, because you can only assign end with mid+1, which is the end itself, no progress is made, so I have to handle arrays of length 2 also as base case. private int findK(long low, long high){ if(low == high) return (int) low; long mid = low+(high-low)/2; //fuck!! there introduce a bug, consider case -5, -4. int cnt = count(mid); if(cnt \u003c k) return findK(mid+1, high); else return findK(low, mid); } Refer: Kth Smallest Element in a Sorted Matrix Refer: Search Insert Position //This is the example of finding higest value int low, high, mid; low = 0; high = s.length()-1; int lastGoodS = -1; //low and high inclusive while(low \u003c high){ mid = low + (high-low+1)/2; int spos = checkHaveDuplicate(mid); if(spos != -1){ low = mid; lastGoodS = spos; } else{ high = mid-1; } } Refer: Longest Duplicate Substring ","date":"2022-04-04","objectID":"/algorithm/binary_search/:3:0","tags":null,"title":"Binary search","uri":"/algorithm/binary_search/"},{"categories":null,"content":"Searching in sorted 2D array The top-right or left-bottom corner search approach is O(sqrt(K)) search algorithm on the linear version. Time complexity: O(M+N) ","date":"2022-04-04","objectID":"/algorithm/binary_search/:4:0","tags":null,"title":"Binary search","uri":"/algorithm/binary_search/"},{"categories":null,"content":"Union find Shortcut: ds.uf Time complexity: O(α(n)) Memory complexity: O(n) class UnionFind { // OOP style int[] p; int[] rank; int[] size; UnionFind(int N) { p = new int[N]; rank = new int[N]; size = new int[N]; for (int i = 0; i \u003c N; i++) p[i] = i; } void init(){ for (int i = 0; i \u003c p.length; i++) p[i] = i; Arrays.fill(rank, 0); Arrays.fill(size, 1); } int findSet(int i) { return (p[i] == i) ? i : (p[i] = findSet(p[i])); } boolean isSameSet(int i, int j) { return findSet(i) == findSet(j); } void unionSet(int i, int j) { if (!isSameSet(i, j)) { // if from different set int x = findSet(i), y = findSet(j); if (rank[x] \u003e rank[y]) { p[y] = x; // rank keeps the tree short size[x] += size[y]; } else { p[x] = y; size[y] += size[x]; if (rank[x] == rank[y]) rank[y]++; } } } int getSetSize(int i){ return size[i]; } }; Refer to: UVA11503 ","date":"2022-04-04","objectID":"/algorithm/data_structure/:1:0","tags":null,"title":"Data structures","uri":"/algorithm/data_structure/"},{"categories":null,"content":"Segment tree Segment tree support online update and query For range update, lazy propagation is needed Shortcut: ds.st Time complexity: Build: O(nlogn) Query: O(log n) Update: O(log n) Memory: O(n) class SegmentTree { // the segment tree is stored like a heap array private int[] st = new int[100001*4]; private int[] A; private int n; private int left(int p) { return p \u003c\u003c 1; } // same as binary heap operations private int right(int p) { return (p \u003c\u003c 1) + 1; } private void build(int p, int L, int R) { // O(n) if (L == R) // as L == R, either one is fine st[p] = A[L]; else { // recursively compute the values build(left(p), L, (L + R) / 2); build(right(p), (L + R) / 2 + 1, R); int p1 = st[left(p)], p2 = st[right(p)]; st[p]= p1 * p2; } } /* This is individual update */ public void update(int p, int val){ update(1, p, val, 0, n-1); } public void update(int p, int idx, int val, int L, int R){ if (L == R) // as L == R, either one is fine st[p] = val; else { // recursively compute the values if(L \u003c= idx \u0026\u0026 idx \u003c= (L+R)/2) update(left(p), idx, val, L, (L+R)/2); else if ((L+R)/2+1 \u003c= idx \u0026\u0026 idx\u003c= R)update(right(p), idx, val, (L+R)/2+1, R); int p1 = st[left(p)], p2 = st[right(p)]; //Never a node with only left or right child. st[p]= p1 * p2; } } /* Non optimized range update */ public void updateRange(int i, int j, int val){ updateRange(1, 0, n-1, i, j, val); } private void updateRange(int p, int L, int R, int i, int j, int val){ if (L == R) // as L == R, either one is fine st[p] = val; else { // recursively compute the values if (L \u003c= i \u0026\u0026 i \u003c= (L + R) / 2) updateRange(left(p), L, (L + R) / 2, i, Math.min(j, (L + R) / 2), val); if ((L + R) / 2 + 1 \u003c= j \u0026\u0026 j \u003c= R) updateRange(right(p), (L + R) / 2 + 1, R, Math.max(i, (L + R) / 2 + 1), j, val); int p1 = st[left(p)], p2 = st[right(p)]; //Never a node with only left or right child. st[p] = p1 + p2; } } private int rmq(int p, int L, int R, int i, int j) { // O(log n) if (i \u003e R || j \u003c L) return Integer.MIN_VALUE; // current segment outside query range if (L \u003e= i \u0026\u0026 R \u003c= j) return st[p]; // inside query range // compute the min position in the left and right part of the interval int p1 = rmq(left(p), L, (L + R) / 2, i, j); int p2 = rmq(right(p), (L + R) / 2 + 1, R, i, j); if (p1 == Integer.MIN_VALUE) return p2; // if we try to access segment outside query if (p2 == Integer.MIN_VALUE) return p1; // same as above return p1 * p2; // as in build routine } public SegmentTree(int[] A, int size) { this.A = A; n = size; //Arrays.fill(st, 0); build(1, 0, n - 1); // recursive build } public int rmq(int i, int j) { return rmq(1, 0, n - 1, i, j); } // overloading } Refer to: Lazy operation: push() Refer to: UVA11402 Segment tree on interval instead of update range of value. ","date":"2022-04-04","objectID":"/algorithm/data_structure/:2:0","tags":null,"title":"Data structures","uri":"/algorithm/data_structure/"},{"categories":null,"content":"2D Segment tree Shortcut: ds.st2d Refer to: UVA11297 ","date":"2022-04-04","objectID":"/algorithm/data_structure/:3:0","tags":null,"title":"Data structures","uri":"/algorithm/data_structure/"},{"categories":null,"content":"Fenwick tree Shortcut: ds.ft Time complexity: Build: O(nlogn), but calling adjust on each element. Query: O(log n) Update: O(log n) Memory: O(n) - less memory compare to segment tree class FenwickTree { private int[] ft; private int[] nums; //0 is not used, please traslate index to 1-index public FenwickTree(int n) { ft = new int[n+1]; this.nums = new int[n]; } public FenwickTree(int[] nums){ ft = new int[nums.length+1]; this.nums = nums; for(int i=0; i\u003cnums.length; ++i) _adjust(i+1, nums[i]); } //0 base function void update(int k, int v){ int diff = v - nums[k]; _adjust(k+1, diff); nums[k] = v; } int rsq(int a, int b){ return _rsq(a+1, b+1); } private int LSOne(int S){ return S \u0026 -S;} //1 base function int _rsq(int b) { int sum = 0; for (; b != 0; b -= LSOne(b)) sum += ft[b]; return sum; } int _rsq(int a, int b) { return _rsq(b) - (a == 1 ? 0 : _rsq(a - 1)); } void _adjust(int k, int v) { for (; k \u003c ft.length; k += LSOne(k)) ft[k] += v; } }; Refer to UVA12086 ","date":"2022-04-04","objectID":"/algorithm/data_structure/:4:0","tags":null,"title":"Data structures","uri":"/algorithm/data_structure/"},{"categories":null,"content":"Heap Not much used, can be replaced by PriorityQueue in most setting. Update element in PriorityQueue replaced by either delete O(N) and insert again O(logN) or being lazy and check if the element pop from PriorityQueue is the same as the latest record. Application: It is inferor to linear scan if the scan is small. Refer to Longest Repeating Character Replacement, which linear scan perform much faster. TODO: There is currently no bubbleUp and bubbleDown implementation in my implementation of heap. Refer: Kth Largest Element in a Stream ","date":"2022-04-04","objectID":"/algorithm/data_structure/:5:0","tags":null,"title":"Data structures","uri":"/algorithm/data_structure/"},{"categories":null,"content":"Quick select Most Top K problem can also be solved by quick select, which have a better time complexity of O(N) int[] nums; public int findKthLargest(int[] nums, int k) { this.nums = nums; return quickSelect(0, nums.length-1, nums.length-k); } Random r = new Random(); //k means position of desired element in sorted array. int quickSelect(int left, int right, int k){ //base case if(left == right) return nums[left]; //choose a pivot index by random int pivotIndex = r.nextInt(right-left) + left; //call parititon pivotIndex = partition(left, right, pivotIndex); //from partition we know pivot is nth bigger //if n == k return pivot if(k == pivotIndex) return nums[k]; //else if n \u003c k =\u003e quickSelect(left, pivot-1, k) else if(k \u003c pivotIndex) return quickSelect(left, pivotIndex-1, k); //else if n \u003e k =\u003e quickSelect(pivot+1, right, k) else return quickSelect(pivotIndex+1, right, k); } //left and right are inclusive int partition(int left, int right, int pivotIndex){ //create a variable call store index int storeIndex = left; int pivot = nums[pivotIndex]; //move pivot to the rightmost swap(right, pivotIndex); //loop all the element and store the element smaller than pivot to left side (store index) for(int i=left; i\u003c=right; ++i){ if(nums[i] \u003c pivot){ swap(i, storeIndex); storeIndex++; } } //swap right with store index swap(storeIndex, right); //return store index return storeIndex; } void swap(int a, int b){ int temp = nums[a]; nums[a] = nums[b]; nums[b] = temp; } Refer: Kth Largest Element in an Array ","date":"2022-04-04","objectID":"/algorithm/data_structure/:5:1","tags":null,"title":"Data structures","uri":"/algorithm/data_structure/"},{"categories":null,"content":"Monotonic stack / heap ","date":"2022-04-04","objectID":"/algorithm/data_structure/:6:0","tags":null,"title":"Data structures","uri":"/algorithm/data_structure/"},{"categories":null,"content":"Monotonic heap Usually used for querying max/min in sliding windows Refer: Sliding Window Maximum Refer: Max Value of Equation ","date":"2022-04-04","objectID":"/algorithm/data_structure/:6:1","tags":null,"title":"Data structures","uri":"/algorithm/data_structure/"},{"categories":null,"content":"Monotonic stack Search for previous min or next min. Refer: Largest Rectangle in Histogram Refer: Maximal Rectangle Make use of Largest Rectange in Histogram Refer: Sum of Subarray Minimums ","date":"2022-04-04","objectID":"/algorithm/data_structure/:6:2","tags":null,"title":"Data structures","uri":"/algorithm/data_structure/"},{"categories":null,"content":"Development ","date":"2022-04-04","objectID":"/cheatsheet/development/:1:0","tags":null,"title":"Development","uri":"/cheatsheet/development/"},{"categories":null,"content":"Java # build mvn without test mvn clean install -DskipTests # run jar specifying the class java -cp myjar.jar com.mypackage.myClass ","date":"2022-04-04","objectID":"/cheatsheet/development/:1:1","tags":null,"title":"Development","uri":"/cheatsheet/development/"},{"categories":null,"content":"Python # Setup conda conda create --name system_design python=3.9 # List conda ","date":"2022-04-04","objectID":"/cheatsheet/development/:1:2","tags":null,"title":"Development","uri":"/cheatsheet/development/"},{"categories":null,"content":"Git # add a new git branch and checkout git checkout -b your-new-branch-name # push to the new branch git push origin \u003cadd-your-branch-name\u003e ","date":"2022-04-04","objectID":"/cheatsheet/development/:1:3","tags":null,"title":"Development","uri":"/cheatsheet/development/"},{"categories":null,"content":"Dynamic programming ","date":"2022-04-04","objectID":"/algorithm/dp/:0:0","tags":null,"title":"Dynamic programming","uri":"/algorithm/dp/"},{"categories":null,"content":"Type Get idea by recursion Get idea by growing ","date":"2022-04-04","objectID":"/algorithm/dp/:1:0","tags":null,"title":"Dynamic programming","uri":"/algorithm/dp/"},{"categories":null,"content":"Longest increasing subsequence Very classic algorithm. Time complexity: O(nlog(n)) Space complexity: O(n) Refer: Longest Increasing Subsequence In real life, it is much easier to fix the O(n^2) algorithm L(i) = 1 + max( L(j) ) where 0 \u003c j \u003c i and arr[j] \u003c arr[i]; or L(i) = 1, if no such j exists. Refer to: 2311. Longest Binary Subsequence Less Than or Equal to K ","date":"2022-04-04","objectID":"/algorithm/dp/:2:0","tags":null,"title":"Dynamic programming","uri":"/algorithm/dp/"},{"categories":null,"content":"Travelling salesman Shortcut: dp.tsp Time complexity: from O(2!) =\u003e O(2^n) Space complexity: O(2^n) //this version use adj matrix //please change to use adj list static =11 static boolean[][] vis = new boolean[11][1 \u003c\u003c MAX_NODE]; int travellingSalesman (int end, int mask) { int bitSet = NumberOfSetBits(mask); if(bitSet == point-1){ if((mask \u0026 1) == 0) //mask left only starting position not set. return 0; else return Integer.MAX_VALUE; } if((mask \u0026 (1 \u003c\u003c end)) == 1) return Integer.MAX_VALUE; if(end == 0) return Integer.MAX_VALUE; //end cannot be 0 as long as the size \u003e 1 if (vis[end][mask]) return val[end][mask]; vis[end][mask] = true; int ans = Integer.MAX_VALUE; int cost; for ( int i = 0; i \u003c point; i++ ) { if(i == end) continue; if ((mask \u0026 (1 \u003c\u003c i)) == 0 ) { int temp = dp (i, mask | (1 \u003c\u003c end)); if(temp == Integer.MAX_VALUE) continue; cost = temp + dist[i][end]; if ( ans \u003e cost ) ans = cost; } } return val[end][mask] = ans; } static int NumberOfSetBits(int i) { i = i - ((i \u003e\u003e\u003e 1) \u0026 0x55555555); i = (i \u0026 0x33333333) + ((i \u003e\u003e\u003e 2) \u0026 0x33333333); return (((i + (i \u003e\u003e\u003e 4)) \u0026 0x0F0F0F0F) * 0x01010101) \u003e\u003e\u003e 24; } ","date":"2022-04-04","objectID":"/algorithm/dp/:3:0","tags":null,"title":"Dynamic programming","uri":"/algorithm/dp/"},{"categories":null,"content":"geometry This is the library for the geometry If integer is available, do integer operation, or just BigDouble If double is available, compare them by 1e-9. ","date":"2022-04-04","objectID":"/algorithm/geometry/:0:0","tags":null,"title":"Geometry","uri":"/algorithm/geometry/"},{"categories":null,"content":"Point Operations include: Sorting Equal Double version class Point implements Comparable\u003cPoint\u003e{ double x; double y; public Point(double x, double y){ this.x = x; this.y = y; } public int compareTo(Point p){ if(Math.abs(x - p.x) \u003e EPS) return x \u003c p.x ? -1 : 1; return y \u003c p.y ? -1 : 1; } public boolean equals(Point p){ return Math.abs(x - p.x) \u003c EPS \u0026\u0026 Math.abs(y - p.y) \u003c EPS; } } class Point_I implements Comparable\u003cPoint_I\u003e{ int x; int y; public Point_I(int x, int y){ this.x = x; this.y = y; } public int compareTo(Point_I p){ if(Math.abs(x - p.x) \u003e EPS) return x \u003c p.x ? -1 : 1; return y \u003c p.y ? -1 : 1; } public boolean equals(Point_I p){ return (x - p.x) == 0 \u0026\u0026 (y - p.y) == 0; } } Distance double distance(Point p1, Point p2){ double dx = p1.x - p2.x; double dy = p1.y - p2.y; return Math.sqrt(dx * dx + dy * dy); } Rotate // rotate p by theta degrees CCW w.r.t origin (0, 0) Point rotate(Point p, double theta){ double rad = theta * PI / 180.0; // multiply theta with PI / 180.0 double x = p.x * cos(rad) - p.y * sin(rad); double y = p.x * sin(rad) + p.y * cos(rad); return point(x, y); } ","date":"2022-04-04","objectID":"/algorithm/geometry/:1:0","tags":null,"title":"Geometry","uri":"/algorithm/geometry/"},{"categories":null,"content":"Line There are multiple way to define a line. Define a line by slope and y-intercept or by ax+by+c = 0 Additional b make the comparison complicated so we try to fix it at 1.0 If we use slope and y-intercept, we need to deal with infinity slope. class Line { double a; double b; double c; static Line pointsToLine(Point p1, Point p2){ if(Math.abs(p1.x - p2.x) \u003c EPS){ return new Line(1.0, 0.0, -p1.x); } else{ double a = -(p2.y - p1.y) / (p2.x - p1.x); double b = 1.0; double c = -(a * p1.x + b * p1.y); return new Line(a, b, c); } } Line(double a, double b, double c){ this.a = a; this.b = b; this.c = c; } static boolean areParallel(Line l1, Line l2){ return Math.abs(l1.a - l2.a) \u003c EPS \u0026\u0026 Math.abs(l1.b - l2.b) \u003c EPS; } static boolean areSame(Line l1, Line l2){ return areParallel(l1, l2) \u0026\u0026 Math.abs(l1.c - l2.c) \u003c EPS; } // X is find by multiply both eq1 by b2 and eq2 by b1 and subtract // Y is find by subsitute an eq with non zero y term. static Point areIntersect(Line l1, Line l2){ if(areParallel(l1, l2)) return null; double x = (l2.b * l1.c - l1.b * l2.c) / (l2.a * l1.b - l1.a * l2.b); if(Math.abs(l1.b) \u003e EPS) return new Point(x, -(l1.a * x + l1.c)); else return new Point(x, -(l2.a * x + l2.c)); } } ","date":"2022-04-04","objectID":"/algorithm/geometry/:2:0","tags":null,"title":"Geometry","uri":"/algorithm/geometry/"},{"categories":null,"content":"Line segment Line segment = line with 2 end points. ","date":"2022-04-04","objectID":"/algorithm/geometry/:2:1","tags":null,"title":"Geometry","uri":"/algorithm/geometry/"},{"categories":null,"content":"Vector class Vector{ double x; double y; public Vector(double x, double y){ this.x = x; this.y = y; } public Vector toVector(Point a, Point b){ return new Vector(b.x - a.x, b.y - a.y); } public Vector scale(double s){ return new Vector(x * s, y * s); } public Point translate(Point p){ return new Point(p.x + x, p.y+y); } static double dot(Vector b){ //projection of this vector on b return x * b.x + y * b.y; } public double normSq(){ return x * x + y * y; } public double cross(Vector b){ //cross product return x * b.y - y * b.x; } } Distance to line double distanceToLine(Point p, Point a, Point b){ Vector ap = new Vector(a, p); Vector ab = new Vector(a, b); double u = ap.dot(ab) / ab.normSq(); Point c = ab.scale(u).translate(a); return distance(p, c); } Distance to line segment double distanceToLineSegment(Point p, Point a, Point b){ Vector ap = new Vector(a, p); Vector ab = new Vector(a, b); double u = ap.dot(ab) / ab.normSq(); if(u \u003c 0.0) return distance(p, a); if(u \u003e 1.0) return distance(p, b); return distanceToLine(p, a, b); } Angle AOB double angle(Point a, Point o, Point b){ Vector oa = new Vector(o, a); Vector ob = new Vector(o, b); return acos(oa.dot(ob) / sqrt(oa.normSq() * ob.normSq())); } Counter clockwise test, collinear test // note: to accept collinear points, we have to change the ‘\u003e 0’ // returns true if point r is on the left side of line pq boolean ccw(Point p, Point q, Point r){ Vector pq = new Vector(p, q); Vector pr = new Vector(p, r); return pq.cross(pr) \u003e 0; } boolean collinear(Point p, Point q, Point r){ Vector pq = new Vector(p, q); Vector pr = new Vector(p, r); return Math.abs(pq.cross(pr)) \u003c EPS; } Integer version of Line class Line implements Comparable\u003cLine\u003e{ public int dy; public int dx; public int c; public Line(int dx, int dy, int c){ this.dx = dx; this.dy = dy; this.c = c; } @Override public int compareTo(Line o) { if(dx == o.dx){ if(dy == o.dy){ return c - o.c; } else return dy - o.dy; } else return dx-o.dx; } @Override public boolean equals(Object o){ if(o instanceof Line){ Line ol = (Line)o; return ol.dx == dx \u0026\u0026 ol.dy == dy \u0026\u0026 ol.c == c; } else return false; } @Override public int hashCode(){ return Integer.hashCode(dx+dy+c); } } Refer: Max Point on a Line ","date":"2022-04-04","objectID":"/algorithm/geometry/:2:2","tags":null,"title":"Geometry","uri":"/algorithm/geometry/"},{"categories":null,"content":"Circle class Circle{ Point center; double radius; public Circle(Point center, double radius){ this.center = center; this.radius = radius; } static Circle circle2PtsRad(Point p1, Point p2, double radius){ double d2 = (p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y); double det = radius * radius / d2 - 0.25; if(det \u003c 0.0) return null; double h = sqrt(det); double cx = (p1.x + p2.x) * 0.5 + (p1.y - p2.y) * h; double cy = (p1.y + p2.y) * 0.5 + (p2.x - p1.x) * h; Circle c = new Circle(new Point(cx, cy), radius); } } Operations: inside circle integer version int insideCircle(Point_I p, Point_I c, int r){ // all integer version int dx = p.x - c.x, dy = p.y - c.y; int Euc = dx * dx + dy * dy, rSq = r * r; // all integer return Euc \u003c rSq ? 0 : Euc == rSq ? 1 : 2; } //inside/border/outside ","date":"2022-04-04","objectID":"/algorithm/geometry/:3:0","tags":null,"title":"Geometry","uri":"/algorithm/geometry/"},{"categories":null,"content":"Triangle Operations: Area by Heron’s formula double area(double ab, double bc, double ca){ double s = 0.5 * (ab + bc + ca); return sqrt(s * (s - ab) * (s - bc) * (s - ca)); } In-circle radius double rInCircle(double ab, double bc, double ca){ double A = area(ab, bc, ca); return A / (0.5 * (ab + bc + ca)); } double rInCircle(Point a, Point b, Point c){ double ab = distance(a, b); double bc = distance(b, c); double ca = distance(c, a); return rInCircle(ab, bc, ca); } 3 points touching in-circle circumscribed circle center of circumscribed circle cosine law sin law Pythagorean theorem and tuples Quadrilaterals Operations: Rectangle Square Trapezium Parallelogram Kite Rhombus ","date":"2022-04-04","objectID":"/algorithm/geometry/:4:0","tags":null,"title":"Geometry","uri":"/algorithm/geometry/"},{"categories":null,"content":"polygon Operations: Representation //a list of points counter-clockwise // 6 points, entered in counter clockwise order, 0-based indexing vector\u003cpoint\u003e P; P.push_back(point(1, 1)); // P0 P.push_back(point(3, 3)); // P1 P.push_back(point(9, 1)); // P2 P.push_back(point(12, 4)); // P3 P.push_back(point(9, 7)); // P4 P.push_back(point(1, 7)); // P5 P.push_back(P[0]); // important: loop back Parameters of polygon // returns the perimeter, which is the sum of Euclidian distances // of consecutive line segments (polygon edges) double perimeter(const vector\u003cpoint\u003e \u0026P) { double result = 0.0; for (int i = 0; i \u003c (int)P.size()-1; i++) // remember that P[0] = P[n-1] result += dist(P[i], P[i+1]); return result; } Area of polygon Checking a polygon is convex A point is inside a polygon Cutting polygon with a straight line Finding covex hull ","date":"2022-04-04","objectID":"/algorithm/geometry/:5:0","tags":null,"title":"Geometry","uri":"/algorithm/geometry/"},{"categories":null,"content":"Transformation The rotation matrix is Refer: Rotate Image ","date":"2022-04-04","objectID":"/algorithm/geometry/:6:0","tags":null,"title":"Geometry","uri":"/algorithm/geometry/"},{"categories":null,"content":"Graph ","date":"2022-04-04","objectID":"/algorithm/graph/:0:0","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Data structure ","date":"2022-04-04","objectID":"/algorithm/graph/:1:0","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Adj list Shortcut: graph.adjlist class Pair implements Comparable\u003cPair\u003e { int first; int second; public Pair(int first, int second) { this.first = first; this.second = second; } @Override public int compareTo(Pair o) { if (first \u003c o.first) return -1; else if (first \u003e o.first) return 1; else { if (second \u003c o.second) return -1; else if (second \u003e o.second) return 1; return 0; } } } static ArrayList\u003cPair\u003e[] adj = new ArrayList[20001]; for (int i = 0; i \u003c adj.length; ++i) adj[i] = new ArrayList\u003cPair\u003e(); ","date":"2022-04-04","objectID":"/algorithm/graph/:1:1","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Adj Matrix Shortcut: graph.adjlist static int[][] AdjMat = new int[101][101]; ","date":"2022-04-04","objectID":"/algorithm/graph/:1:2","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Edge list Use by Kruskal algorithm, which sort the edge according to weighting. class Tuple implements Comparable\u003cTuple\u003e{ int first; int second, third; public Tuple(int a, int b, int c){ first = a; second = b; third = c; } @Override public int compareTo(Tuple o) { if(first \u003c o.first) return -1; else if(first \u003e o.first) return 1; else{ if(second \u003c o.second) return -1; else if(second \u003e o.second) return 1; else{ if(third \u003c o.third) return -1; else if(third \u003e o.third) return 1; else return 0; } } } } Stack\u003cTuple\u003e EdgeList = new Stack\u003cTuple\u003e(); // (weight, two vertices) of the edge ","date":"2022-04-04","objectID":"/algorithm/graph/:1:3","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"BFS Only iterative version, no recursive version. Time complexity: O(V + E) Shortcut: graph.bfs //TODO: fix it ASAP int INF = 1_000_000_000 Arrays.fill(d, INF); Queue\u003cInteger\u003e queue = new ArrayDeque\u003c\u003e(); d[s] = 0; queue.add(s); while(!queue.isEmpty()){ int u = queue.poll(); for(int p=0; p\u003cadjList[u].size(); ++p){ Pair v = adjList[u].get(p); if(d[v] == INF){ d[v.first] = d[u] + 1; queue.add(v.first); } } } Refer: UVA10986 ","date":"2022-04-04","objectID":"/algorithm/graph/:2:0","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Meet in the middle There are 2 favor, one is BFS from both end, another one is to check the size and decide which 1 to expand Try to abstract out BFS data and routine to have clean implementation. //at main BFSData[] bfsData = new BFSData[2]; bfsData[0] = new BFSData(totalWordCnt); bfsData[1] = new BFSData(totalWordCnt); bfsData[0].q.offer(beginWord); bfsData[0].distance[idx.get(beginWord)] =0; bfsData[1].q.offer(endWord); bfsData[1].distance[idx.get(endWord)] =0; while(bfsData[0].q.size() \u003e 0 \u0026\u0026 bfsData[1].q.size() \u003e 0){ int mode = 0; if(bfsData[0].q.size() \u003e bfsData[1].q.size()) mode = 1; int join = bfs(bfsData[mode], bfsData[1-mode]); if(join != -1) //we found a join. return bfsData[0].distance[join] + bfsData[1].distance[join]+1; } private int bfs(BFSData primary, BFSData secondary){ Queue\u003cString\u003e next = new ArrayDeque\u003c\u003e(); while(!primary.q.isEmpty()){ String uWord = primary.q.poll(); int u = idx.getOrDefault(uWord, -1); if(secondary.distance[u] != -1) return u; List\u003cString\u003e keys = generateTransKey(uWord); for(String key: keys){ List\u003cInteger\u003e kl = lookup.get(key); if(kl == null) continue; for(Integer ki: kl){ if(primary.distance[ki] == -1){ next.offer(wordList.get(ki)); primary.distance[ki] = primary.distance[u]+1; } } } } primary.q = next; return -1; } class BFSData{ Queue\u003cString\u003e q; int[] distance; List\u003cInteger\u003e[] parent; public BFSData(int n){ q = new ArrayDeque\u003c\u003e(); distance = new int[n]; Arrays.fill(distance, -1); parent = new List[n]; Arrays.fill(parent, null); } } Refer: Word Ladder Refer: Word Ladder II Refer: UVA11212 ","date":"2022-04-04","objectID":"/algorithm/graph/:2:1","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"DFS Time complexity: O(V+E) Shortcut: graph.dfs.it, graph.dfs.r //iterative version public static void dfs(int s) { visited = new boolean[V]; // depth-first search using an explicit stack Stack\u003cInteger\u003e stack = new Stack\u003cInteger\u003e(); visited[s] = true; stack.push(s); while (!stack.isEmpty()) { int v = stack.peek(); int w = -1; for(int i=0; i\u003cadjcnt[v]; ++i) { if (!visited[adj[v][i]]) w = adj[v][i]; break; } if(w != -1){ visited[w] = true; stack.push(w); } else { stack.pop(); } } } int[] dfs_num = new int[V]; Arrays.fill(dfs_num, UNVISITED); void dfs(int u) { // DFS for normal usage: as graph traversal algorithm dfs_num[u] = VISITED; // important: we mark this vertex as visited for (int j = 0; j \u003c AdjList[u].size(); j++) { // default DS: AdjList ii v = AdjList[u].get(j); // v is a (neighbor, weight) pair if (dfs_num[v.first] == UNVISITED) // important check to avoid cycle dfs(v.first); // recursively visits unvisited neighbors of vertex u } } // for simple graph traversal, we ignore the weight stored at v.second ","date":"2022-04-04","objectID":"/algorithm/graph/:3:0","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"iterative deepening depth-first search Use bfs instead, not much use case here. ","date":"2022-04-04","objectID":"/algorithm/graph/:3:1","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"connected component Connected component: do a dfs from each vertex, the visited components are the connected components. or we can do a union find ","date":"2022-04-04","objectID":"/algorithm/graph/:4:0","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Strongly connected component Time complexity: O(|V|+|E|). If graph is smaller, can also use Floyd-Warshall algorithm. /* You can get the number of scc and the corresponding root. init with Arrays.fill(dfs_num, UNVISITED); Arrays.fill(dfs_low, 0); Arrays.fill(visited, false); dfsNumberCounter = numSCC = 0; */ Stack\u003cInteger\u003e S; int dfsNumberCounter; int[] dfs_low; boolean[] visited; int[] dfs_num; List\u003cList\u003cPair\u003e\u003e AdjList; int numSCC; final int UNVISITED = -1; void tarjanSCC(int u) { dfs_low[u] = dfs_num[u] = dfsNumberCounter++; // dfs_low[u] \u003c= dfs_num[u] S.push(u); // stores u in a vector based on order of visitation visited[u] = true; for (int j = 0; j \u003c (int)AdjList.get(u).size(); j++) { Pair v = AdjList.get(u).get(j); if (dfs_num[v.first] == UNVISITED) tarjanSCC(v.first); if (visited[v.first]) // condition for update dfs_low[u] = Math.min(dfs_low[u], dfs_low[v.first]); } if (dfs_low[u] == dfs_num[u]) { // if this is a root (start) of an SCC ++numSCC; //System.out.format(\"SCC %d:\", numSCC); // this part is done after recursion while (true) { int v = S.pop(); visited[v] = false; //System.out.format(\" %d\", v); if (u == v) break; } //System.out.print(\"\\n\"); } } ","date":"2022-04-04","objectID":"/algorithm/graph/:5:0","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"flood fill Assume a 2d map, we want to flood-fill. int dr[] = {1,1,0,-1,-1,-1, 0, 1}; // trick to explore an implicit 2D grid int dc[] = {0,1,1, 1, 0,-1,-1,-1}; // S,SE,E,NE,N,NW,W,SW neighbors int floodfill(char[][] grid, int r, int c, char c1, char c2) { // returns the size of CC int R=grid.length; int C=R \u003e 0? grid[0].length: 0; if (r \u003c 0 || r \u003e= R || c \u003c 0 || c \u003e= C) return 0; // outside grid if (grid[r][c] != c1) return 0; // does not have color c1 int ans = 1; // adds 1 to ans because vertex (r, c) has c1 as its color grid[r][c] = c2; // now recolors vertex (r, c) to c2 to avoid cycling! for (int d = 0; d \u003c 8; d++) ans += floodfill(grid, r + dr[d], c + dc[d], c1, c2); return ans; // the code is neat due to dr[] and dc[] } ","date":"2022-04-04","objectID":"/algorithm/graph/:6:0","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Minimum spanning tree ","date":"2022-04-04","objectID":"/algorithm/graph/:7:0","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Kruskal Time complexity: Shortcut: graph.kruskal //require tuple //require union find public int kruskal(ArrayList\u003cTuple\u003e EdgeList, ArrayList\u003cTuple\u003e result){ Collections.sort(EdgeList); int mst_cost = 0; UnionFind UF = new UnionFind(m); UF.init(); for (int i = 0; i \u003c n; i++) { Tuple front = EdgeList.get(i); if (!UF.isSameSet(front.second, front.third)) { mst_cost += front.first; result.add(front); UF.unionSet(front.second, front.third); } } return mst_cost; } Refer: UVA10600 ","date":"2022-04-04","objectID":"/algorithm/graph/:7:1","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Prim TODO: check with cp3 Time complexity: Shortcut: graph.prim ","date":"2022-04-04","objectID":"/algorithm/graph/:7:2","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Shortest path ","date":"2022-04-04","objectID":"/algorithm/graph/:8:0","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Single source shortest path BFS //this version with distance Arrays.fill(dist, INF); dist[s] = 0; // INF = 1Billion to avoid overflow PriorityQueue\u003cPair\u003e pq = new PriorityQueue\u003cPair\u003e(); pq.offer(new Pair(0, s)); while (!pq.isEmpty()) { // main loop Pair front = pq.poll(); int d = front.first, u = front.second; if (d \u003e dist[u]) continue; // this is a very important check for (int j = 0; j \u003c adj[u].size(); j++) { Pair v = adj[u].get(j); // all outgoing edges from u if (dist[u] + v.second \u003c dist[v.first]) { dist[v.first] = dist[u] + v.second; // relax operation pq.offer(new Pair(dist[v.first], v.first)); } } } // this variant can cause duplicate items in the priority queue Dijkstra Time complexity: O((V+E) logV) Shortcut: graph.dij //require pair static int[] dist = new int[102]; static final int INF = 1000000000; //the result is in dist array public void dijkstra(int e){ Arrays.fill(dist, INF); dist[e] = 0; // INF = 1Billion to avoid overflow PriorityQueue\u003cPair\u003e pq = new PriorityQueue\u003cPair\u003e(); pq.offer(new Pair(0, e)); while (!pq.isEmpty()) { // main loop Pair front = pq.poll(); int d = front.first, u = front.second; if (d \u003e dist[u]) continue; // this is a very important check for (int j = 0; j \u003c adj[u].size(); j++) { Pair v = adj[u].get(j); // all outgoing edges from u if (dist[u] + v.second \u003c dist[v.first]) { dist[v.first] = dist[u] + v.second; // relax operation pq.offer(new Pair(dist[v.first], v.first)); } } } // this variant can cause duplicate items in the priority queue } ","date":"2022-04-04","objectID":"/algorithm/graph/:8:1","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Bellman ford Can handle negative cycle Time complexity: O(VE) ArrayList\u003cPair\u003e[] adj = new ArrayList[201]; final int INF = 1_000_000_000; int[] dist = new int[201]; //place the source at 0 public bellman_ford(int S){ Arrays.fill(dist, INF); dist[S] = 0; for (int i = 0; i \u003c n - 1; i++) // relax all E edges V-1 times for (int u = 0; u \u003c n; u++) // these two loops = O(E), overall O(VE) for (int j = 0; j \u003c adj[u].size(); j++) { Pair v = adj[u].get(j); // record SP spanning here if needed dist[v.first] = Math.min(dist[v.first], dist[u] + v.second); // relax } } Refer: UVA10449 ","date":"2022-04-04","objectID":"/algorithm/graph/:8:2","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Shortest Path Faster Algorithm This algorithm run as fast as Dijkstra, but it can handle negative cycle. Time complexity: O(k * E) Shortcut: graph.spfa //TODO: To be completed ","date":"2022-04-04","objectID":"/algorithm/graph/:8:3","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Floyd Warshall - All pair shortest path Time complexity: O(V^3) Shortcut: graph.floyd Can be used to * detected the negative cycle * SCC =\u003e if Adj[i][j] and Adj[j][i] are not INF, they belongs to same SCC. * Radius of the graph * Minmax ```java static final int INF = 1000000000; public void flyodWarshall(){ // inside int main() // precondition: AdjMat[i][j] contains the weight of edge (i, j) // or INF (1B) if there is no such edge // AdjMat is a 32-bit signed integer array for (int k = 0; k \u003c V; k++) // remember that loop order is k-\u003ei-\u003ej for (int i = 0; i \u003c V; i++) for (int j = 0; j \u003c V; j++) AdjMat[i][j] = Math.min(AdjMat[i][j], AdjMat[i][k] + AdjMat[k][j]); } Refer: UVA11463 Print shortest path Shortcut: graph.floyd.print static final int INF = 1000000000; public void flyodWarshall(){ // inside int main() // precondition: AdjMat[i][j] contains the weight of edge (i, j) // or INF (1B) if there is no such edge // AdjMat is a 32-bit signed integer array for (int k = 0; k \u003c V; k++) // remember that loop order is k-\u003ei-\u003ej for (int i = 0; i \u003c V; i++) for (int j = 0; j \u003c V; j++) if((AdjMat[i][k] + AdjMat[k][j] \u003c AdjMat[i][j]) { AdjMat[i][j] = AdjMat[i][k] + AdjMat[k][j]; p[i][j] = p[k][j] } } void printPath(int i, int j) { if (i != j) printPath(i, p[i][j]); System.out.print(\" \" + j); } ","date":"2022-04-04","objectID":"/algorithm/graph/:8:4","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Articulation point and bridges Time complexity: O(V + E) The idea is to find loop in undirected graph. int dfsNumberCounter = 0; List\u003cList\u003cPair\u003e\u003e AdjList = new ArrayList\u003c\u003e(); var dfs_num = new int[V]; var dfs_low = new int[V]; var dfs_parent = new int[V]; var articulation_vertex = new boolean[V]; final static int UNVISITED = -1; Arrays.fill(dfs_num, UNVISITED); Arrays.fill(dfs_low, 0); Arrays.fill(dfs_parent, 0); Arrays.fill(articulation_vertex, false); void articulationPointAndBridge(int u) { dfs_low[u] = dfs_num[u] = dfsNumberCounter++; // dfs_low[u] \u003c= dfs_num[u] for (int j = 0; j \u003c (int)AdjList.get(u).size(); j++) { Pair v = AdjList.get(u).get(j); if (dfs_num[v.first] == UNVISITED) { // a tree edge dfs_parent[v.first] = u; if (u == dfsRoot) rootChildren++; // special case if u is a root articulationPointAndBridge(v.first); if (dfs_low[v.first] \u003e= dfs_num[u]) // for articulation point articulation_vertex[u] = true; // store this information first //if (dfs_low[v.first] \u003e dfs_num[u]) // for bridge // bridges.add(new Pair(Math.min(u, v.first), Math.max(u, v.first))); dfs_low[u] = Math.min(dfs_low[u], dfs_low[v.first]); // update dfs_low[u] } else if (v.first != dfs_parent[u]) // a back edge and not direct cycle dfs_low[u] = Math.min(dfs_low[u], dfs_num[v.first]); // update dfs_low[u] } } Reference: Critical Connections in a Network Refer: UVA10765 ","date":"2022-04-04","objectID":"/algorithm/graph/:9:0","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Network flow Find the max flow of the graph, the value is also equal to the min cut. Can also apply on bipartite grpah, result in maximum cardinality bipartite matching. (each edge weight is 1) There are 3 different path augment algorithms, just different favor, and runtime more or less the same. 11380 Down Went The Titanic 820 Internet Bandwidth Ford Fulkerson 0.75 0.33 Edmond Karp 0.88 0.35 Dinic 0.81 0.36 ","date":"2022-04-04","objectID":"/algorithm/graph/:10:0","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Ford Fulkerson Not a good candidate for contest because f can be large. Time complexity: O(f* E) where f* = maximum flow Shortcut: graph.ff int[][] res = new int[maxV][maxV]; int mf, f, s, t; // global variables int[] p; // p stores the BFS spanning tree from s void augment(int v, int minEdge) { // traverse BFS spanning tree from s-\u003et if (v == s) { f = minEdge; return; } // record minEdge in a global var f else if (p[v] != -1) { augment(p[v], Math.min(minEdge, res[p[v]][v])); res[p[v]][v] -= f; res[v][p[v]] += f; } } BitSet vis; int fulkerson(int sIdx, int tIdx) { s = sIdx; t = tIdx; // inside int main(), assume that we have both res (AdjMatrix) and AdjList mf = 0; while (true) { // now a true O(VE^2) Edmonds Karp’s algorithm f = 0; BitSet vis = new BitSet(maxV); vis.set(s); // we change vi dist to bitset! p = new int[maxV]; Arrays.fill(p, -1); dfs(s); Queue\u003cInteger\u003e q = new ArrayDeque\u003c\u003e(); q.offer(s); augment(t, INF); if (f == 0) break; mf += f; } return mf; } dfs(int u){ for (int j = 0; j \u003c AdjList.get(u).size(); j++) { // AdjList here! int v = AdjList.get(u).get(j); // we use vector\u003cvi\u003e AdjList if (res[u][v] \u003e 0 \u0026\u0026 !vis.get(v)) { vis.set(v); p[v] = u; dfs(v); } } } ","date":"2022-04-04","objectID":"/algorithm/graph/:10:1","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Edmond Karp Time complexity: O(VE^2) Shortcut: graph.ek int[][] res = new int[maxV][maxV]; int mf, f, s, t; // global variables int[] p; // p stores the BFS spanning tree from s void augment(int v, int minEdge) { // traverse BFS spanning tree from s-\u003et if (v == s) { f = minEdge; return; } // record minEdge in a global var f else if (p[v] != -1) { augment(p[v], Math.min(minEdge, res[p[v]][v])); res[p[v]][v] -= f; res[v][p[v]] += f; } } int edmondKarp(int sIdx, int tIdx) { s = sIdx; t = tIdx; // inside int main(), assume that we have both res (AdjMatrix) and AdjList mf = 0; while (true) { // now a true O(VE^2) Edmonds Karp’s algorithm f = 0; BitSet vis = new BitSet(maxV); vis.set(s); // we change vi dist to bitset! Queue\u003cInteger\u003e q = new ArrayDeque\u003c\u003e(); q.offer(s); p = new int[maxV]; Arrays.fill(p, -1); while (!q.isEmpty()) { int u = q.poll(); if (u == t) break; for (int j = 0; j \u003c AdjList.get(u).size(); j++) { // AdjList here! int v = AdjList.get(u).get(j); // we use vector\u003cvi\u003e AdjList if (res[u][v] \u003e 0 \u0026\u0026 !vis.get(v)) { vis.set(v); q.offer(v); p[v] = u; } } } augment(t, INF); if (f == 0) break; mf += f; } return mf; } Refer: UVA11380 ","date":"2022-04-04","objectID":"/algorithm/graph/:10:2","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Dinic Dinic reduce to Hopcraft-Karp? Time complexity: O(V^2 E) Shortcut: graph.dinic //new code at: https://github.com/stevenhalim/cpbook-code/blob/master/ch8/maxflow.java int[] d; int dinic(int sIdx, int tIdx) { s = sIdx; t = tIdx; // inside int main(), assume that we have both res (AdjMatrix) and AdjList mf = 0; while (true) { // now a true O(VE^2) Edmonds Karp’s algorithm f = 0; vis = new BitSet(maxV); vis.set(s); // we change vi dist to bitset! Queue\u003cInteger\u003e q = new ArrayDeque\u003c\u003e(); q.offer(s); d = new int[maxV]; d[s] = 0; p = new int[maxV]; Arrays.fill(p, -1); while (!q.isEmpty()) { int u = q.poll(); if (u == t) break; for (int j = 0; j \u003c AdjList.get(u).size(); j++) { // AdjList here! int v = AdjList.get(u).get(j); // we use vector\u003cvi\u003e AdjList if (res[u][v] \u003e 0 \u0026\u0026 !vis.get(v)) { vis.set(v); q.offer(v); d[v] = d[u] + 1; p[v] = u; } } } int sf = 0; while(true){ f = 0; augment(t, INF); if (f == 0) break; sf += f; vis = new BitSet(maxV); vis.set(s); p = new int[maxV]; Arrays.fill(p, -1); dfs2(s); } /* this is an optimization. for(int v=0; v\u003cmaxV; ++v){ if(d[v]+1 == d[t]) { f = 0; augment(v, Math.min(INF, res[v][t])); res[v][t] -= f; res[t][v] += f; sf += f; } } */ if(sf == 0) break; mf += sf; } return mf; } void dfs2(int u){ for (int j = 0; j \u003c AdjList.get(u).size(); j++) { // AdjList here! int v = AdjList.get(u).get(j); // we use vector\u003cvi\u003e AdjList if (d[v] == d[u]+1 \u0026\u0026 res[u][v] \u003e 0 \u0026\u0026 !vis.get(v)) { vis.set(v); p[v] = u; dfs(v); } } } ","date":"2022-04-04","objectID":"/algorithm/graph/:10:3","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Find min-cut nodes //TODO: to be completed ","date":"2022-04-04","objectID":"/algorithm/graph/:10:4","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"bipartite graph ","date":"2022-04-04","objectID":"/algorithm/graph/:11:0","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Check Use BFS to do the checking. Time complexity: O(V+E) int INF = 1_000_000_000 Arrays.fill(color, INF); Queue\u003cInteger\u003e queue = new ArrayDeque\u003c\u003e(); bool isBipartite = true; color[s] = 0; queue.add(s); while(!queue.isEmpty() \u0026 isBipartite){ int u = queue.poll(); for(int p=0; p\u003cadjList[u].size(); ++p){ Pair v = adjList[u].get(p); if(visited[v] == INF){ color[v.first] = 1 - color[u]; queue.add(v.first); } else if(color[v.first] == color[u]){ isBipartite = false; break; } } } ","date":"2022-04-04","objectID":"/algorithm/graph/:11:1","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Hopcroft Karp’s algorithm You can add a source and sink to the graph, and run Edmonds Karp. Time complexity: O(sqrt(V) * E) //TODO: to be implemented Test ","date":"2022-04-04","objectID":"/algorithm/graph/:11:2","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"DAG ","date":"2022-04-04","objectID":"/algorithm/graph/:12:0","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Topological sort Linear ordering of vertices such taht for every directed edge uv, vertex u comes before v in the ordering. ","date":"2022-04-04","objectID":"/algorithm/graph/:13:0","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"DFS If any ordering will do, prefer this algorithm Time complexity: O(V+E) int EXPLORED = 1; int VISITED = 2; int UNVISITED = 0; ts = new ArrayList\u003cInteger\u003e(); for(int i=0; i\u003cnumCourses; ++i){ //do dfs if not visted if(visited[i] == UNVISITED){ boolean hasCycle = dfs(i); if(hasCycle) System.out.println(\"Have cycle, no topological sort\"); } } Collections.reverse(ts); ArrayList\u003cInteger\u003e result =ts; boolean dfs(int u){ visited[u] = EXPLORED; for(int i=0; i\u003cadjList[u].size(); ++i){ int v = adjList[u].get(i); //System.out.println(\"\" + u + \"-\u003e\" + v + \":\" + visited[v]); if(visited[v] == EXPLORED) return true; if(visited[v] == VISITED) continue; boolean hasCycle = dfs(v); if(hasCycle) return true; } order.add(u); visited[u] = VISITED; return false; } Refer: UVA11060 Refer: Course Schedule II ","date":"2022-04-04","objectID":"/algorithm/graph/:13:1","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Kahn’s algorithm When additional requirement like take the one which appears first in the input. This algorithm works. Time complexity: O(V+E) ArrayList\u003cInteger\u003e Kahn(int V) { //this either sort all, or fail to sort any. PriorityQueue\u003cInteger\u003e queue = new PriorityQueue\u003cInteger\u003e(); ArrayList\u003cInteger\u003e answer = new ArrayList\u003cInteger\u003e(); for(int i=0; i\u003cV; ++i) if(indegree[i] == 0){ queue.offer(i); indegree[i]--; } while(!queue.isEmpty()){ int u= queue.poll(); for(int j=0; j\u003cadjcnt[u]; ++j){ indegree[adj[u][j]]--; } for(int i=0; i\u003cadjcnt[u]; ++i){ int v = adj[u][i]; if(indegree[v] == 0) { queue.offer(v); indegree[v]--; } } answer.add(u); } return answer; } Refer: UVA11060 ","date":"2022-04-04","objectID":"/algorithm/graph/:13:2","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Graph matching ","date":"2022-04-04","objectID":"/algorithm/graph/:14:0","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Unweighted MCBM Hopcroft Karp Time complexity: O(E*sqrt(V)) Refer: Maximum Number of Accepted Invitations ","date":"2022-04-04","objectID":"/algorithm/graph/:14:1","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Weighted MCBM Hungarian algorithm / Kuhn Munkres’s algorithm Time complexity: O(V^3) Refer: Maximum Number of Accepted Invitations ","date":"2022-04-04","objectID":"/algorithm/graph/:14:2","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Unweighted MCM Edmond algorithm Time complexity: if small, apply the DP is also possible. //TOOD: to be completed ","date":"2022-04-04","objectID":"/algorithm/graph/:14:3","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Weighted MCM DP with bitmask //required numberOfSetBits //set 1 to node which need to be matched //second path contained the weight of the edge private int weightedMCM(int bitmask){ //pair up someone still not in a group and then return if(dp[bitmask] != INF) return dp[bitmask]; if(NumberOfSetBits(bitmask) == N) return 0; int result = INF; for (int i = 0; i \u003c N; i++) { if((bitmask \u0026 (1 \u003c\u003c i)) != 0) continue; for (Pair p: adjList[i]) { if(i==p.first) continue; if((bitmask \u0026 (1 \u003c\u003c p.first)) != 0) continue; int temp = dpHelper(bitmask | (1 \u003c\u003c i) | (1 \u003c\u003c p.first)) + p.second; if(temp \u003c result) result = temp; } } dp[bitmask] =result; return result; } ","date":"2022-04-04","objectID":"/algorithm/graph/:14:4","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Tree ","date":"2022-04-04","objectID":"/algorithm/graph/:15:0","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Binary search tree BST has many properties, and can be used to keep track the rank of element from a stream. To delete a node from binary tree with 2 children, replace the delete node value with either max value from left subtree (Please aware how BST handle duplicate, put it left or right?) min value from right subtree then the problem become deleting node having only 1 child. class BST{ TreeNode root; public RankFromStream(){ root = null; } void add(int x){ root = addHelper(root, val); } TreeNode addHelper(TreeNode root, int val){ if(root == null) return new TreeNode(val); if(root.val == val){ //no duplicate? } else if(root.val \u003e val){ root.left = addHelper(root.left, val); } else{ root.right = addHelper(root.right, val); } return root; } void deleteKey(int key) { root = deleteRec(root, key); } /* A recursive function to delete an existing key in BST */ TreeNode deleteRec(TreeNode root, int key) { /* Base Case: If the tree is empty */ if (root == null) return root; /* Otherwise, recur down the tree */ if (key \u003c root.key) root.left = deleteRec(root.left, key); else if (key \u003e root.key) root.right = deleteRec(root.right, key); // if key is same as root's // key, then This is the // node to be deleted else { // node with only one child or no child if (root.left == null) return root.right; else if (root.right == null) return root.left; // node with two children: Get the inorder // successor (smallest in the right subtree) root.key = minValue(root.right); // Delete the inorder successor root.right = deleteRec(root.right, root.key); } return root; } int minValue(TreeNode root) { int minv = root.key; while (root.left != null) { minv = root.left.key; root = root.left; } return minv; } } class TreeNode{ TreeNode left; TreeNode right; int val; //int leftSize; for checking rank public RankTreeNode(int val){ this.val = val; //this.leftSize = 0; } } Refer: Rank Transform of an Array Refer: Rank from stream ","date":"2022-04-04","objectID":"/algorithm/graph/:15:1","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Minimum vertex cover tree ","date":"2022-04-04","objectID":"/algorithm/graph/:15:2","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Display order Post Post order iterative is a little bit difficult in stack. You have to make it in some way, either push it 2 times, or push it with the right under it. Shortcut: tree.post.r, tree.post.it private void postOrder(TreeNode node) { if (node == null) { return; } postOrder(node.left); postOrder(node.right); System.out.printf(\"%s \", node.data); } ArrayList\u003cInteger\u003e postOrderIterative(Node node) { Stack\u003cNode\u003e S = new Stack\u003cNode\u003e(); ArrayList\u003cInteger\u003e list = new ArrayList\u003c\u003e(); // Check for empty tree if (node == null) return list; S.push(node); Node prev = null; while (!S.isEmpty()) { Node current = S.peek(); /* go down the tree in search of a leaf an if so process it and pop stack otherwise move down */ if (prev == null || prev.left == current || prev.right == current) { if (current.left != null) S.push(current.left); else if (current.right != null) S.push(current.right); else { S.pop(); list.add(current.data); } /* go up the tree from left node, if the child is right push it onto stack otherwise process parent and pop stack */ } else if (current.left == prev) { if (current.right != null) S.push(current.right); else { S.pop(); list.add(current.data); } /* go up the tree from right node and after coming back from right node process parent and pop stack */ } else if (current.right == prev) { S.pop(); list.add(current.data); } prev = current; } return list; } In Shortcut: tree.in.r, tree.in.it private void inorder(TreeNode node) { if (node == null) { return; } postOrder(node.left); System.out.printf(\"%s \", node.data); postOrder(node.right); } ArrayList\u003cInteger\u003e void inorder(){ ArrayList\u003cInteger\u003e list = new ArrayList\u003c\u003e(); if (root == null) return list; Stack\u003cNode\u003e s = new Stack\u003cNode\u003e(); Node curr = root; // traverse the tree while (curr != null || s.size() \u003e 0) { /* Reach the left most Node of the curr Node */ while (curr != null) { /* place pointer to a tree node on the stack before traversing the node's left subtree */ s.push(curr); curr = curr.left; } /* Current must be NULL at this point */ curr = s.pop(); list.add(curr.data); /* we have visited the node and its left subtree. Now, it's right subtree's turn */ curr = curr.right; } } Refer: Kth Smallest Element in BST Pre Shortcut: tree.pre.r, tree.pre.it private void preorder(TreeNode node) { if (node == null) { return; } System.out.printf(\"%s \", node.data); postOrder(node.left); postOrder(node.right); } // An iterative process to print preorder traversal of Binary tree ArrayList\u003cInteger\u003e preorder(Node node) { ArrayList\u003cInteger\u003e list = new ArrayList\u003c\u003e(); // Base Case if (node == null) { return; } // Create an empty stack and push root to it Stack\u003cNode\u003e nodeStack = new Stack\u003cNode\u003e(); nodeStack.push(root); /* Pop all items one by one. Do following for every popped item a) print it b) push its right child c) push its left child Note that right child is pushed first so that left is processed first */ while (nodeStack.empty() == false) { // Pop the top item from stack and print it Node mynode = nodeStack.peek(); list.add(mynode.data); nodeStack.pop(); // Push right and left children of the popped node to stack if (mynode.right != null) { nodeStack.push(mynode.right); } if (mynode.left != null) { nodeStack.push(mynode.left); } } } ","date":"2022-04-04","objectID":"/algorithm/graph/:15:3","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Euler graph Although very similiar, Hamiltonian cycle, which pass through every nodes, is NP-complete! ","date":"2022-04-04","objectID":"/algorithm/graph/:16:0","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Check To have a path: only 2 vertices have odd degree, and start and end from there To have a tour: all verticies have even degree ","date":"2022-04-04","objectID":"/algorithm/graph/:16:1","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Cycle and Path //TODO: review //in the adj graph, set second as 1 first List\u003cInteger\u003e cyc; public void EulerTour(int idx, int u) { for (int j = 0; j \u003c (int)AdjList.get(u).size(); j++) { Pair v = AdjList.get(u).get(j); if (v.second != 0) { // if this edge can still be used/not removed v.second = 0; // make the weight of this edge to be 0 (‘removed’) for (int k = 0; k \u003c AdjList.get(v.first).size(); k++) { Pair uu = AdjList.get(v.first).get(k); // remove bi-directional edge once only. if (uu.first == u \u0026\u0026 uu.second != 0) { uu.second = 0; break; } } cyc.add(idx, u); EulerTour(idx+1, v.first); } } } //TODO: please check https://leetcode.com/submissions/detail/636653134/ ","date":"2022-04-04","objectID":"/algorithm/graph/:16:2","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"A* //TOOD: to be complete ","date":"2022-04-04","objectID":"/algorithm/graph/:17:0","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Iterative deepening A* //TOOD: to be complete ","date":"2022-04-04","objectID":"/algorithm/graph/:17:1","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Chinese postman problem //require dijsktra //require weighted MCM private int chinesePostman(int N, ArrayList\u003cPair\u003e[] adjList) { int ans = 0; HashSet\u003cInteger\u003e oddNodes = new HashSet\u003c\u003e(); //build a subgraph of odd node and do a minimum weight perfect matching for (int i = 0; i \u003c N; i++) { int cnt = 0; for (int j = 0; j \u003c adjList[i].size(); j++) { if(adjList[i].get(j).first == i) continue; else ++cnt; } if(cnt %2==1) oddNodes.add(i); } //dijkstra //new adjlist ArrayList\u003cPair\u003e[] adjListOdd= new ArrayList[N]; for (int i = 0; i \u003c N; i++) { adjListOdd[i] = new ArrayList\u003c\u003e(); } this.N = N; for (int n: oddNodes) { int[] a = dijkstra(n, adjList); for (int m:oddNodes){ if(n \u003e= m) continue; adjListOdd[n].add(new Pair(m, a[m])); adjListOdd[m].add(new Pair(n, a[m])); } } this.adjList = adjListOdd; //new additional path from minimum weight matching for (int i = 0; i \u003c dp.length; i++) { dp[i] = INF; } //set all none related nodes to 1 int bitmask = 0; for (int i = 0; i \u003c N; i++) { if(oddNodes.contains(i)) continue; bitmask = bitmask | (1 \u003c\u003c i); } ans = weightedMCM(bitmask); //add up each path in original graph for (int i = 0; i \u003c N; i++) { for (int j = 0; j \u003c adjList[i].size(); j++) { if(i \u003c= adjList[i].get(j).first) ans += adjList[i].get(j).second; } } return ans; } Refer: UVA10296 ","date":"2022-04-04","objectID":"/algorithm/graph/:18:0","tags":null,"title":"Graph","uri":"/algorithm/graph/"},{"categories":null,"content":"Maths ","date":"2022-04-04","objectID":"/algorithm/math/:0:0","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Master therom $$ T(n) = aT(\\frac{n}{b}) + f(n^d) \\begin{cases} \u0026 \\text{ if } a=b^d, T(n)=O(n^d logn)\\ \u0026 \\text{ if } a\u003cb^d, T(n)=O(n^d)\\ \u0026 \\text{ if } a\u003eb^d, T(n)=O(n^{log_{b}a}) \\end{cases} $$ First case: binary search: $ a=1, b=2, d=0 =\u003e a=b^d, T(n)=O(n^0 * log(n)) = O(log(n))$ sorting: $ a=2, b=2, d=1 =\u003e a=b^d, T(n)=O(n * log(n))$ Third case: binary tree traverse: $ a=2, b=2, d=0 =\u003e a\u003eb^d, T(n)=O(n^{log_{2}2}) = O(n) $ ","date":"2022-04-04","objectID":"/algorithm/math/:1:0","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Fibonacci There are close-form and also matrix form Matrix multiplication is associative Time complexity: O(log n) Shortcut: fibonacci.close, fibonacci.matrix int fib(int n){ int F[][] = new int[][]{{1,1},{1,0}}; if (n == 0) return 0; power(F, n-1); return F[0][0]; } void multiply(int F[][], int M[][]) { int x = F[0][0]*M[0][0] + F[0][1]*M[1][0]; int y = F[0][0]*M[0][1] + F[0][1]*M[1][1]; int z = F[1][0]*M[0][0] + F[1][1]*M[1][0]; int w = F[1][0]*M[0][1] + F[1][1]*M[1][1]; F[0][0] = x; F[0][1] = y; F[1][0] = z; F[1][1] = w; } /* Optimized version of power() in method 4 */ void power(int F[][], int n) { if( n == 0 || n == 1) return; int M[][] = new int[][]{{1,1},{1,0}}; power(F, n/2); multiply(F, F); if (n%2 != 0) multiply(F, M); } ","date":"2022-04-04","objectID":"/algorithm/math/:2:0","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Catalan Cat(N) can calculate the following: distinct binary tree of node N way to parathesis way to triangluarize convex polygon monotonic path in square grid number: 1, 1, 2, 5, 14, 42, 132, 429, 1430 //this implementation can only be at 30 static long catalanNumber(int n){ if(n == 0|| n ==1) return 1; return catalanNumber(n-1) * (2*n) * (2*n-1) / (n+1) / n; } ","date":"2022-04-04","objectID":"/algorithm/math/:3:0","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Factorial For long, it can hold maximum of 20! long fact(int n) { long res = 1; for (int i = 2; i \u003c= n; i++) res = res * i; return res; } ","date":"2022-04-04","objectID":"/algorithm/math/:4:0","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Combinatorics Each row in pascal triangle is power of 2. ","date":"2022-04-04","objectID":"/algorithm/math/:5:0","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"nCr / Binomial Shortcut: math.ncr //This implementation overflow beyond 60 long C(int n, int r) { if(r \u003e n - r) r = n - r; // because C(n, r) == C(n, n - r) long ans = 1; int i; for(i = 1; i \u003c= r; i++) { ans *= n - r + i; ans /= i; } return ans; } //This impl have modulo, no restriction long C(int n, int r, int mod) { if(r \u003e n - r) r = n - r; // because C(n, r) == C(n, n - r) long ans = 1; int i; for(i = 1; i \u003c= r; i++) { long v = (1L * (n - r + i) * multipicativeInv(i, modulo)) % modulo; ans = (ans * v) % modulo; } return ans; } ","date":"2022-04-04","objectID":"/algorithm/math/:5:1","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"nPr //this implementation overflow beyond 20 long nPr(int n, int r){ long res = 1; for (int i = n; i \u003e n - r; i--) res *= i; return res; } ","date":"2022-04-04","objectID":"/algorithm/math/:5:2","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Generate all permutation (Sorted) public void nextPermutation(int[] nums) { if(nums.length == 1) return; // Find longest non-increasing suffix int i = nums.length - 1; while (i \u003e 0 \u0026\u0026 nums[i - 1] \u003e= nums[i]) i--; // Now i is the head index of the suffix // Are we at the last permutation already? if (i \u003c= 0){ Arrays.sort(nums); return; } // Let array[i - 1] be the pivot // Find rightmost element that exceeds the pivot int j = nums.length - 1; while (nums[j] \u003c= nums[i - 1]) j--; // Now the value array[j] will become the new pivot // Assertion: j \u003e= i // Swap the pivot with j int temp = nums[i - 1]; nums[i - 1] = nums[j]; nums[j] = temp; // Reverse the suffix j = nums.length - 1; while (i \u003c j) { temp = nums[i]; nums[i] = nums[j]; nums[j] = temp; i++; j--; } } Refer: Next Permutation ","date":"2022-04-04","objectID":"/algorithm/math/:5:3","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Generate all permutation Heap algorithm O(n!) Heap algorithm cannot deal with duplicate items. private void helper(int n, ArrayList\u003cList\u003cInteger\u003e\u003e r){ if(n == 1){ ArrayList\u003cInteger\u003e t = new ArrayList\u003c\u003e(); for(int i=0; i\u003cnums.length; ++i) t.add(nums[i]); r.add(t); } else{ for(int i=0; i\u003cn-1; ++i){ helper(n - 1, r); if(n % 2 == 0) { swap(nums, i, n-1); } else { swap(nums, 0, n-1); } } helper(n - 1, r); } } private void swap(int[] input, int a, int b) { int tmp = input[a]; input[a] = input[b]; input[b] = tmp; } //in main helper(nums.length, result); Refer: Permutations Refer: Permutations II ","date":"2022-04-04","objectID":"/algorithm/math/:5:4","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Generate a random permutation Fisher-Yates algorithm Time complexity: O(n) Random r = new Random(); public int[] shuffle() { for(int i=temp.length-1; i\u003e=1; --i){ int j= r.nextInt(i+1); swap(temp, i, j); } return temp; } private void swap(int[] a, int i, int j){ int temp = a[i]; a[i]= a[j]; a[j] = temp; } Refer: Shuffle an array ","date":"2022-04-04","objectID":"/algorithm/math/:5:5","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Generate all combination //n is starting element, k is number of elements left to filled //nmax is the maximum of each element could be private void helper2(int n, int k, int nmax, Stack\u003cInteger\u003e cur, List\u003cList\u003cInteger\u003e\u003e r){ if(k == 0){ r.add(new ArrayList\u003cInteger\u003e(cur)); return; } for(int i=n; i\u003c=nmax; ++i){ cur.push(i); helper2(i+1, k-1, nmax, cur, r); cur.pop(); } } Refer: Combinations ","date":"2022-04-04","objectID":"/algorithm/math/:5:6","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Star and stick Wiki T1: For any pair of positive integers n and k, the number of k-tuples of positive integers whose sum is n is equal to the number of (k − 1)-element subsets of a set with n − 1 elements. $\\binom{n-1}{k-1}$ T2: For any pair of positive integers n and k, the number of k-tuples of non-negative integers whose sum is n is equal to the number of multisets of cardinality k − 1 taken from a set of size n + 1. $\\binom{n+k-1}{k-1}$ Refer:Count the Number of Ideal Arrays ","date":"2022-04-04","objectID":"/algorithm/math/:5:7","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Base / Radix Read BigInteger p = new BigInteger(sc.next(), b); Write Integer.toBinaryString(N) Integer.toOctalString(N) Integer.toHexString(N) Write with fix length String.format(\"%8s\", Integer.toBinaryString(N)).replace(' ', '0'); ","date":"2022-04-04","objectID":"/algorithm/math/:6:0","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Modular ","date":"2022-04-04","objectID":"/algorithm/math/:7:0","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Modular exponentiation System.out.println(x.modPow(y, n)); ","date":"2022-04-04","objectID":"/algorithm/math/:7:1","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Multiplicative inverse var num = BigInteger.valueOf(7); var mod = BigInteger.valueOf(20); BigInteger inverse = num.modInverse(mod); ","date":"2022-04-04","objectID":"/algorithm/math/:7:2","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Prime ","date":"2022-04-04","objectID":"/algorithm/math/:8:0","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Seive long _sieve_size; // ll is defined as: typedef long long ll; BitSet bs = new BitSet(10_000_010); // 10^7 should be enough for most cases ArrayList\u003cInteger\u003e primes; // compact list of primes in form of vector\u003cint\u003e void sieve(int upperbound) { // create list of primes in [0..upperbound] primes = new ArrayList\u003c\u003e(); _sieve_size = upperbound + 1; // add 1 to include upperbound bs.set(0, (int)_sieve_size); // set all bits to 1 bs.clear(0); bs.clear(1); // except index 0 and 1 for (long i = 2; i \u003c= _sieve_size; i++) if (bs.get((int) i)) { // cross out multiples of i starting from i * i! for (long j = i * i; j \u003c= _sieve_size; j += i) bs.clear((int)j); primes.add((int) i); // add this prime to the list of primes } } // call this method in main method boolean isPrime(long N) { // a good enough deterministic prime tester if (N \u003c= _sieve_size) return bs.get((int)N); // O(1) for small primes for (int i = 0; i \u003c primes.size(); i++) if (N % primes.get(i) == 0) return false; return true; // it takes longer time if N is a large prime! } check prime count different prime ","date":"2022-04-04","objectID":"/algorithm/math/:8:1","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Prime factor ArrayList\u003cLong\u003e primeFactors(long N) { ArrayList\u003cLong\u003e factors = new ArrayList\u003c\u003e(); int PF_idx = 0; long PF = primes.get(PF_idx); // primes has been populated by sieve while (PF * PF \u003c= N) { // stop at sqrt(N); N can get smaller while (N % PF == 0) { N /= PF; factors.add((long)PF); } // remove PF PF = primes.get(++PF_idx); // only consider primes! } if (N != 1) factors.add(N); // special case if N is a prime return factors; // if N does not fit in 32-bit integer and is a prime } // then ‘factors’ will have to be changed to vector\u003cll\u003e // inside int main(), assuming sieve(1000000) has been called before num of prime long numPF(long N) { int PF_idx = 0; long PF = primes.get(PF_idx), ans = 0; while (PF * PF \u003c= N) { while (N % PF == 0) { N /= PF; ans++; } PF = primes.get(++PF_idx); } if (N != 1) ans++; return ans; } num diff prime factor //modified seive method memset(numDiffPF, 0, sizeof numDiffPF); void sieve(int upperbound) { // create list of primes in [0..upperbound] primes = new ArrayList\u003c\u003e(); _sieve_size = upperbound + 1; // add 1 to include upperbound bs.set(0, (int)_sieve_size); // set all bits to 1 bs.clear(0); bs.clear(1); // except index 0 and 1 for (long i = 2; i \u003c= _sieve_size; i++) if (numDiffPF[i] == 0) // i is a prime number for (int j = i; j \u003c MAX_N; j += i) numDiffPF[j]++; // increase the values of multiples of i } // call this method in main method sum of prime factor num divisor long numDiv(long N) { int PF_idx = 0; long PF = primes.get(PF_idx), ans = 1; // start from ans = 1 while (PF * PF \u003c= N) { long power = 0; // count the power while (N % PF == 0) { N /= PF; power++; } ans *= (power + 1); // according to the formula PF = primes.get(++PF_idx); } if (N != 1) ans *= 2; // (last factor has pow = 1, we add 1 to it) return ans; } sum of divisor long sumDiv(long N) { int PF_idx = 0; long PF = primes.get(PF_idx), ans = 1; // start from ans = 1 while (PF * PF \u003c= N) { long power = 0; while (N % PF == 0) { N /= PF; power++; } ans *= ((long)Math.pow((double)PF, power + 1.0) - 1) / (PF - 1); PF = primes.get(++PF_idx); } if (N != 1) ans *= ((long)Math.pow((double)N, 2.0) - 1) / (N - 1); // last return ans; } ","date":"2022-04-04","objectID":"/algorithm/math/:8:2","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Co-Prime euler phi - num of coprime long EulerPhi(long N) { int PF_idx = 0; long PF = primes.get(PF_idx), ans = N; // start from ans = N while (PF * PF \u003c= N) { if (N % PF == 0) ans -= ans / PF; // only count unique factor while (N % PF == 0) N /= PF; PF = primes.get(++PF_idx); } if (N != 1) ans -= ans / N; // last factor return ans; } ","date":"2022-04-04","objectID":"/algorithm/math/:8:3","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Prime testing BigInteger BRN = BigInteger.valueOf(RN); BN.isProbablePrime(10) Refer: API Doc ","date":"2022-04-04","objectID":"/algorithm/math/:8:4","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Greatest common dvisior LCM * GCD = N * M int gcd(int a,int b) { if (b==0) { return a; } int d; d = gcd(b, a%b); return d; } int lcm(int a, int b) { return a * (b / gcd(a, b)); } BigInteger gcd_pq = p.gcd(q); ","date":"2022-04-04","objectID":"/algorithm/math/:9:0","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"linear diophantine equation To solve for integral root of equation e.g 25x + 18y = 839 Run euclid and find out that 25*-5 + 18 *7=1 Now multiply by 839/gcd(25, 18) =\u003e 25*-4195+18*5873=839 x = -4915+18n, y = 5873-25n try to find all n that fit the requirement. e.g. both x and y \u003e 0 // store x, y, and d as global variables void extendedEuclid(int a, int b) { if (b == 0) { x = 1; y = 0; d = a; return; } // base case extendedEuclid(b, a % b); // similar as the original gcd int x1 = y; int y1 = x - (a / b) * y; x = x1; y = y1; } Refer: UVA10633 ","date":"2022-04-04","objectID":"/algorithm/math/:9:1","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Probability N/A? ","date":"2022-04-04","objectID":"/algorithm/math/:10:0","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Matrix This is a library of matirx operations ","date":"2022-04-04","objectID":"/algorithm/math/:11:0","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Cycle finding ListNode f(ListNode input){ if(input == null) return null; else return input.next; } Pair floydCycleFinding(int x0) { // function int f(int x) is defined earlier // 1st part: finding k*mu, hare’s speed is 2x tortoise’s ListNode tortoise = f(x0), hare = f(f(x0)); // f(x0) is the node next to x0 while (tortoise != hare) { tortoise = f(tortoise); hare = f(f(hare)); } if(tortoise == null \u0026\u0026 hare == null) return null; // 2nd part: finding mu, hare and tortoise move at the same speed int mu = 0; hare = x0; while (tortoise != hare) { tortoise = f(tortoise); hare = f(hare); mu++; } // 3rd part: finding lambda, hare moves, tortoise stays int lambda = 1; hare = f(tortoise); while (tortoise != hare) { hare = f(hare); lambda++; } return new Pair(mu, lambda); } Refer: Linked List Cycle ","date":"2022-04-04","objectID":"/algorithm/math/:12:0","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Game theory TBC ","date":"2022-04-04","objectID":"/algorithm/math/:13:0","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Nim game TBC ","date":"2022-04-04","objectID":"/algorithm/math/:13:1","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Calculator ","date":"2022-04-04","objectID":"/algorithm/math/:14:0","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Infix to Postfix Do actual faster than direct implementation. //TODO: enhance with bracket static HashMap\u003cString, Integer\u003e piroirtyOp = new HashMap\u003cString, Integer\u003e(); piroirtyOp.put(\"+\", 1); piroirtyOp.put(\"-\", 1); piroirtyOp.put(\"*\", 2); piroirtyOp.put(\"/\", 2); List\u003cString\u003e ts = tokenize(s); List\u003cString\u003e reversePolish = new ArrayList\u003cString\u003e(); Stack\u003cString\u003e sop = new Stack\u003cString\u003e(); for(int i=0; i\u003cts.size(); ++i){ String curToken = ts.get(i); if(curToken.compareTo(\"+\") == 0 || curToken.compareTo(\"-\") == 0 || curToken.compareTo(\"*\") == 0 || curToken.compareTo(\"/\") == 0){ while(!sop.empty()){ String u = sop.peek(); if(piroirtyOp.get(u) \u003e= piroirtyOp.get(curToken)) reversePolish.add(sop.pop()); else break; } sop.push(curToken); } else reversePolish.add(curToken); } while(!sop.empty()) reversePolish.add(sop.pop()); Refer: Basic Calculator II ","date":"2022-04-04","objectID":"/algorithm/math/:14:1","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Postfix calculator Stack\u003cInteger\u003e si = new Stack\u003cInteger\u003e(); for(int i=0; i\u003creversePolish.size(); ++i){ String curToken = reversePolish.get(i); if(curToken.compareTo(\"+\") == 0 || curToken.compareTo(\"-\") == 0 || curToken.compareTo(\"*\") == 0 || curToken.compareTo(\"/\") == 0){ int right = si.pop(); int left = si.pop(); int result = 0; switch(curToken){ case \"+\": result = left+right; break; case \"-\": result = left-right; break; case \"*\": result = left*right; break; case \"/\": result = left/right; break; } si.push(result); } else si.push(Integer.valueOf(curToken)); } return si.pop(); Refer: Basic Calculator II ","date":"2022-04-04","objectID":"/algorithm/math/:14:2","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Infix calculator Stack\u003cString\u003e st = new Stack\u003c\u003e(); Stack\u003cString\u003e stOp = new Stack\u003c\u003e(); String currOp= \"+\"; Integer number; for(String ss : token){ if(Character.isDigit(ss.charAt(0))){ number = Integer.parseInt(ss); process(st, currOp, number); } if(ss.compareTo(\"(\") == 0){ st.push(\"(\"); stOp.push(currOp); currOp = \"+\"; } else if(ss.compareTo(\")\") == 0){ //now we add all the number until we see the ( int sum = 0; while(!st.isEmpty()){ String sss = st.pop(); if(sss.compareTo(\"(\") == 0){ currOp = stOp.pop(); process(st, currOp, sum); break; } else sum += Integer.parseInt(sss); } //System.out.println(); } else{ currOp = ss; } } //now we add up all the thing int sum = 0; while(!st.isEmpty()){ sum += Integer.parseInt(st.pop()); } return sum; private void process(Stack\u003cString\u003e st, String currOp, int number){ if(currOp.compareTo(\"*\") == 0){ int other = Integer.parseInt(st.pop()); int a = other * number; st.push(String.valueOf(a)); } else if(currOp.compareTo(\"/\") == 0){ int other = Integer.parseInt(st.pop()); int a = other / number; st.push(String.valueOf(a)); } else if(currOp.compareTo(\"+\") == 0){ st.push(String.valueOf(number)); } else if(currOp.compareTo(\"-\") == 0){ st.push(String.valueOf(-1 * number)); } } Refer: Basic Calculator III ","date":"2022-04-04","objectID":"/algorithm/math/:14:3","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Entrophy Refer: Guess the Word ","date":"2022-04-04","objectID":"/algorithm/math/:15:0","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Solve system of linear equations TBC ","date":"2022-04-04","objectID":"/algorithm/math/:16:0","tags":null,"title":"Maths","uri":"/algorithm/math/"},{"categories":null,"content":"Server administration ","date":"2022-04-04","objectID":"/cheatsheet/admin/:1:0","tags":null,"title":"Server admin","uri":"/cheatsheet/admin/"},{"categories":null,"content":"Linux Create user sudo useradd test sudo mkdir /home/test sudo chown -R test: /home/test Routine server patch sudo apt update sudo apt upgrade #Exclude some packages ","date":"2022-04-04","objectID":"/cheatsheet/admin/:1:1","tags":null,"title":"Server admin","uri":"/cheatsheet/admin/"},{"categories":null,"content":"Setup VM and make it start automatically Please refer to this cheatsheet ## install virt-manager, it can connect to remote vm server virt-manager virsh autostart vmName virsh list virsh dominfo k8s-node01 virsh nodeinfo ","date":"2022-04-04","objectID":"/cheatsheet/admin/:1:2","tags":null,"title":"Server admin","uri":"/cheatsheet/admin/"},{"categories":null,"content":"Expand LVM volume # ubuntu default only use half of the volume ","date":"2022-04-04","objectID":"/cheatsheet/admin/:1:3","tags":null,"title":"Server admin","uri":"/cheatsheet/admin/"},{"categories":null,"content":"MySQL Create user with remote access CREATE USER 'myuser'@'%' IDENTIFIED BY 'mypass'; ","date":"2022-04-04","objectID":"/cheatsheet/admin/:1:4","tags":null,"title":"Server admin","uri":"/cheatsheet/admin/"},{"categories":null,"content":"Create new database and grant admin right to new user create database DWH; GRANT ALL ON database.table TO 'username'@'%'; FLUSH PRIVILEGES; Create a table # create table create table test( name VARCHAR(100), value VARCHAR(100), description VARCHAR(500) ) # primary key ALTER TABLE Persons ADD PRIMARY KEY (name); ","date":"2022-04-04","objectID":"/cheatsheet/admin/:1:5","tags":null,"title":"Server admin","uri":"/cheatsheet/admin/"},{"categories":null,"content":"Redis # connect to redis server redis-cli keys * del abc get abc set abc \"hello\" ","date":"2022-04-04","objectID":"/cheatsheet/admin/:1:6","tags":null,"title":"Server admin","uri":"/cheatsheet/admin/"},{"categories":null,"content":"Zookeeper # connect to zookeeper server zkCli -server localhost:22181 [zk: localhost:22181(CONNECTED) 0] ls / [admin, brokers, cluster, config, consumers, controller, controller_epoch, feature, isr_change_notification, latest_producer_id_block, log_dir_event_notification, services, testapp, zookeeper] get /testapp/application/f89497d9-a0ba-474e-8b4b-6878a700adf6 {\"name\":\"application\",\"id\":\"f89497d9-a0ba-474e-8b4b-6878a700adf6\",\"address\":\"yiude-mbp\",\"port\":8282,\"sslPort\":null,\"payload\":{\"@class\":\"org.springframework.cloud.zookeeper.discovery.ZookeeperInstance\",\"id\":\"application\",\"name\":\"application\",\"metadata\":{\"instance_status\":\"UP\"}},\"registrationTimeUTC\":1654331328914,\"serviceType\":\"DYNAMIC\",\"uriSpec\":{\"parts\":[{\"value\":\"scheme\",\"variable\":true},{\"value\":\"://\",\"variable\":false},{\"value\":\"address\",\"variable\":true},{\"value\":\":\",\"variable\":false},{\"value\":\"port\",\"variable\":true}]}} ","date":"2022-04-04","objectID":"/cheatsheet/admin/:1:7","tags":null,"title":"Server admin","uri":"/cheatsheet/admin/"},{"categories":null,"content":"Kafka # create topic kafka-topics --create --topic testapp-wordcount --bootstrap-server kafka:9092 kafka-console-producer --topic testapp-wordcount --bootstrap-server kafka:9092 kafka-console-consumer --topic testapp-wordcount --from-beginning --bootstrap-server kafka:9092 ","date":"2022-04-04","objectID":"/cheatsheet/admin/:1:8","tags":null,"title":"Server admin","uri":"/cheatsheet/admin/"},{"categories":null,"content":"Docker # to a folder with Dockerfile DOCKER_BUILDKIT=1 docker build -t ymlai87416/spark-master:3.2.0-hadoop3.2 . docker login docker push ymlai87416/semi-trade:v0.41 # to a folder with docker-compose.yml docker-compose up # copy file to docker machine docker cp CONTAINER:SRC_PATH DEST_PATH| ","date":"2022-04-04","objectID":"/cheatsheet/admin/:1:9","tags":null,"title":"Server admin","uri":"/cheatsheet/admin/"},{"categories":null,"content":"K8s Basic admin See k8s dashboard kubectl proxy ssh -L 8001:localhost:8001 ubuntu@192.168.100.21 Find the token for login k8s console kubectl -n kubernetes-dashboard get secret $(kubectl -n kubernetes-dashboard get sa/admin-user -o jsonpath=\"{.secrets[0].name}\") -o go-template=\"{{.data.token | base64decode}}\" Cert manager Cert manager automatically renew. https://cert-manager.io/docs/usage/certificate/ ","date":"2022-04-04","objectID":"/cheatsheet/admin/:1:10","tags":null,"title":"Server admin","uri":"/cheatsheet/admin/"},{"categories":null,"content":"Ingress For exporting stuff Cheatsheet https://kubernetes.io/docs/reference/kubectl/cheatsheet/ ","date":"2022-04-04","objectID":"/cheatsheet/admin/:1:11","tags":null,"title":"Server admin","uri":"/cheatsheet/admin/"},{"categories":null,"content":"KMP searching Time complexity: O(m+n) Can use to detect longest parlindrom from the beginning final int MAX_N = 1_000_001; char[] T = new char[MAX_N]; char[] P = new char[MAX_N]; // T = text, P = pattern int[] b = new int[MAX_N]; int n, m; // b = back table, n = length of T, m = length of P void kmpPreprocess() { // call this before calling kmpSearch() int i = 0, j = -1; b[0] = -1; // starting values while (i \u003c m) { // pre-process the pattern string P while (j \u003e= 0 \u0026\u0026 P[i] != P[j]) j = b[j]; // different, reset j using b i++; j++; // if same, advance both pointers b[i] = j; // observe i = 8, 9, 10, 11, 12, 13 with j = 0, 1, 2, 3, 4, 5 } } // in the example of P = \"SEVENTY SEVEN\" above void kmpSearch() { // this is similar as kmpPreprocess(), but on string T int i = 0, j = 0; // starting values while (i \u003c n) { // search through string T while (j \u003e= 0 \u0026\u0026 T[i] != P[j]) j = b[j]; // different, reset j using b i++; j++; // if same, advance both pointers if (j == m) { // a match found when j == m System.out.format(\"%s is found at index %d in T\\n\", String.valueOf(P, 0, m), i - j); j = b[j]; // prepare j for the next possible match } } } Refer: UVA1449 ","date":"2022-04-04","objectID":"/algorithm/string/:1:0","tags":null,"title":"Strings","uri":"/algorithm/string/"},{"categories":null,"content":"Wildcard matching Time complexity: O(S+P) Similar to KMP matching, just go back to the last star position and match again, but now star match 1 more character. Better than DP. Refer: Wildcard Matching While regular expression matching require ‘ab’ which need dynamic progamming. O(n^m) Refer: Regular Expression Matching ","date":"2022-04-04","objectID":"/algorithm/string/:2:0","tags":null,"title":"Strings","uri":"/algorithm/string/"},{"categories":null,"content":"Minimum edit distance Operation include: insert, delete, replace Time complexity: O(m*n) public int minDistance(String word1, String word2) { int[][] dp = new int[word1.length()+1][word2.length()+1]; dp[0][0] = 0; for(int i=0; i\u003cword1.length(); ++i) dp[i+1][0] = i+1; //delete char for(int i=0; i\u003cword2.length(); ++i) dp[0][i+1] = i+1; //delete char for(int i=1; i\u003c=word1.length(); ++i){ for(int j=1; j\u003c=word2.length(); ++j){ char ci = word1.charAt(i-1); char cj = word2.charAt(j-1); if(ci==cj) dp[i][j] = dp[i-1][j-1]; else dp[i][j] = dp[i-1][j-1]+1; dp[i][j] = Math.min(dp[i][j], Math.min(dp[i-1][j]+1, dp[i][j-1]+1)); } } return dp[word1.length()][word2.length()]; } Refer: Edit Distance ","date":"2022-04-04","objectID":"/algorithm/string/:3:0","tags":null,"title":"Strings","uri":"/algorithm/string/"},{"categories":null,"content":"Longest common substring ","date":"2022-04-04","objectID":"/algorithm/string/:4:0","tags":null,"title":"Strings","uri":"/algorithm/string/"},{"categories":null,"content":"Longest palindrom From starting In between ","date":"2022-04-04","objectID":"/algorithm/string/:5:0","tags":null,"title":"Strings","uri":"/algorithm/string/"},{"categories":null,"content":"Suffix trie ","date":"2022-04-04","objectID":"/algorithm/string/:6:0","tags":null,"title":"Strings","uri":"/algorithm/string/"},{"categories":null,"content":"Suffix tree string matching O(m + occ) longest repeating substring O(n) ","date":"2022-04-04","objectID":"/algorithm/string/:7:0","tags":null,"title":"Strings","uri":"/algorithm/string/"},{"categories":null,"content":"Suffix array Construction of SA Time complexity: O(n log(n)) Time complexity of sorting string array using strcmp is O(n^2 log(n)) int MAX_N = 100_010; // second approach: O(n log n) char[] T = new char[MAX_N]; // the input string, up to 100K characters int n; // the length of input string int[] RA = new int[MAX_N], tempRA = new int[MAX_N]; // rank array and temporary rank array int[] SA = new int [MAX_N], tempSA = new int[MAX_N]; // suffix array and temporary suffix array int[] c = new int[MAX_N]; void countingSort(int k) { // O(n) int i, sum, maxi = Math.max(300, n); // up to 255 ASCII chars or length of n Arrays.fill(c, 0); // clear frequency table for (i = 0; i \u003c n; i++) // count the frequency of each integer rank c[i + k \u003c n ? RA[i + k] : 0]++; for (i = sum = 0; i \u003c maxi; i++) { int t = c[i]; c[i] = sum; sum += t; } for (i = 0; i \u003c n; i++) // shuffle the suffix array if necessary tempSA[c[SA[i]+k \u003c n ? RA[SA[i]+k] : 0]++] = SA[i]; for (i = 0; i \u003c n; i++) // update the suffix array SA SA[i] = tempSA[i]; } void constructSA() { // this version can go up to 100000 characters int i, k, r; for (i = 0; i \u003c n; i++) RA[i] = T[i]; // initial rankings for (i = 0; i \u003c n; i++) SA[i] = i; // initial SA: {0, 1, 2, ..., n-1} for (k = 1; k \u003c n; k \u003c\u003c= 1) { // repeat sorting process log n times countingSort(k); // actually radix sort: sort based on the second item countingSort(0); // then (stable) sort based on the first item tempRA[SA[0]] = r = 0; // re-ranking; start from rank r = 0 for (i = 1; i \u003c n; i++) // compare adjacent suffixes tempRA[SA[i]] = // if same pair =\u003e same rank r; otherwise, increase r (RA[SA[i]] == RA[SA[i-1]] \u0026\u0026 RA[SA[i]+k] == RA[SA[i-1]+k]) ? r : ++r; for (i = 0; i \u003c n; i++) // update the rank array RA RA[i] = tempRA[i]; if (RA[SA[n-1]] == n-1) break; // nice optimization trick } } //in main n = input.length(); Arrays.fill(T, '\\0'); for(int i=0; i\u003c_n; ++i){ T[i] = input.charAt(i); } T[n++] = '$'; constructSA(); string matching O(m log n) UVA1254 //return (-1, -1) if not found Pair stringMatching(String P) { // string matching in O(m log n) int m = P.length(); int lo = 0, hi = n-1, mid = lo; // valid matching = [0..n-1] while (lo \u003c hi) { // find lower bound mid = (lo + hi) / 2; // this is round down int res = strncmp(T, SA[mid], P, m); // try to find P in suffix ’mid’ if (res \u003e= 0) hi = mid; // prune upper half (notice the \u003e= sign) else lo = mid + 1; // prune lower half including mid } // observe ‘=’ in \"res \u003e= 0\" above if (strncmp(T, SA[lo], P, m) != 0) return new Pair(-1, -1); // if not found Pair ans = new Pair(0, 0); ans.first = lo; lo = 0; hi = n - 1; mid = lo; while (lo \u003c hi) { // if lower bound is found, find upper bound mid = (lo + hi) / 2; int res = strncmp(T, SA[mid], P, m); if (res \u003e 0) hi = mid; // prune upper half else lo = mid + 1; // prune lower half including mid } // (notice the selected branch when res == 0) if (strncmp(T, SA[hi], P, m) != 0) hi--; // special case ans.second = hi; return ans; } // return lower/upperbound as first/second item of the pair, respectively int strncmp(char[] str1, int startPos, String P, int num ){ for(int i=0; i\u003cnum; ++i){ char a = str1[startPos+i]; char b = P.charAt(i); if(a != b) return (int)(a-b); } return 0; } longest prefix O(n) int[] Phi= new int[MAX_N]; int[] PLCP= new int[MAX_N]; int[] LCP = new int[MAX_N]; void computeLCP() { int i, L; Phi[SA[0]] = -1; // default value for (i = 1; i \u003c n; i++) // compute Phi in O(n) Phi[SA[i]] = SA[i-1]; // remember which suffix is behind this suffix for (i = L = 0; i \u003c n; i++) { // compute Permuted LCP in O(n) if (Phi[i] == -1) { PLCP[i] = 0; continue; } // special case while (T[i + L] == T[Phi[i] + L]) L++; // L increased max n times PLCP[i] = L; L = Math.max(L-1, 0); // L decreased max n times } for (i = 0; i \u003c n; i++) // compute LCP in O(n) LCP[i] = PLCP[SA[i]]; // put the permuted LCP to the correct position } Longest common substring Time complexity: O(n) for T1= GATAGACA and T2=CATA, concat both string to become GATAGACA$CAT","date":"2022-04-04","objectID":"/algorithm/string/:8:0","tags":null,"title":"Strings","uri":"/algorithm/string/"},{"categories":null,"content":"Rolling hash - Rabin Karp Time complexity: O(m+n) Space complexity: O(n) Time complexity is same as KMP. int modulo = 1_000_000_007; private long modPow(int base, int exp){ if(exp == 0) return 1; else if(exp == 1) return base; long d = modPow(base, exp/2); if(exp % 2 == 0) return (d * d) % modulo; else return ((d * d) % modulo * base) % modulo; } //in main long p26 = modPow(26, len-1); //in loop int c = s.charAt(i) - 'a'; int q = s.charAt(i-len) - 'a'; rolling = (rolling - (q * p26) % modulo + modulo) % modulo; rolling = (rolling * 26 + c) % modulo; Refer: Longest Duplicate Substring ","date":"2022-04-04","objectID":"/algorithm/string/:9:0","tags":null,"title":"Strings","uri":"/algorithm/string/"},{"categories":null,"content":"Aho corasick Use BFS to do automaton on Trie class TrieNode{ TrieNode[] children; List\u003cInteger\u003e outIndex; TrieNode f; //failure link, for root it is null. public TrieNode(){ children = new TrieNode[26]; outIndex = new ArrayList\u003cInteger\u003e(); f = null; } } //after building the trie, build the automaton. private void buildAutomaton(){ Queue\u003cTrieNode\u003e q = new ArrayDeque\u003c\u003e(); for(int i=0; i\u003c26; ++i){ if(root.children[i] != null){ root.children[i].f = root; q.offer(root.children[i]); } } while(!q.isEmpty()){ TrieNode u = q.poll(); for(int i= 0; i\u003c26; ++i){ TrieNode v = u.children[i]; if(v != null){ TrieNode failure = u.f; while(failure != null \u0026\u0026 failure.children[i] == null) failure = failure.f; failure = failure ==null ? root: failure.children[i]; v.f = failure; v.outIndex.addAll(failure.outIndex); q.offer(v); } } } } //searching by letters public boolean query(char letter) { int li = letter - 'a'; while(ptr!= null \u0026\u0026 ptr.children[li] == null){ ptr = ptr.f; } ptr = ptr == null ? root : ptr.children[li]; return ptr.outIndex.size() \u003e 0; } Refer: 1032. Stream of Characters Refer: GFG ","date":"2022-04-04","objectID":"/algorithm/string/:10:0","tags":null,"title":"Strings","uri":"/algorithm/string/"},{"categories":null,"content":"I am writing to document the upgrade process from Kubernetes 1.21 to 1.22. Kubernetes end of life schedule The process is same as my previous post. link. But this time, it break many things. ","date":"2022-04-11","objectID":"/blog/upgrade-k8s-v121-v122/:0:0","tags":["computer science","infrastructure"],"title":"Upgrade Kubernetes from 1.21 to 1.22","uri":"/blog/upgrade-k8s-v121-v122/"},{"categories":null,"content":"Current setup I have installed some services on the cluster, and I don’t have helm installed. Because sometimes I need to edit the yaml before applying it. Currently, I have the following software installed: ingress-nginx: v0.46 cert-manager: v1.2 After upgrading the cluster to v1.22, some pods are not running and become CrashLoopBackOff. ubuntu@k8s-master01:~/install/tatson-k8s$ kubectl get pods --namespace=ingress-nginx NAME READY STATUS RESTARTS AGE ingress-nginx-controller-6d5cfc9f7d-7jkrq 0/1 CrashLoopBackOff 11 (80s ago) 32m ubuntu@k8s-master01:~/install/tatson-k8s$ kubectl get pods --namespace=cert-manager NAME READY STATUS RESTARTS AGE cert-manager-6588898cb4-w7hg8 1/1 Running 0 60m cert-manager-cainjector-7bcbdbd99f-zflt5 0/1 Error 15 (5m41s ago) 60m cert-manager-webhook-5fd9f9dd86-c4vv8 1/1 Running 0 60m ","date":"2022-04-11","objectID":"/blog/upgrade-k8s-v121-v122/:1:0","tags":["computer science","infrastructure"],"title":"Upgrade Kubernetes from 1.21 to 1.22","uri":"/blog/upgrade-k8s-v121-v122/"},{"categories":null,"content":"Upgrading ingress-nginx Should be fine by just applying the latest version of yaml file. For bare metal: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.3/deploy/static/provider/baremetal/deploy.yaml But applying these result in Resource: \"batch/v1, Resource=jobs\", GroupVersionKind: \"batch/v1, Kind=Job\" Name: \"ingress-nginx-admission-create\", Namespace: \"ingress-nginx\" for: \"https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.2/deploy/static/provider/cloud/deploy.yaml\": Job.batch \"ingress-nginx-admission-create\" is invalid: spec.template: Invalid value: core.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:\"ingress-nginx-admission-create\", ... Resource: \"batch/v1, Resource=jobs\", GroupVersionKind: \"batch/v1, Kind=Job\" Name: \"ingress-nginx-admission-patch\", Namespace: \"ingress-nginx\" for: \"https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.2/deploy/static/provider/cloud/deploy.yaml\": Job.batch \"ingress-nginx-admission-patch\" is invalid: spec.template: Invalid value: To resolve these, just delete the job under ingress-nginx. NAME COMPLETIONS DURATION AGE ingress-nginx-admission-create 1/1 1s 3h37m ingress-nginx-admission-patch 1/1 1s 3h37m ","date":"2022-04-11","objectID":"/blog/upgrade-k8s-v121-v122/:2:0","tags":["computer science","infrastructure"],"title":"Upgrade Kubernetes from 1.21 to 1.22","uri":"/blog/upgrade-k8s-v121-v122/"},{"categories":null,"content":"Upgrading cert-manager From the website, it advise to upgrade to the next minor version, so I have to upgrade from v1.2 to v1.3, and then v1.4, v1.5, v1.6 and finally v1.7 The upgrade returns no error, and seems everything is running fine. ","date":"2022-04-11","objectID":"/blog/upgrade-k8s-v121-v122/:3:0","tags":["computer science","infrastructure"],"title":"Upgrade Kubernetes from 1.21 to 1.22","uri":"/blog/upgrade-k8s-v121-v122/"},{"categories":null,"content":"Final words I totally do not aware of these software need to be updated also. I should have reviewed my Kubernetes cluster at least semi-yearly. ","date":"2022-04-11","objectID":"/blog/upgrade-k8s-v121-v122/:4:0","tags":["computer science","infrastructure"],"title":"Upgrade Kubernetes from 1.21 to 1.22","uri":"/blog/upgrade-k8s-v121-v122/"},{"categories":null,"content":"Reference [1] Ingress-nginx support version: https://github.com/kubernetes/ingress-nginx#support-versions-table [2] Cert manager supported release: https://cert-manager.io/docs/installation/supported-releases/ ","date":"2022-04-11","objectID":"/blog/upgrade-k8s-v121-v122/:5:0","tags":["computer science","infrastructure"],"title":"Upgrade Kubernetes from 1.21 to 1.22","uri":"/blog/upgrade-k8s-v121-v122/"},{"categories":null,"content":"Some good resources. https://www.youtube.com/watch?v=H7l48VQewmA https://kruyt.org/migrate-docker-containerd-kubernetes/ But never remove docker from your machine!!. In my cluster, I use it to host images to keep haproxy and keepalived running. Removing docker means you break things. ","date":"2022-04-10","objectID":"/blog/k8s-move-to-containerd/:0:0","tags":["computer science","infrastructure"],"title":"Kubernetes move from docker to containerd","uri":"/blog/k8s-move-to-containerd/"},{"categories":null,"content":"I am writing to document the upgrade process from Kubernetes 1.20 to 1.21. Seems I am expected to upgrade Kubernetes at least semi-annually, in order to play catch up with the fast evolving versions… Kubernetes end of life schedule ","date":"2022-04-10","objectID":"/blog/upgrade-k8s-v120/:0:0","tags":["computer science","infrastructure"],"title":"Upgrade Kubernetes from 1.20 to 1.21","uri":"/blog/upgrade-k8s-v120/"},{"categories":null,"content":"Current setup 3 Raspberry pi as master node. use Keepalived for HA. Ubuntu 20.04 LTS (arm), docker version 1.4.4-1, kubernetes version 1.20.5 1 x86_64 VM node as worker node. Ubuntu 20.04 LTS (x86_64), docker version 1.4.4-1, kubernetes version 1.20.5 All machines hold the following packages: kubeadm, kubelet, kubectl, containerd.io ","date":"2022-04-10","objectID":"/blog/upgrade-k8s-v120/:1:0","tags":["computer science","infrastructure"],"title":"Upgrade Kubernetes from 1.20 to 1.21","uri":"/blog/upgrade-k8s-v120/"},{"categories":null,"content":"Target Upgrade all nodes to Kubernetes version 1.21.11-0 Docker version 1.5.11-1 ","date":"2022-04-10","objectID":"/blog/upgrade-k8s-v120/:2:0","tags":["computer science","infrastructure"],"title":"Upgrade Kubernetes from 1.20 to 1.21","uri":"/blog/upgrade-k8s-v120/"},{"categories":null,"content":"Upgrade process Time taken: 1 hour. ","date":"2022-04-10","objectID":"/blog/upgrade-k8s-v120/:3:0","tags":["computer science","infrastructure"],"title":"Upgrade Kubernetes from 1.20 to 1.21","uri":"/blog/upgrade-k8s-v120/"},{"categories":null,"content":"Upgrade first master node Upgrade kubeadm to 1.21.11-0 apt-get update \u0026\u0026 apt-get install -y kubeadm=1.21.11-00 \u0026\u0026 apt-mark hold kubeadm # output $ apt-mark unhold kubeadm $ apt-get update \u0026\u0026 apt-get install -y kubeadm=1.21.11-00 \u0026\u0026 apt-mark hold kubeadm Hit:1 https://download.docker.com/linux/ubuntu focal InRelease Hit:3 http://ports.ubuntu.com/ubuntu-ports focal InRelease Hit:2 https://packages.cloud.google.com/apt kubernetes-xenial InRelease Hit:4 http://ports.ubuntu.com/ubuntu-ports focal-updates InRelease Hit:5 http://ports.ubuntu.com/ubuntu-ports focal-backports InRelease Hit:6 http://ports.ubuntu.com/ubuntu-ports focal-security InRelease Reading package lists... Done Reading package lists... Done Building dependency tree Reading state information... Done The following packages were automatically installed and are no longer required: … Use 'sudo apt autoremove' to remove them. The following packages will be upgraded: kubeadm 1 upgraded, 0 newly installed, 0 to remove and 4 not upgraded. Need to get 7303 kB of archives. After this operation, 5308 kB of additional disk space will be used. Get:1 https://packages.cloud.google.com/apt kubernetes-xenial/main arm64 kubeadm arm64 1.21.11-00 [7303 kB] Fetched 7303 kB in 1s (4933 kB/s) (Reading database ... 150653 files and directories currently installed.) Preparing to unpack .../kubeadm_1.21.11-00_arm64.deb ... Unpacking kubeadm (1.21.11-00) over (1.20.5-00) ... Setting up kubeadm (1.21.11-00) ... kubeadm set on hold. Derive update plan kubeadm upgrade plan # output [upgrade/config] Making sure the configuration is correct: [upgrade/config] Reading configuration from the cluster... [upgrade/config] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -o yaml' [preflight] Running pre-flight checks. [upgrade] Running cluster health checks [upgrade] Fetching available versions to upgrade to [upgrade/versions] Cluster version: v1.20.0 [upgrade/versions] kubeadm version: v1.21.11 I0410 14:21:06.582792 7078 version.go:254] remote version is much newer: v1.23.5; falling back to: stable-1.21 [upgrade/versions] Target version: v1.21.11 [upgrade/versions] Latest version in the v1.20 series: v1.20.15 Components that must be upgraded manually after you have upgraded the control plane with 'kubeadm upgrade apply': COMPONENT CURRENT TARGET kubelet 4 x v1.20.5 v1.20.15 Upgrade to the latest version in the v1.20 series: COMPONENT CURRENT TARGET kube-apiserver v1.20.0 v1.20.15 kube-controller-manager v1.20.0 v1.20.15 kube-scheduler v1.20.0 v1.20.15 kube-proxy v1.20.0 v1.20.15 CoreDNS 1.7.0 v1.8.0 etcd 3.4.13-0 3.4.13-0 You can now apply the upgrade by executing the following command: kubeadm upgrade apply v1.20.15 _____________________________________________________________________ Components that must be upgraded manually after you have upgraded the control plane with 'kubeadm upgrade apply': COMPONENT CURRENT TARGET kubelet 4 x v1.20.5 v1.21.11 Upgrade to the latest stable version: COMPONENT CURRENT TARGET kube-apiserver v1.20.0 v1.21.11 kube-controller-manager v1.20.0 v1.21.11 kube-scheduler v1.20.0 v1.21.11 kube-proxy v1.20.0 v1.21.11 CoreDNS 1.7.0 v1.8.0 etcd 3.4.13-0 3.4.13-0 You can now apply the upgrade by executing the following command: kubeadm upgrade apply v1.21.11 _____________________________________________________________________ The table below shows the current state of component configs as understood by this version of kubeadm. Configs that have a \"yes\" mark in the \"MANUAL UPGRADE REQUIRED\" column require manual config upgrade or resetting to kubeadm defaults before a successful upgrade can be performed. The version to manually upgrade to is denoted in the \"PREFERRED VERSION\" column. API GROUP CURRENT VERSION PREFERRED VERSION MANUAL UPGRADE REQUIRED kubeproxy.config.k8s.io v1alpha1 v1alpha1 no kubelet.config.k8s.io v1beta1 v1beta1 no _____________________________________________________________________ Apply update plan 1.21.11 to the first","date":"2022-04-10","objectID":"/blog/upgrade-k8s-v120/:3:1","tags":["computer science","infrastructure"],"title":"Upgrade Kubernetes from 1.20 to 1.21","uri":"/blog/upgrade-k8s-v120/"},{"categories":null,"content":"Upgrade other master nodes Repeat step 6-8 on other master nodes Update kubeadm on other master nodes apt-mark unhold kubeadm \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y kubeadm=1.21.11-00 \u0026\u0026 apt-mark hold kubeadm #output Canceled hold on kubeadm. Hit:1 https://download.docker.com/linux/ubuntu focal InRelease Hit:3 http://ports.ubuntu.com/ubuntu-ports focal InRelease Hit:2 https://packages.cloud.google.com/apt kubernetes-xenial InRelease Get:4 http://ports.ubuntu.com/ubuntu-ports focal-updates InRelease [114 kB] Get:5 http://ports.ubuntu.com/ubuntu-ports focal-backports InRelease [108 kB] Get:6 http://ports.ubuntu.com/ubuntu-ports focal-security InRelease [114 kB] Get:7 http://ports.ubuntu.com/ubuntu-ports focal-updates/main arm64 Packages [1177 kB] Get:8 http://ports.ubuntu.com/ubuntu-ports focal-updates/universe arm64 Packages [863 kB] Fetched 2376 kB in 3s (682 kB/s) Reading package lists... Done Reading package lists... Done Building dependency tree Reading state information... Done The following packages were automatically installed and are no longer required: … Use 'sudo apt autoremove' to remove them. The following packages will be upgraded: kubeadm 1 upgraded, 0 newly installed, 0 to remove and 4 not upgraded. Need to get 7303 kB of archives. After this operation, 5308 kB of additional disk space will be used. Get:1 https://packages.cloud.google.com/apt kubernetes-xenial/main arm64 kubeadm arm64 1.21.11-00 [7303 kB] Fetched 7303 kB in 1s (8953 kB/s) (Reading database ... 150581 files and directories currently installed.) Preparing to unpack .../kubeadm_1.21.11-00_arm64.deb ... Unpacking kubeadm (1.21.11-00) over (1.20.5-00) ... Setting up kubeadm (1.21.11-00) ... kubeadm set on hold. Apply update plan kubeadm upgrade node #output [upgrade] Reading configuration from the cluster... [upgrade] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -o yaml' [preflight] Running pre-flight checks [preflight] Pulling images required for setting up a Kubernetes cluster [preflight] This might take a minute or two, depending on the speed of your internet connection [preflight] You can also perform this action in beforehand using 'kubeadm config images pull' [upgrade] Upgrading your Static Pod-hosted control plane instance to version \"v1.21.11\"... Static pod: kube-apiserver-k8s-master02 hash: bbdf76d8ed7bbfbefa3eb630aa51b714 Static pod: kube-controller-manager-k8s-master02 hash: 96d194097d7a0962788e7017657e9408 Static pod: kube-scheduler-k8s-master02 hash: 81d2d21449d64d5e6d5e9069a7ca99ed [upgrade/etcd] Upgrading to TLS for etcd Static pod: etcd-k8s-master02 hash: dbba304816e4096538130e05d56ce432 [upgrade/staticpods] Preparing for \"etcd\" upgrade [upgrade/staticpods] Renewing etcd-server certificate [upgrade/staticpods] Renewing etcd-peer certificate [upgrade/staticpods] Renewing etcd-healthcheck-client certificate [upgrade/staticpods] Moved new manifest to \"/etc/kubernetes/manifests/etcd.yaml\" and backed up old manifest to \"/etc/kubernetes/tmp/kubeadm-backup-manifests-2022-04-10-14-38-44/etcd.yaml\" [upgrade/staticpods] Waiting for the kubelet to restart the component [upgrade/staticpods] This might take a minute or longer depending on the component/version gap (timeout 5m0s) Static pod: etcd-k8s-master02 hash: dbba304816e4096538130e05d56ce432 …Static pod: etcd-k8s-master02 hash: 7ad49516ae7d2e9bb37ae4548bac7ee7 [apiclient] Found 3 Pods for label selector component=etcd [upgrade/staticpods] Component \"etcd\" upgraded successfully! [upgrade/etcd] Waiting for etcd to become available [upgrade/staticpods] Writing new Static Pod manifests to \"/etc/kubernetes/tmp/kubeadm-upgraded-manifests617011125\" [upgrade/staticpods] Preparing for \"kube-apiserver\" upgrade [upgrade/staticpods] Renewing apiserver certificate [upgrade/staticpods] Renewing apiserver-kubelet-client certificate [upgrade/staticpods] Renewing front-proxy-client certificate [upgrade/staticpods] Renewing apiserver-etcd-client certificate [upgrade/","date":"2022-04-10","objectID":"/blog/upgrade-k8s-v120/:3:2","tags":["computer science","infrastructure"],"title":"Upgrade Kubernetes from 1.20 to 1.21","uri":"/blog/upgrade-k8s-v120/"},{"categories":null,"content":"Checkpoint - master nodes Now run kubectl get nodes should show all master nodes are having same version v1.21.11. NAME STATUS ROLES AGE VERSION k8s-master01 Ready control-plane,master 368d v1.21.11 k8s-master02 Ready control-plane,master 32h v1.21.11 k8s-master03 Ready control-plane,master 368d v1.21.11 k8s-node01 Ready \u003cnone\u003e 368d v1.20.5 Update kubectl on all master nodes apt-mark unhold kubectl \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y kubectl=1.21.11-00 \u0026\u0026 apt-mark hold kubectl ","date":"2022-04-10","objectID":"/blog/upgrade-k8s-v120/:3:3","tags":["computer science","infrastructure"],"title":"Upgrade Kubernetes from 1.20 to 1.21","uri":"/blog/upgrade-k8s-v120/"},{"categories":null,"content":"Upgrade worker nodes There is only 1 node to update in my case Update kubeadm on worker node apt-mark unhold kubeadm \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y kubeadm=1.21.11-00 \u0026\u0026 apt-mark hold kubeadm Drain worker node on MASTER machine kubectl drain k8s-node01 --ignore-daemonsets #output node/k8s-node01 cordoned WARNING: ignoring DaemonSet-managed Pods: kube-system/kube-flannel-ds-cttj7, kube-system/kube-proxy-zmkml evicting pod cert-manager/cert-manager-6588898cb4-bc4ks ... evicting pod cert-manager/cert-manager-cainjector-7bcbdbd99f-j59b4 ... evicting pod ingress-nginx/ingress-nginx-controller-6d5cfc9f7d-wfr9t evicting pod cert-manager/cert-manager-webhook-5fd9f9dd86-dx2qq ... ... pod/cert-manager-cainjector-7bcbdbd99f-j59b4 evicted I0410 15:12:22.003098 44940 request.go:655] Throttling request took 1.151010174s, request: GET:xxxx pod/cert-manager-6588898cb4-bc4ks evicted ... pod/cert-manager-webhook-5fd9f9dd86-dx2qq evicted pod/ingress-nginx-controller-6d5cfc9f7d-wfr9t evicted ... node/k8s-node01 evicted Apply upgrade to worker node On worker machine. kubeadm upgrade node #output [upgrade] Reading configuration from the cluster... [upgrade] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -o yaml' [preflight] Running pre-flight checks [preflight] Skipping prepull. Not a control plane node. [upgrade] Skipping phase. Not a control plane node. [kubelet-start] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\" [upgrade] The configuration for this node was successfully updated! [upgrade] Now you should go ahead and upgrade the kubelet package using your package manager. Upgrade kubelet and restart service apt-mark unhold kubelet \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y kubelet=1.21.11-00 \u0026\u0026 apt-mark hold kubelet systemctl restart kubelet Restore worker node kubectl uncordon k8s-node01 #output node/k8s-node01 uncordoned ","date":"2022-04-10","objectID":"/blog/upgrade-k8s-v120/:3:4","tags":["computer science","infrastructure"],"title":"Upgrade Kubernetes from 1.20 to 1.21","uri":"/blog/upgrade-k8s-v120/"},{"categories":null,"content":"Final health check Run kubectl get nodes should show the following result. NAME STATUS ROLES AGE VERSION k8s-master01 Ready control-plane,master 368d v1.21.11 k8s-master02 Ready control-plane,master 32h v1.21.11 k8s-master03 Ready control-plane,master 368d v1.21.11 k8s-node01 Ready \u003cnone\u003e 368d v1.21.11 ","date":"2022-04-10","objectID":"/blog/upgrade-k8s-v120/:3:5","tags":["computer science","infrastructure"],"title":"Upgrade Kubernetes from 1.20 to 1.21","uri":"/blog/upgrade-k8s-v120/"},{"categories":null,"content":"Upgrade also containerd.io If everything is fine, update the containerd.io to the latest version using the following command apt-mark unhold containerd.io \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y containerd.io \u0026\u0026 apt-mark hold containerd.io ","date":"2022-04-10","objectID":"/blog/upgrade-k8s-v120/:3:6","tags":["computer science","infrastructure"],"title":"Upgrade Kubernetes from 1.20 to 1.21","uri":"/blog/upgrade-k8s-v120/"},{"categories":null,"content":"Useful command Check what version available for a package apt-cache madison containerd.io # output containerd.io | 1.5.11-1 | https://download.docker.com/linux/ubuntu focal/stable arm64 Packages containerd.io | 1.5.10-1 | https://download.docker.com/linux/ubuntu focal/stable arm64 Packages containerd.io | 1.4.13-1 | https://download.docker.com/linux/ubuntu focal/stable arm64 Packages ... Check current install version apt-get -s install containerd.io # output NOTE: This is only a simulation! apt-get needs root privileges for real execution. Keep also in mind that locking is deactivated, so don't depend on the relevance to the real current situation! Reading package lists... Done Building dependency tree Reading state information... Done The following held packages will be changed: containerd.io The following packages will be upgraded: containerd.io 1 upgraded, 0 newly installed, 0 to remove and 4 not upgraded. Inst containerd.io [1.4.4-1] (1.5.11-1 Docker CE:focal [arm64]) Conf containerd.io (1.5.11-1 Docker CE:focal [arm64]) ","date":"2022-04-10","objectID":"/blog/upgrade-k8s-v120/:4:0","tags":["computer science","infrastructure"],"title":"Upgrade Kubernetes from 1.20 to 1.21","uri":"/blog/upgrade-k8s-v120/"},{"categories":null,"content":"Reference [1] https://platform9.com/blog/kubernetes-upgrade-the-definitive-guide-to-do-it-yourself/ [2] https://www.lisenet.com/2021/upgrading-homelab-kubernetes-cluster-from-1-20-to-1-21/ ","date":"2022-04-10","objectID":"/blog/upgrade-k8s-v120/:5:0","tags":["computer science","infrastructure"],"title":"Upgrade Kubernetes from 1.20 to 1.21","uri":"/blog/upgrade-k8s-v120/"},{"categories":null,"content":"1 year before I setup a Kubernetes cluster with 3 master nodes and 1 worker node, and today I got the following error I don’t know that all the certs generated only have 1 year lifespan. Document says during update of cluster version should automatically update all the certs, but I don’t have the time… kubectl get pods --all-namespaces kubectl: Unable to connect to the server: x509: certificate has expired or is not yet valid ","date":"2022-04-09","objectID":"/blog/multi-node-k8s-failed/:0:0","tags":["computer science","infrastructure"],"title":"3 nodes Kubernetes cluster failed due to cert error","uri":"/blog/multi-node-k8s-failed/"},{"categories":null,"content":"Update process I found the following article. Solve the certificate error, but… Please follow this link to complete the setup. ","date":"2022-04-09","objectID":"/blog/multi-node-k8s-failed/:1:0","tags":["computer science","infrastructure"],"title":"3 nodes Kubernetes cluster failed due to cert error","uri":"/blog/multi-node-k8s-failed/"},{"categories":null,"content":"After update I do a health check and I saw this ubuntu@k8s-master02:/etc/kubernetes$ kubectl get nodes NAME STATUS ROLES AGE VERSION k8s-master01 Ready control-plane,master 367d v1.20.5 k8s-master02 NotReady control-plane,master 367d v1.20.5 k8s-master03 Ready control-plane,master 367d v1.20.5 k8s-node01 Ready \u003cnone\u003e 367d v1.20.5 I login to k8s-master02. run journalctl -u kubelet shows the following error Attempting to register node k8s-master02 Apr 09 05:25:17 k8s-master02 kubelet[744]: E0409 05:25:17.570172 744 kubelet_node_status.go:93] Unable to register node with API server: nodes is forbidden: User \"system:anonymous\" cannot create resource \"nodes\" in API group \"\" at the cluster scope ","date":"2022-04-09","objectID":"/blog/multi-node-k8s-failed/:2:0","tags":["computer science","infrastructure"],"title":"3 nodes Kubernetes cluster failed due to cert error","uri":"/blog/multi-node-k8s-failed/"},{"categories":null,"content":"Re-add master node I search Google, seems no one have the same error, so I have to delete the k8s-master02 node and re-add. ","date":"2022-04-09","objectID":"/blog/multi-node-k8s-failed/:3:0","tags":["computer science","infrastructure"],"title":"3 nodes Kubernetes cluster failed due to cert error","uri":"/blog/multi-node-k8s-failed/"},{"categories":null,"content":"On k8s-master01 Before removing k8s-master02, I need to find a way to add k8s-master02 back This stackoverflow page is helpful https://stackoverflow.com/questions/63936268/how-to-generate-kubeadm-token-for-secondary-control-plane-nodes # temporary add a upload certs for joining new control plane. (Valid only for 2 hours) kubeadm init phase upload-certs --upload-certs # ask k8s to generate the join command kubeadm token create --print-join-command remove k8s-master02 kubectl drain k8s-master02 kubectl delete node k8s-master02 ","date":"2022-04-09","objectID":"/blog/multi-node-k8s-failed/:3:1","tags":["computer science","infrastructure"],"title":"3 nodes Kubernetes cluster failed due to cert error","uri":"/blog/multi-node-k8s-failed/"},{"categories":null,"content":"On k8s-master02 Now, I have the join command, I run the following commands kubeadm reset kubeadm join 192.168.100.20:6444 --token pel8cz.mtvnu0n7q8aj6lx6 --discovery-token-ca-cert-hash sha256:xxxxxxx --control-plane --certificate-key xxxxxxxx another error come out…. 1006 18:54:08.820819 2954 manifests.go:135] [control-plane] wrote static Pod manifest for component \"kube-scheduler\" to \"/etc/kubernetes/manifests/kube-scheduler.yaml\" [check-etcd] Checking that the etcd cluster is healthy failed to dial endpoint https://192.168.100.22:2379 with maintenance client ","date":"2022-04-09","objectID":"/blog/multi-node-k8s-failed/:3:2","tags":["computer science","infrastructure"],"title":"3 nodes Kubernetes cluster failed due to cert error","uri":"/blog/multi-node-k8s-failed/"},{"categories":null,"content":"Clear etc This page helps me to troubleshoot. https://stackoverflow.com/questions/67921552/re-installed-node-cannot-join-kubernetes-cluster Back to k8s-master01 # have to install etc-client on ubuntu ETCDCTL_API=3 etcdctl --endpoints 127.0.0.1:2379 --cacert /etc/kubernetes/pki/etcd/ca.crt --cert /etc/kubernetes/pki/etcd/server.crt --key /etc/kubernetes/pki/etcd/server.key member list # list of etcd member 5a4945140f0b39d9, started, sbg2-k8s001, https://192.168.208.12:2380, https://192.168.208.12:2379 740381e3c57ef823, started, gra3-k8s001, https://192.168.208.13:2380, https://192.168.208.13:2379 77a8fbb530b10f4a, started, rbx4-k8s001, https://192.168.208.14:2380, https://192.168.208.14:2379 # remove k8s-master02 from the above list ETCDCTL_API=3 etcdctl --endpoints 127.0.0.1:2379 --cacert /etc/kubernetes/pki/etcd/ca.crt --cert /etc/kubernetes/pki/etcd/server.crt --key /etc/kubernetes/pki/etcd/server.key member remove e073aa5a204b727d ","date":"2022-04-09","objectID":"/blog/multi-node-k8s-failed/:3:3","tags":["computer science","infrastructure"],"title":"3 nodes Kubernetes cluster failed due to cert error","uri":"/blog/multi-node-k8s-failed/"},{"categories":null,"content":"Finally I am able to re-join k8s-master02 now and all nodes are healthy. NAME STATUS ROLES AGE VERSION k8s-master01 Ready control-plane,master 367d v1.20.5 k8s-master02 Ready control-plane,master 31s v1.20.5 k8s-master03 Ready control-plane,master 367d v1.20.5 k8s-node01 Ready \u003cnone\u003e 367d v1.20.5 ","date":"2022-04-09","objectID":"/blog/multi-node-k8s-failed/:3:4","tags":["computer science","infrastructure"],"title":"3 nodes Kubernetes cluster failed due to cert error","uri":"/blog/multi-node-k8s-failed/"},{"categories":null,"content":"Learning language Learning english vocab Putonghua pinyin table ","date":"2022-04-05","objectID":"/tools/:1:0","tags":null,"title":"Tools","uri":"/tools/"},{"categories":null,"content":"Learning algorithms Algorithm summary Algorithm notes Opensource notes ","date":"2022-04-05","objectID":"/tools/:2:0","tags":null,"title":"Tools","uri":"/tools/"},{"categories":null,"content":"Development tools Development tools Markdown table generator ","date":"2022-04-05","objectID":"/tools/:3:0","tags":null,"title":"Tools","uri":"/tools/"},{"categories":null,"content":"My favorite links ","date":"2022-04-05","objectID":"/link/:1:0","tags":null,"title":"Link","uri":"/link/"},{"categories":null,"content":"Mindmaps My AWS notes Algorithm notes ","date":"2022-04-05","objectID":"/link/:1:1","tags":null,"title":"Link","uri":"/link/"},{"categories":null,"content":"Productivity site Trello Design website: Figma, Canvas API development Postman Interview related: Leetcode Patterns, System design primer Best JSON formatter [Amazon Leadership Principles] (https://www.amazon.jobs/en/principles) Bitcoin and NFT: Check transaction: Etherscan, BSCscan NFT market like: Opensea, SolanaArt, Flips Finance Ethereum gas fee: Gas estimator A list of launch pads: https://theislandnow.com/blog-112/best-ido-launchpads/ Mobile app Google Play console App store developer ","date":"2022-04-05","objectID":"/link/:1:2","tags":null,"title":"Link","uri":"/link/"},{"categories":null,"content":"Youtube channel Trading Part Time Larry Very useful tutorial of how to realize all your idea. Trading rush Give me idea of how an indicator works ","date":"2022-04-05","objectID":"/link/:1:3","tags":null,"title":"Link","uri":"/link/"},{"categories":null,"content":"Setup K8S cluster for my use K8S has outperformed my expectation and works really well. I don’t need to worry about dying computers anymore. If I think the project is OK and provides a stable income on it’s own. I just simply migrate to Google cloud provider. The setup involved 3 Raspberry PI (3 master in ARM) and 1 intel NUC (x86). Now all my web services are hosted by K8S. e.g. my trade bot, my instragram bot. ","date":"2022-04-05","objectID":"/blog/change-in-infra/:0:1","tags":["infrastructure"],"title":"Change in my personal infrastructure","uri":"/blog/change-in-infra/"},{"categories":null,"content":"Try use Hugo to host my website I duplicate my original website to here. Seems promising after I have tested out VuePress as my cheatsheet app. ","date":"2022-04-05","objectID":"/blog/change-in-infra/:0:2","tags":["infrastructure"],"title":"Change in my personal infrastructure","uri":"/blog/change-in-infra/"},{"categories":null,"content":"Welcome to my personal blog. I am a software engineer from HK. I also like to flip NFT, if you like my content, please send some bitcoin to this address: 0xf17283E9254187aC04596Ac30E006A34db4cb250 Thank you ","date":"2022-04-04","objectID":"/about/:0:0","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"Dart ","date":"2022-04-04","objectID":"/cheatsheet/dart/:1:0","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Basic structure ","date":"2022-04-04","objectID":"/cheatsheet/dart/:2:0","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Simple declaration int x = 5; int? x; x ??= 5 //??= only assign when it is null final PI = 3.141592653589793; ","date":"2022-04-04","objectID":"/cheatsheet/dart/:2:1","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Declare array final aListOfInts = \u003cint\u003e[]; final aListOfStrings = ['one', 'two', 'three']; Dim matrix = New Integer(3, 2) {{1, 2, 3}, {2, 3, 4}, {3, 4, 5}, {4, 5, 6}} ","date":"2022-04-04","objectID":"/cheatsheet/dart/:2:2","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Declare structure ","date":"2022-04-04","objectID":"/cheatsheet/dart/:2:3","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Enum enum Status { none, running, stopped, paused } ","date":"2022-04-04","objectID":"/cheatsheet/dart/:2:4","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Control structure import 'project/car.dart'; void main() { List\u003cCar\u003e cars = [Car(name=\"Volvo\"), Car(name=\"BMW\"), Car(name=\"Ford\"), Car(name=\"Mazda\"), null,] Car c= new Car(); for(var i = 0; i\u003ccars.length; ++i) try { c.disp(); } on OutOfGasException { print('Out of gas') } on Exception catch (e) { print('Unknown exception: $e'); } catch (e) { print('Something really unknown: $e'); } } } class Car { // field String engine = \"E1001\"; String name; Car({required this.name}); // function void disp() { print(engine); } Future\u003cRoadCondition\u003e fetchRoadCondition(int type) async { } } ","date":"2022-04-04","objectID":"/cheatsheet/dart/:3:0","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"String ","date":"2022-04-04","objectID":"/cheatsheet/dart/:4:0","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Basic operation String Str1 = \"geeks\"; print(Str1.toUpperCase()); ","date":"2022-04-04","objectID":"/cheatsheet/dart/:4:1","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Replace String gfg = \"Welcome GeeksForGeeks\"; String result = gfg.replaceAll(\"GeeksForGeeks\", \"Geek!\"); ","date":"2022-04-04","objectID":"/cheatsheet/dart/:4:2","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Concat and compare var c1 = a + b; // + operator var c2 = '$a$b'; // string interpolation var c3 = 'a' 'b'; // string literals separated only by whitespace are concatenated automatically print(rubi == ore); // true, contain the same characters ","date":"2022-04-04","objectID":"/cheatsheet/dart/:4:3","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Regular expression RegExp hexColor = RegExp(r'^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$'); hexColor.hasMatch('#3b5'); // true hexColor.hasMatch('#FF7723'); // true hexColor.hasMatch('#000000z'); // false final myString = '25F8..25FF ; Common # Sm [8] UPPER LEFT TRIANGLE'; // find a variable length hex value at the beginning of the line final regexp = RegExp(r'^[0-9a-fA-F]+'); // find the first match though you could also do `allMatches` final match = regexp.firstMatch(myString); // group(0) is the full matched text // if your regex had groups (using parentheses) then you could get the // text from them by using group(1), group(2), etc. final matchedText = match?.group(0); // 25F8 ","date":"2022-04-04","objectID":"/cheatsheet/dart/:4:4","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Array ","date":"2022-04-04","objectID":"/cheatsheet/dart/:5:0","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Basic operation, access of element List\u003cString\u003e cars = [\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"]; print(cars[0]); ","date":"2022-04-04","objectID":"/cheatsheet/dart/:5:1","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Traverse, sort for (final i in cars) { print(i); } cars.sort((a, b) =\u003e a.length.compareTo(b.length)); ","date":"2022-04-04","objectID":"/cheatsheet/dart/:5:2","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Date ","date":"2022-04-04","objectID":"/cheatsheet/dart/:6:0","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"New date final now = DateTime.now(); final berlinWallFell = DateTime.utc(1989, 11, 9); final moonLanding = DateTime.parse('1969-07-20 20:18:04Z'); // 8:18pm final today = DateTime(now.year, now.month, now.day); //remove time part ","date":"2022-04-04","objectID":"/cheatsheet/dart/:6:1","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Add days date1.subtract(Duration(days: 7, hours: 3, minutes: 43, seconds: 56)); date1.add(Duration(days: 1, hours: 23))); ","date":"2022-04-04","objectID":"/cheatsheet/dart/:6:2","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Compare date, diff date print(givenDate.isAfter(dt1)); // false print(givenDate.isBefore(dt1)); // true print(givenDate.compareTo(dt1)); // -1 int daysBetween(DateTime from, DateTime to) { from = DateTime(from.year, from.month, from.day); to = DateTime(to.year, to.month, to.day); return (to.difference(from).inHours / 24).round(); } ","date":"2022-04-04","objectID":"/cheatsheet/dart/:6:3","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Format date import 'package:intl/intl.dart'; final DateTime now = DateTime.now(); final DateFormat formatter = DateFormat('yyyy-MM-dd'); final String formatted = formatter.format(now); print(formatted); // something like 2013-04-20 ","date":"2022-04-04","objectID":"/cheatsheet/dart/:6:4","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"File ","date":"2022-04-04","objectID":"/cheatsheet/dart/:7:0","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Console read write import 'dart:convert'; import 'dart:io'; void main() { print('1 + 1 = ...'); var line = stdin.readLineSync(encoding: utf8); print(line?.trim() == '2' ? 'Yup!' : 'Nope :('); } ","date":"2022-04-04","objectID":"/cheatsheet/dart/:7:1","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Read write line with UTF-8 Future\u003cString\u003e get _localPath async { final directory = await getApplicationDocumentsDirectory(); return directory.path; } Future\u003cFile\u003e get _localFile async { final path = await _localPath; return File('$path/counter.txt'); } Future\u003cFile\u003e writeCounter(int counter) async { final file = await _localFile; // Write the file return file.writeAsString('$counter'); } Future\u003cint\u003e readCounter() async { try { final file = await _localFile; // Read the file final contents = await file.readAsString(); return int.parse(contents); } catch (e) { // If encountering an error, return 0 return 0; } } ","date":"2022-04-04","objectID":"/cheatsheet/dart/:7:2","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"File system operation import 'dart:io'; void createFileRecursively(String filename) { // Create a new directory, recursively creating non-existent directories. new Directory.fromPath(new Path(filename).directoryPath) .createSync(recursive: true); new File(filename).createSync(); } createFileRecursively('foo/bar/baz/bleh.html'); ","date":"2022-04-04","objectID":"/cheatsheet/dart/:7:3","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Database ","date":"2022-04-04","objectID":"/cheatsheet/dart/:8:0","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Connection string list - NOSQL final database = MemoryDatabase(); ","date":"2022-04-04","objectID":"/cheatsheet/dart/:8:1","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Open connection final collection = database.collection('pizzas'); ","date":"2022-04-04","objectID":"/cheatsheet/dart/:8:2","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Execute update/insert // Our document final document = collection.newDocument(); // Insert a pizza await document.insert({ 'name': 'Pizza Margherita', 'rating': 3.5, 'ingredients': ['dough', 'tomatoes'], 'similar': [ database.collection('recipes').document('pizza_funghi'), ], }); //updater individuals await product.patch( { 'price': 12.50, }, ); await document.delete(); await database.runInTransaction((transaction) async { final document = database.collection('products').document('coffeeMugId'); final snapshot = await transaction.get(document); final price = snapshot.data['price'] as double; await transaction.patch(document, { 'price': price + 1.50, }); ), timeout: Duration(seconds:3); ","date":"2022-04-04","objectID":"/cheatsheet/dart/:8:3","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Execute select // Define what we are searching final query = Query( filter: MapFilter({ 'category': OrFilter([ ValueFilter('computer'), ValueFilter('tablet'), ]), 'price': RangeFilter(min:0, max:1000), }), skip: 0, // Start from the first result item take: 10, // Return 10 result items ); // Send query to the database final result = await database.collection('product').search( query: query, reach: Reach.server, ); // For each snapshots for (var snapshot in result.snapshots) { // Get price final price = snapshot.data['price'] as double; print('price: $price'); } ","date":"2022-04-04","objectID":"/cheatsheet/dart/:8:4","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Connection string list - SQL import 'package:database/sql.dart'; import 'package:database_adapter_postgre/database_adapter_postgre.dart'; // In this example, we use PostgreSQL adapter final database = Postgre( host: 'localhost', user: 'database user', password: 'database password', databaseName: 'example', ).database(); ","date":"2022-04-04","objectID":"/cheatsheet/dart/:8:5","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Open connection // Get SQL client. final sqlClient = database.sqlClient; ","date":"2022-04-04","objectID":"/cheatsheet/dart/:8:6","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Execute update/insert await sqlClient.execute( 'INSERT INTO Product (name, price) VALUES (?, ?)', ['Pizza Hawaii', 8.50], ); await sqlClient.execute('DELETE FROM Product WHERE price \u003c ?', [5.0]); await sqlClient.runInTransaction((transaction) async { final values = await transaction.query('...').toMaps(); // ... await transaction.execute('...'); await transaction.execute('...'); // ... ), timeout: Duration(seconds:3)); ","date":"2022-04-04","objectID":"/cheatsheet/dart/:8:7","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Execute select final pizzas = await sqlClient.query( 'SELECT * FROM product WHERE type = ?, price \u003c ?', ['pizza', 10], ).toMaps(); for (var pizza in pizzas) { print(pizza['name']); } ","date":"2022-04-04","objectID":"/cheatsheet/dart/:8:8","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Popular format ","date":"2022-04-04","objectID":"/cheatsheet/dart/:9:0","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"CSV Read import 'package:csv/csv.dart'; final input = new File('a/csv/file.txt').openRead(); final fields = await input.transform(utf8.decoder).transform(new CsvToListConverter()).toList(); Write final res = const ListToCsvConverter().convert([[',b', 3.1, 42], ['n\\n']]); assert(res == '\",b\",3.1,42\\r\\n\"n\\n\"'); ","date":"2022-04-04","objectID":"/cheatsheet/dart/:9:1","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"DOM / XML Read / Write import 'package:xml/xml.dart'; final bookshelfXml = '''\u003c?xml version=\"1.0\"?\u003e \u003cbookshelf\u003e \u003cbook\u003e \u003ctitle lang=\"english\"\u003eGrowing a Language\u003c/title\u003e \u003cprice\u003e29.99\u003c/price\u003e \u003c/book\u003e \u003cbook\u003e \u003ctitle lang=\"english\"\u003eLearning XML\u003c/title\u003e \u003cprice\u003e39.95\u003c/price\u003e \u003c/book\u003e \u003cprice\u003e132.00\u003c/price\u003e \u003c/bookshelf\u003e'''; final document = XmlDocument.parse(bookshelfXml); final total = document.findAllElements('book') .map((node) =\u003e double.parse(node.findElements('price').single.text)) .reduce((a, b) =\u003e a + b); print(total); final builder = XmlBuilder(); builder.processing('xml', 'version=\"1.0\"'); builder.element('bookshelf', nest: () { builder.element('book', nest: () { builder.element('title', nest: () { builder.attribute('lang', 'en'); builder.text('Growing a Language'); }); builder.element('price', nest: 29.99); }); builder.element('book', nest: () { builder.element('title', nest: () { builder.attribute('lang', 'en'); builder.text('Learning XML'); }); builder.element('price', nest: 39.95); }); builder.element('price', nest: 132.00); }); final bookshelfXml = builder.buildDocument(); Select element and Traverse final titles = document.findAllElements('title'); titles .map((node) =\u003e node.text) .forEach(print); ","date":"2022-04-04","objectID":"/cheatsheet/dart/:9:2","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"JSON Read / Write import 'dart:convert'; final parsed = jsonDecode(responseBody).cast\u003cMap\u003cString, dynamic\u003e\u003e(); factory Photo.fromJson(Map\u003cString, dynamic\u003e json) { return Photo( albumId: json['albumId'] as int, id: json['id'] as int, title: json['title'] as String, url: json['url'] as String, thumbnailUrl: json['thumbnailUrl'] as String, ); } Map\u003cString, dynamic\u003e toJson() =\u003e { 'name': name, 'email': email, }; String json = jsonEncode(user); Map\u003cString, dynamic\u003e userMap = jsonDecode(jsonString); var user = User.fromJson(userMap); ","date":"2022-04-04","objectID":"/cheatsheet/dart/:9:3","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Yaml import 'package:yaml/yaml.dart'; var doc = loadYaml(\"YAML: YAML Ain't Markup Language\"); print(doc['YAML']); // json is a valid yaml so you can dump it as json.!? ","date":"2022-04-04","objectID":"/cheatsheet/dart/:9:4","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Web/API call Fetch http and call api import 'package:http/http.dart' as http; Future\u003cList\u003cPhoto\u003e\u003e fetchPhotos(http.Client client) async { final response = await client .get(Uri.parse('https://jsonplaceholder.typicode.com/photos')); // Use the compute function to run parsePhotos in a separate isolate. return compute(parsePhotos, response.body); } ","date":"2022-04-04","objectID":"/cheatsheet/dart/:9:5","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Advance structure / Popular structure ","date":"2022-04-04","objectID":"/cheatsheet/dart/:10:0","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Map Map\u003cint, double\u003e aMapOfIntToDouble = \u003cint, double\u003e{}; map.forEach((k, v) =\u003e print(\"Key : $k, Value : $v\")); for (var k in numMap.keys) { print(\"Key : $k, value : ${numMap[k]}\"); } for (MapEntry e in numMap.entries) { print(\"Key ${e.key}, Value ${e.value}\"); } ","date":"2022-04-04","objectID":"/cheatsheet/dart/:10:1","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Set Set\u003cint\u003e aSetOfInts = \u003cint\u003e{}; for (var e in mySet) { //code } ","date":"2022-04-04","objectID":"/cheatsheet/dart/:10:2","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"List List\u003cint\u003e aListOfInts = \u003cint\u003e[]; final aListOfBaseType = \u003cBaseType\u003e[SubType(), SubType()]; for(var i=0;i\u003cmyList.length;i++){ print(myList[i]); } myList.forEach((element) =\u003e print(element) ); //get iterator to the list var myListIter = myList.iterator; //iterate over the list while(myListIter.moveNext()){ print(myListIter.current); } ","date":"2022-04-04","objectID":"/cheatsheet/dart/:10:3","tags":null,"title":"Dart","uri":"/cheatsheet/dart/"},{"categories":null,"content":"Go lang ","date":"2022-04-04","objectID":"/cheatsheet/golang/:1:0","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Header package main import \"fmt\" ","date":"2022-04-04","objectID":"/cheatsheet/golang/:2:0","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Basic structure ","date":"2022-04-04","objectID":"/cheatsheet/golang/:3:0","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Simple declaration var msg string msg = \"Hello\" myNum := 5 var myFloatNum float32 := 5.99 const Phi = 1.618 ","date":"2022-04-04","objectID":"/cheatsheet/golang/:3:1","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Declare array var cars [5]string cars := [...]string{\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"} //Fix size slice := []int{2, 3, 4} //dynamic size var threedim [5][10][4]int a = [3][4]int{ {0, 1, 2, 3} , /* initializers for row indexed by 0 */ {4, 5, 6, 7} , /* initializers for row indexed by 1 */ {8, 9, 10, 11} /* initializers for row indexed by 2 */ } System.out.println(len(cars)) ","date":"2022-04-04","objectID":"/cheatsheet/golang/:3:2","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Declare structure ","date":"2022-04-04","objectID":"/cheatsheet/golang/:3:3","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Enum type Season int64 const ( Summer Season = 0 Autumn = 1 Winter = 2 Spring = 3 ) ","date":"2022-04-04","objectID":"/cheatsheet/golang/:3:4","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Control structure A code segment which show the following * Loop * If check null * Try catch * Import Library * Define a function * Declare a class package main import \"fmt\" type car struct { name string } func New(name string) car { e := car{name} return e } /* define a method for circle */ func(circle Circle) area() float64 { return math.Pi * circle.radius * circle.radius } func main() { //finally in java defer print(\"end\") //there is no try catch handling. //cannot be null, if null, make it a pointer cars := [...]string{\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"} for i := 1; i \u003c len(cars); i++ { var car string = cars[i] fmt.Println(\"Hello \" + car + \"!\") } } ","date":"2022-04-04","objectID":"/cheatsheet/golang/:4:0","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"String ","date":"2022-04-04","objectID":"/cheatsheet/golang/:5:0","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Basic operation var greeting string = \"Hello\"; fmt.Println(fmt.Sprintf(\"The length of the txt string is: %d\", len(greeting)) ); fmt.Println(strings.ToUpper(greeting)); fmt.Println(strings.Index(greeting, \"ll\")) ","date":"2022-04-04","objectID":"/cheatsheet/golang/:5:1","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Replace Str := \"Runoob\" fmt.Println(strings.Replace(Str, \"u\", \"D\", -1)); ","date":"2022-04-04","objectID":"/cheatsheet/golang/:5:2","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Concat and compare a := \"12\"+\"34\" result1 := str1 == str2 result5 := str1 != str2 result6 := str1 \u003e str2 strings.Compare(\"GeeksforGeeks\", \"GeeksforGeeks\") ","date":"2022-04-04","objectID":"/cheatsheet/golang/:5:3","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Regular expression import ( \"fmt\" \"regexp\" \"strings\" ) str := \"geeksforgeeks\" match1, err := regexp.MatchString(\"geeks\", str) fmt.Println(\"Match: \", match1, \" Error: \", err) re, _ := regexp.Compile(\"geek\") // string to be matched str := \"I love geeksforgeeks\" // returns the slice of first and last index match := re.FindStringIndex(str) fmt.Println(match) //[7 11] ","date":"2022-04-04","objectID":"/cheatsheet/golang/:5:4","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Array ","date":"2022-04-04","objectID":"/cheatsheet/golang/:6:0","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Basic operation, access of element cars := [...]string{\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"}; print (cars[0]); ","date":"2022-04-04","objectID":"/cheatsheet/golang/:6:1","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Traverse, sort for _, car := range cars { print(car); } import \"sort\" sort.Strings(arr[:]) //arr is array =\u003e arr[:] is a slice ","date":"2022-04-04","objectID":"/cheatsheet/golang/:6:2","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Date ","date":"2022-04-04","objectID":"/cheatsheet/golang/:7:0","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"New date import \"time\" t := time.Now() fmt.Println(t) //2009-11-10 23:00:00 +0000 UTC m=+0.000000001 t = time.Date(2021, time.Month(2), 21, 1, 10, 30, 0, time.UTC) rounded := time.Date(t.Year(), t.Month(), t.Day(), 0, 0, 0, 0, t.Location()) ","date":"2022-04-04","objectID":"/cheatsheet/golang/:7:1","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Add days myDate.AddDate(0, 0, 2) //adding 2 days ","date":"2022-04-04","objectID":"/cheatsheet/golang/:7:2","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Compare date, diff date g1 := today.Before(tomorrow) g2 := tomorrow.After(today) today != tomorrow today == tomorrow ","date":"2022-04-04","objectID":"/cheatsheet/golang/:7:3","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Format date now := time.Now() fmt.Println(now.Format(\"2006-02-01\")) //reference time = Mon Jan 2 15:04:05 -0700 MST 2006 fmt.Println(now.Format(time.RFC822)) //02 Jan 06 15:04 MST fmt.Println(now.Format(time.Kitchen)) //3:04PM fmt.Println(now.Format(time.UnixDate)) //Mon Jan _2 15:04:05 MST 2006 ","date":"2022-04-04","objectID":"/cheatsheet/golang/:7:4","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"File ","date":"2022-04-04","objectID":"/cheatsheet/golang/:8:0","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Console read write reader := bufio.NewReader(os.Stdin) fmt.Println(\"Simple Shell\") fmt.Println(\"---------------------\") for { fmt.Print(\"-\u003e \") text, _ := reader.ReadString('\\n') // convert CRLF to LF text = strings.Replace(text, \"\\n\", \"\", -1) if strings.Compare(\"hi\", text) == 0 { fmt.Println(\"hello, Yourself\") } } reader := bufio.NewReader(os.Stdin) char, _, err := reader.ReadRune() //single character if err != nil { fmt.Println(err) } // print out the unicode value i.e. A -\u003e 65, a -\u003e 97 fmt.Println(char) ","date":"2022-04-04","objectID":"/cheatsheet/golang/:8:1","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Read write line with UTF-8 import ( \"fmt\" \"io/ioutil\" ) func main() { // read in the contents of the localfile.data data, err := ioutil.ReadFile(\"localfile.data\") // if our program was unable to read the file // print out the reason why it can't if err != nil { fmt.Println(err) } // if it was successful in reading the file then // print out the contents as a string fmt.Print(string(data)) // the WriteFile method returns an error if unsuccessful err := ioutil.WriteFile(\"myfile.data\", mydata, 0777) // handle this error if err != nil { // print it out fmt.Println(err) } f, err := os.OpenFile(\"myfile.data\", os.O_APPEND|os.O_WRONLY, 0600) if err != nil { panic(err) } defer f.Close() } ","date":"2022-04-04","objectID":"/cheatsheet/golang/:8:2","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"File system operation import ( \"bufio\" \"fmt\" \"os\" ) f, err := os.Create(\"/tmp/dat2\") check(err) err = os.MkdirAll(\"subdir/parent/child\", 0755) check(err) c, err := os.ReadDir(\"subdir/parent\") check(err) fmt.Println(\"Listing subdir/parent\") for _, entry := range c { fmt.Println(\" \", entry.Name(), entry.IsDir()) } err = os.Chdir(\"subdir/parent/child\") check(err) ","date":"2022-04-04","objectID":"/cheatsheet/golang/:8:3","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Database ","date":"2022-04-04","objectID":"/cheatsheet/golang/:9:0","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Connection string list and open connection import ( \"database/sql\" \"fmt\" \"log\" \"os\" \"github.com/go-sql-driver/mysql\" ) var db *sql.DB func main() { // Capture connection properties. cfg := mysql.Config{ User: os.Getenv(\"DBUSER\"), Passwd: os.Getenv(\"DBPASS\"), Net: \"tcp\", Addr: \"127.0.0.1:3306\", DBName: \"recordings\", } // Get a database handle. var err error db, err = sql.Open(\"mysql\", cfg.FormatDSN()) if err != nil { log.Fatal(err) } pingErr := db.Ping() if pingErr != nil { log.Fatal(pingErr) } fmt.Println(\"Connected!\") } ","date":"2022-04-04","objectID":"/cheatsheet/golang/:9:1","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Execute update/insert // addAlbum adds the specified album to the database, // returning the album ID of the new entry func addAlbum(alb Album) (int64, error) { result, err := db.Exec(\"INSERT INTO album (title, artist, price) VALUES (?, ?, ?)\", alb.Title, alb.Artist, alb.Price) if err != nil { return 0, fmt.Errorf(\"addAlbum: %v\", err) } id, err := result.LastInsertId() if err != nil { return 0, fmt.Errorf(\"addAlbum: %v\", err) } return id, nil } ","date":"2022-04-04","objectID":"/cheatsheet/golang/:9:2","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Execute select and traverse dataset func albumsByArtist(name string) ([]Album, error) { // An albums slice to hold data from returned rows. var albums []Album rows, err := db.Query(\"SELECT * FROM album WHERE artist = ?\", name) if err != nil { return nil, fmt.Errorf(\"albumsByArtist %q: %v\", name, err) } defer rows.Close() // Loop through rows, using Scan to assign column data to struct fields. for rows.Next() { var alb Album if err := rows.Scan(\u0026alb.ID, \u0026alb.Title, \u0026alb.Artist, \u0026alb.Price); err != nil { return nil, fmt.Errorf(\"albumsByArtist %q: %v\", name, err) } albums = append(albums, alb) } if err := rows.Err(); err != nil { return nil, fmt.Errorf(\"albumsByArtist %q: %v\", name, err) } return albums, nil } ","date":"2022-04-04","objectID":"/cheatsheet/golang/:9:3","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Popular format ","date":"2022-04-04","objectID":"/cheatsheet/golang/:10:0","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"CSV Read import ( \"encoding/csv\" \"fmt\" \"io\" \"log\" \"strings\" ) in := `first_name,last_name,username \"Rob\",\"Pike\",rob Ken,Thompson,ken \"Robert\",\"Griesemer\",\"gri\" ` r := csv.NewReader(strings.NewReader(in)) for { record, err := r.Read() if err == io.EOF { break } if err != nil { log.Fatal(err) } fmt.Println(record) } Write records := [][]string{ {\"first_name\", \"last_name\", \"username\"}, {\"Rob\", \"Pike\", \"rob\"}, {\"Ken\", \"Thompson\", \"ken\"}, {\"Robert\", \"Griesemer\", \"gri\"}, } w := csv.NewWriter(os.Stdout) for _, record := range records { if err := w.Write(record); err != nil { log.Fatalln(\"error writing record to csv:\", err) } } // Write any buffered data to the underlying writer (standard output). w.Flush() if err := w.Error(); err != nil { log.Fatal(err) } ","date":"2022-04-04","objectID":"/cheatsheet/golang/:10:1","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"DOM / XML Read / Write and Traverse import ( \"encoding/xml\" \"fmt\" \"log\" \"strings\" ) type Plant struct { XMLName xml.Name `xml:\"plant\"` Id int `xml:\"id,attr\"` Name string `xml:\"name\"` Origin []string `xml:\"origin\"` } coffee := \u0026Plant{Id: 27, Name: \"Coffee\"} coffee.Origin = []string{\"Ethiopia\", \"Brazil\"} out, _ := xml.MarshalIndent(coffee, \" \", \" \") fmt.Println(string(out)) type Users struct { XMLName xml.Name `xml:\"users\"` Users []User `xml:\"user\"` } type User struct { XMLName xml.Name `xml:\"user\"` Type string `xml:\"type,attr\"` Name string `xml:\"name\"` Social Social `xml:\"social\"` } // read our opened xmlFile as a byte array. byteValue, _ := ioutil.ReadAll(xmlFile) // we initialize our Users array var users Users // we unmarshal our byteArray which contains our // xmlFiles content into 'users' which we defined above xml.Unmarshal(byteValue, \u0026users) for i := 0; i \u003c len(users.Users); i++ { fmt.Println(\"User Type: \" + users.Users[i].Type) fmt.Println(\"User Name: \" + users.Users[i].Name) fmt.Println(\"Facebook Url: \" + users.Users[i].Social.Facebook) } Select element import \"gopkg.in/xmlpath.v2\" path := xmlpath.MustCompile(\"/library/book/isbn\") root, err := xmlpath.Parse(file) if err != nil { log.Fatal(err) } if value, ok := path.String(root); ok { fmt.Println(\"Found:\", value) } ","date":"2022-04-04","objectID":"/cheatsheet/golang/:10:2","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"JSON Read / Write import ( \"encoding/json\" \"fmt\" \"os\" ) type response2 struct { Page int `json:\"page\"` Fruits []string `json:\"fruits\"` } res2D := \u0026response2{ Page: 1, Fruits: []string{\"apple\", \"peach\", \"pear\"}} res2B, _ := json.Marshal(res2D) fmt.Println(string(res2B)) //{\"page\":1,\"fruits\":[\"apple\",\"peach\",\"pear\"]} type Users struct { Users []User `json:\"users\"` } // User struct which contains a name // a type and a list of social links type User struct { Name string `json:\"name\"` Type string `json:\"type\"` Age int `json:\"Age\"` Social Social `json:\"social\"` } // Open our jsonFile jsonFile, err := os.Open(\"users.json\") // if we os.Open returns an error then handle it if err != nil { fmt.Println(err) } fmt.Println(\"Successfully Opened users.json\") // defer the closing of our jsonFile so that we can parse it later on defer jsonFile.Close() // read our opened jsonFile as a byte array. byteValue, _ := ioutil.ReadAll(jsonFile) var users Users json.Unmarshal(byteValue, \u0026users) for i := 0; i \u003c len(users.Users); i++ { fmt.Println(\"User Type: \" + users.Users[i].Type) fmt.Println(\"User Age: \" + strconv.Itoa(users.Users[i].Age)) fmt.Println(\"User Name: \" + users.Users[i].Name) fmt.Println(\"Facebook Url: \" + users.Users[i].Social.Facebook) } ","date":"2022-04-04","objectID":"/cheatsheet/golang/:10:3","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Yaml type T struct { A string B struct { RenamedC int `yaml:\"c\"` D []int `yaml:\",flow\"` } } t := T{} err := yaml.Unmarshal([]byte(data), \u0026t) if err != nil { log.Fatalf(\"error: %v\", err) } fmt.Printf(\"--- t:\\n%v\\n\\n\", t) d, err := yaml.Marshal(\u0026t) if err != nil { log.Fatalf(\"error: %v\", err) } fmt.Printf(\"--- t dump:\\n%s\\n\\n\", string(d)) ","date":"2022-04-04","objectID":"/cheatsheet/golang/:10:4","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Web/API call Fetch http import ( \"io/ioutil\" \"log\" \"net/http\" ) resp, err := http.Get(\"https://jsonplaceholder.typicode.com/posts/1\") if err != nil { log.Fatalln(err) } Call api func main() { //Encode the data postBody, _ := json.Marshal(map[string]string{ \"name\": \"Toby\", \"email\": \"Toby@example.com\", }) responseBody := bytes.NewBuffer(postBody) //Leverage Go's HTTP Post function to make request resp, err := http.Post(\"https://postman-echo.com/post\", \"application/json\", responseBody) //Handle Error if err != nil { log.Fatalf(\"An Error Occured %v\", err) } defer resp.Body.Close() //Read the response body body, err := ioutil.ReadAll(resp.Body) if err != nil { log.Fatalln(err) } sb := string(body) log.Printf(sb) } ","date":"2022-04-04","objectID":"/cheatsheet/golang/:10:5","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Advance structure / Popular structure ","date":"2022-04-04","objectID":"/cheatsheet/golang/:11:0","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Map ○ Declaration ○ Traverse ○ Common operation (add/remove/find) m := make(map[string]int) m[\"Dio\"] = 3 m[\"Jonathan\"] = 1 var id string var ok bool if x, found := res[\"strID\"]; found { if id, ok = x.(string); !ok { //do whatever you want to handle errors - this means this wasn't a string } } else { //handle error - the map didn't contain this key } for k, v := range m { fmt.Printf(\"key[%s] value[%s]\\n\", k, v) } _, ok := sessions[\"moo\"]; if ok { delete(sessions, \"moo\"); } ","date":"2022-04-04","objectID":"/cheatsheet/golang/:11:1","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Set //No set in golang, use map[string]bool instead ","date":"2022-04-04","objectID":"/cheatsheet/golang/:11:2","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"List import \"container/list\" l := list.New() // Initialize an empty list fmt.Println(l) // \u0026{{0x43e280 0x43e280 \u003cnil\u003e \u003cnil\u003e} 0} fmt.Println(l.Front()) // \u003cnil\u003e fmt.Println(l.Back()) // \u003cnil\u003e l.PushFront(10) fmt.Println(l.Front()) // \u0026{0x43e280 0x43e280 0x43e280 10} l.PushBackList(l2) //l2 is a list here l.Remove(v) ","date":"2022-04-04","objectID":"/cheatsheet/golang/:11:3","tags":null,"title":"Go","uri":"/cheatsheet/golang/"},{"categories":null,"content":"Java ","date":"2022-04-04","objectID":"/cheatsheet/java/:1:0","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Basic structure ","date":"2022-04-04","objectID":"/cheatsheet/java/:2:0","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Simple declaration int myNum = 5; // Integer (whole number) float myFloatNum = 5.99f; // Floating point number ","date":"2022-04-04","objectID":"/cheatsheet/java/:2:1","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Declare array String[] cars = new String[4]; String[] cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"}; int[][] myNumbers = { {1, 2, 3, 4}, {5, 6, 7} }; System.out.println(cars.length) ","date":"2022-04-04","objectID":"/cheatsheet/java/:2:2","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Declare structure public class Main { int x = 5; public static void main(String[] args) { Main myObj = new Main(); System.out.println(myObj.x); } } ","date":"2022-04-04","objectID":"/cheatsheet/java/:2:3","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Enum enum Level { LOW, MEDIUM, HIGH } ","date":"2022-04-04","objectID":"/cheatsheet/java/:2:4","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Control structure A code segment which show the following * Loop * If check null * Try catch * Import Library * Define a function * Declare a class import java.io.File; // Import the File class public class Main { public static void main(String[] args) { try{ String[] cars = [\"Volvo\", \"BMW\", \"Ford\", \"Mazda\", null]; for(int i=0; i\u003ccars.length; ++i){ String car = cars[i]; if(car == null) System.out.println(\"Hello Hell!\"); else System.out.println(\"Hello \" + car + \"!\"); } } catch(Exception ex){ } } } ","date":"2022-04-04","objectID":"/cheatsheet/java/:3:0","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"String ","date":"2022-04-04","objectID":"/cheatsheet/java/:4:0","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Basic operation String greeting = \"Hello\"; System.out.println(\"The length of the txt string is: \" + txt.length()); System.out.println(txt.toUpperCase()); System.out.println(txt.indexOf(\"locate\")); // Outputs 7 ","date":"2022-04-04","objectID":"/cheatsheet/java/:4:1","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Replace String Str = new String(\"Runoob\"); System.out.println(Str.replace('u', 'D')); ","date":"2022-04-04","objectID":"/cheatsheet/java/:4:2","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Concat and compare \"12\".compareTo(\"34\") String a = \"12\"+\"34\" ","date":"2022-04-04","objectID":"/cheatsheet/java/:4:3","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Regular expression import java.util.regex.Matcher; import java.util.regex.Pattern; Pattern pattern = Pattern.compile(\"w3schools\", Pattern.CASE_INSENSITIVE); Matcher matcher = pattern.matcher(\"Visit W3Schools!\"); boolean matchFound = matcher.find(); if(matchFound) { System.out.println(\"Match found\"); } else { System.out.println(\"Match not found\"); } ","date":"2022-04-04","objectID":"/cheatsheet/java/:4:4","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Array ","date":"2022-04-04","objectID":"/cheatsheet/java/:5:0","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Basic operation, access of element String[] cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"}; System.out.println(cars[0]); ","date":"2022-04-04","objectID":"/cheatsheet/java/:5:1","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Traverse, sort for (String i : cars) { System.out.println(i); } Arrays.sort(cars); ","date":"2022-04-04","objectID":"/cheatsheet/java/:5:2","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Date Java 8 new library java.time similar to Joda time ","date":"2022-04-04","objectID":"/cheatsheet/java/:6:0","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"New date import java.time.LocalDate; // import the LocalDate class LocalDate localDate = LocalDate.now(); // Create a date object LocalDate localDate = LocalDate.of(2017, 06, 22); System.out.println(localDate); // Display the current date LocalDate localDate = LocalDate.getLocalDate(); ","date":"2022-04-04","objectID":"/cheatsheet/java/:6:1","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Add days LocalDate tomorrow = today.plusDays(1); ","date":"2022-04-04","objectID":"/cheatsheet/java/:6:2","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Compare date, diff date if(todayDate.after(historyDate) \u0026\u0026 todayDate.before(futureDate)) { // In between } ","date":"2022-04-04","objectID":"/cheatsheet/java/:6:3","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Format date System.out.println(myDateObj); DateTimeFormatter myFormatObj = DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm:ss\"); String formattedDate = myDateObj.format(myFormatObj); System.out.println(\"After formatting: \" + formattedDate); ","date":"2022-04-04","objectID":"/cheatsheet/java/:6:4","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"File ","date":"2022-04-04","objectID":"/cheatsheet/java/:7:0","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Console read write //read BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); String name = reader.readLine(); //write System.out.println(name); ","date":"2022-04-04","objectID":"/cheatsheet/java/:7:1","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Read write line with UTF-8 import java.io.File; // Import the File class File myObj = new File(\"filename.txt\"); // Specify the filename myObj.createNewFile() //return true if can create //read try { File myObj = new File(\"filename.txt\", \"UTF-8\")); Scanner myReader = new Scanner(myObj); while (myReader.hasNextLine()) { String data = myReader.nextLine(); System.out.println(data); } myReader.close(); } catch (FileNotFoundException e) { System.out.println(\"An error occurred.\"); e.printStackTrace(); } //write try { //Writer fstream = new OutputStreamWriter(new FileOutputStream(mergedFile), StandardCharsets.UTF_8); FileWriter myWriter = new FileWriter(\"filename.txt\", \"UTF-8\")); myWriter.write(\"Files in Java might be tricky, but it is fun enough!\"); myWriter.close(); System.out.println(\"Successfully wrote to the file.\"); } catch (IOException e) { System.out.println(\"An error occurred.\"); e.printStackTrace(); } ","date":"2022-04-04","objectID":"/cheatsheet/java/:7:2","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Database ","date":"2022-04-04","objectID":"/cheatsheet/java/:8:0","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Connection string list \"jdbc:oracle:thin:username/password@amrood:1521:EMP\" ","date":"2022-04-04","objectID":"/cheatsheet/java/:8:1","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Open connection import java.sql.* ; // for standard JDBC programs import java.math.* ; // for BigDecimal and BigInteger support try { Class.forName(\"oracle.jdbc.driver.OracleDriver\").newInstance(); String URL = \"jdbc:oracle:thin:username/password@amrood:1521:EMP\"; Connection conn = DriverManager.getConnection(URL); } catch(ClassNotFoundException ex) { System.out.println(\"Error: unable to load driver class!\"); System.exit(1); catch(IllegalAccessException ex) { System.out.println(\"Error: access problem while loading!\"); System.exit(2); catch(InstantiationException ex) { System.out.println(\"Error: unable to instantiate driver!\"); System.exit(3); } ","date":"2022-04-04","objectID":"/cheatsheet/java/:8:2","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Execute update/insert sql = \"INSERT INTO Registration \" + \"VALUES(?, ?, ?, ?)\"; PreparedStatement updateRegistration = con.prepareStatement(sql) updateRegistration.setInt(1, 103); updateRegistration.setString(2, 'Sumit'); updateRegistration.setString(3, 'Mittal'); updateRegistration.setString(4, 28); updateRegistration.executeUpdate(); System.out.println(\"Inserted records into the table...\"); ","date":"2022-04-04","objectID":"/cheatsheet/java/:8:3","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Execute select //STEP 4: Execute a query System.out.println(\"Creating statement...\"); stmt = conn.createStatement(); String sql; sql = \"SELECT id, first, last, age FROM Employees\"; ResultSet rs = stmt.executeQuery(sql); ","date":"2022-04-04","objectID":"/cheatsheet/java/:8:4","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Traverse the dataset //STEP 5: Extract data from result set while(rs.next()){ //Retrieve by column name int id = rs.getInt(\"id\"); int age = rs.getInt(\"age\"); String first = rs.getString(\"first\"); String last = rs.getString(\"last\"); //Display values System.out.print(\"ID: \" + id); System.out.print(\", Age: \" + age); System.out.print(\", First: \" + first); System.out.println(\", Last: \" + last); } //STEP 6: Clean-up environment rs.close(); stmt.close(); conn.close(); ","date":"2022-04-04","objectID":"/cheatsheet/java/:8:5","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Popular format ","date":"2022-04-04","objectID":"/cheatsheet/java/:9:0","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"CSV compile group: 'com.opencsv', name: 'opencsv', version: '4.1' Read CSVReader csvReader = new CSVReader(filereader); String[] nextRecord; // we are going to read data line by line while ((nextRecord = csvReader.readNext()) != null) { for (String cell : nextRecord) { System.out.print(cell + \"\\t\"); } System.out.println(); } // Create an object of file reader class with CSV file as a parameter. FileReader filereader = new FileReader(file); // create csvParser object with // custom seperator semi-colon CSVParser parser = new CSVParserBuilder().withSeparator(';').build(); // create csvReader object with parameter // filereader and parser CSVReader csvReader = new CSVReaderBuilder(filereader) .withCSVParser(parser) .build(); // Read all data at once List\u003cString[]\u003e allData = csvReader.readAll(); Write CSVWriter writer = new CSVWriter(new FileWriter(path.toString())); for (String[] array : stringArray) { writer.writeNext(array); } writer.close(); ","date":"2022-04-04","objectID":"/cheatsheet/java/:9:1","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"DOM / XML Java 9 need dependency on javax.xml.bind:jaxb-api:2.3.0 Read / Write import java.io.File; import javax.xml.parsers.DocumentBuilderFactory; import javax.xml.parsers.DocumentBuilder; import org.w3c.dom.Document; import org.w3c.dom.NodeList; import org.w3c.dom.Node; import org.w3c.dom.Element; public class DomParserDemo { public static void main(String[] args){ try { File inputFile = new File(\"input.txt\"); DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance(); DocumentBuilder dBuilder = dbFactory.newDocumentBuilder(); Document doc = dBuilder.parse(inputFile); doc.getDocumentElement().normalize(); System.out.println(\"Root element :\" + doc.getDocumentElement().getNodeName()); NodeList nList = doc.getElementsByTagName(\"student\"); System.out.println(\"----------------------------\"); for (int temp = 0; temp \u003c nList.getLength(); temp++) { Node nNode = nList.item(temp); System.out.println(\"\\nCurrent Element :\" + nNode.getNodeName()); if (nNode.getNodeType() == Node.ELEMENT_NODE) { Element eElement = (Element) nNode; System.out.println(\"Student roll no : \" + eElement.getAttribute(\"rollno\")); System.out.println(\"First Name : \" + eElement .getElementsByTagName(\"firstname\") .item(0) .getTextContent()); System.out.println(\"Last Name : \" + eElement .getElementsByTagName(\"lastname\") .item(0) .getTextContent()); System.out.println(\"Nick Name : \" + eElement .getElementsByTagName(\"nickname\") .item(0) .getTextContent()); System.out.println(\"Marks : \" + eElement .getElementsByTagName(\"marks\") .item(0) .getTextContent()); } } } catch (Exception e) { e.printStackTrace(); } } } Write XML public class CreateXMLFileJava { public static final String xmlFilePath = \"C:\\\\Users\\\\nikos7\\\\Desktop\\\\files\\\\xmlfile.xml\"; public static void main(String argv[]) { try { DocumentBuilderFactory documentFactory = DocumentBuilderFactory.newInstance(); DocumentBuilder documentBuilder = documentFactory.newDocumentBuilder(); Document document = documentBuilder.newDocument(); // root element Element root = document.createElement(\"company\"); document.appendChild(root); // employee element Element employee = document.createElement(\"employee\"); root.appendChild(employee); // set an attribute to staff element Attr attr = document.createAttribute(\"id\"); attr.setValue(\"10\"); employee.setAttributeNode(attr); //you can also use staff.setAttribute(\"id\", \"1\") for this // firstname element Element firstName = document.createElement(\"firstname\"); firstName.appendChild(document.createTextNode(\"James\")); employee.appendChild(firstName); // lastname element Element lastname = document.createElement(\"lastname\"); lastname.appendChild(document.createTextNode(\"Harley\")); employee.appendChild(lastname); // email element Element email = document.createElement(\"email\"); email.appendChild(document.createTextNode(\"james@example.org\")); employee.appendChild(email); // department elements Element department = document.createElement(\"department\"); department.appendChild(document.createTextNode(\"Human Resources\")); employee.appendChild(department); // create the xml file //transform the DOM Object to an XML File TransformerFactory transformerFactory = TransformerFactory.newInstance(); Transformer transformer = transformerFactory.newTransformer(); DOMSource domSource = new DOMSource(document); StreamResult streamResult = new StreamResult(new File(xmlFilePath)); // If you use // StreamResult result = new StreamResult(System.out); // the output will be pushed to the standard output ... // You can use that for debugging transformer.transform(domSource, streamResult); System.out.println(\"Done creating XML File\"); } catch (ParserConfigurationException pce) { pce.printStackTrace(); } catch (TransformerException tfe) { tfe.printStackTrace(); } } } ","date":"2022-04-04","objectID":"/cheatsheet/java/:9:2","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"JSON \u003cdependency\u003e \u003cgroupId\u003ecom.alibaba\u003c/groupId\u003e \u003cartifactId\u003efastjson\u003c/artifactId\u003e \u003cversion\u003e1.2.47\u003c/version\u003e \u003c/dependency\u003e Read JSONObject object = new JSONObject(); //string object.put(\"string\",\"string\"); //int object.put(\"int\",2); //boolean object.put(\"boolean\",true); //array List\u003cInteger\u003e integers = Arrays.asList(1,2,3); object.put(\"list\",integers); //null object.put(\"null\",null); ​ System.out.println(object); Write JSONObject object = JSONObject .parseObject(\"{\\\"boolean\\\":true,\\\"string\\\":\\\"string\\\",\\\"list\\\":[1,2,3],\\\"int\\\":2}\"); //string String s = object.getString(\"string\"); System.out.println(s); //int int i = object.getIntValue(\"int\"); System.out.println(i); //boolean boolean b = object.getBooleanValue(\"boolean\"); System.out.println(b); //list List\u003cInteger\u003e integers = JSON.parseArray(object.getJSONArray(\"list\").toJSONString(),Integer.class); integers.forEach(System.out::println); //null System.out.println(object.getString(\"null\")); //从字符串解析JSON对象 JSONObject obj = JSON.parseObject(\"{\\\"runoob\\\":\\\"菜鸟教程\\\"}\"); //从字符串解析JSON数组 JSONArray arr = JSON.parseArray(\"[\\\"菜鸟教程\\\",\\\"RUNOOB\\\"]\\n\"); ","date":"2022-04-04","objectID":"/cheatsheet/java/:9:3","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Yaml public class Order { private String orderNo; private LocalDate date; private String customerName; private List\u003cOrderLine\u003e orderLines; // Constructors, Getters, Setters and toString } public class OrderLine { private String item; private int quantity; private BigDecimal unitPrice; // Constructors, Getters, Setters and toString } //install package jackson-dataformat-yaml mapper = new ObjectMapper(new YAMLFactory()); mapper.findAndRegisterModules(); //handle date property?? Order order = mapper.readValue(new File(\"src/main/resources/orderInput.yaml\"), Order.class); ","date":"2022-04-04","objectID":"/cheatsheet/java/:9:4","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Web/API call Fetch http public class ParameterStringBuilder { public static String getParamsString(Map\u003cString, String\u003e params) throws UnsupportedEncodingException{ StringBuilder result = new StringBuilder(); for (Map.Entry\u003cString, String\u003e entry : params.entrySet()) { result.append(URLEncoder.encode(entry.getKey(), \"UTF-8\")); result.append(\"=\"); result.append(URLEncoder.encode(entry.getValue(), \"UTF-8\")); result.append(\"\u0026\"); } String resultString = result.toString(); return resultString.length() \u003e 0 ? resultString.substring(0, resultString.length() - 1) : resultString; } } URL url = new URL(\"http://example.com\"); HttpURLConnection con = (HttpURLConnection) url.openConnection(); con.setRequestMethod(\"GET\"); Map\u003cString, String\u003e parameters = new HashMap\u003c\u003e(); parameters.put(\"param1\", \"val\"); con.setDoOutput(true); DataOutputStream out = new DataOutputStream(con.getOutputStream()); out.writeBytes(ParameterStringBuilder.getParamsString(parameters)); out.flush(); out.close(); //set con.setRequestProperty(\"Content-Type\", \"application/json\") //read String contentType = con.getHeaderField(\"Content-Type\"); String cookiesHeader = con.getHeaderField(\"Set-Cookie\"); List\u003cHttpCookie\u003e cookies = HttpCookie.parse(cookiesHeader); Optional\u003cHttpCookie\u003e usernameCookie = cookies.stream() .findAny().filter(cookie -\u003e cookie.getName().equals(\"username\")); if (usernameCookie == null) { cookieManager.getCookieStore().add(null, new HttpCookie(\"username\", \"john\")); } con.disconnect(); con = (HttpURLConnection) url.openConnection(); con.setRequestProperty(\"Cookie\", StringUtils.join(cookieManager.getCookieStore().getCookies(), \";\")); //redirect con.setInstanceFollowRedirects(false); HttpUrlConnection.setFollowRedirects(false); //read int status = con.getResponseCode(); BufferedReader in = new BufferedReader( new InputStreamReader(con.getInputStream())); String inputLine; StringBuffer content = new StringBuffer(); while ((inputLine = in.readLine()) != null) { content.append(inputLine); } in.close(); int status = con.getResponseCode(); Reader streamReader = null; if (status \u003e 299) { streamReader = new InputStreamReader(con.getErrorStream()); } else { streamReader = new InputStreamReader(con.getInputStream()); } Call api Apache HTTP Components HttpClient httpclient = HttpClients.createDefault(); HttpPost httppost = new HttpPost(\"http://www.a-domain.com/foo/\"); // Request parameters and other properties. List\u003cNameValuePair\u003e params = new ArrayList\u003cNameValuePair\u003e(2); params.add(new BasicNameValuePair(\"param-1\", \"12345\")); params.add(new BasicNameValuePair(\"param-2\", \"Hello!\")); httppost.setEntity(new UrlEncodedFormEntity(params, \"UTF-8\")); //Execute and get the response. HttpResponse response = httpclient.execute(httppost); HttpEntity entity = response.getEntity(); if (entity != null) { try (InputStream instream = entity.getContent()) { // do something useful } } ","date":"2022-04-04","objectID":"/cheatsheet/java/:9:5","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Advance structure / Popular structure // Map HashMap\u003cString, Integer\u003e people = new HashMap\u003cString, Integer\u003e(); people.put(\"John\", 32); people.put(\"Steve\", 30); people.put(\"Angie\", 33); //immutable Map\u003cString, String\u003e map = Map.of(\"key1\",\"value1\", \"key2\", \"value2\"); // Set HashSet\u003cString\u003e cars = new HashSet\u003cString\u003e(); //immutable Set\u003cString\u003e strSet = Set.of(\"Apple\", \"Ball\", \"Cat\", \"Dog\"); // ArrayList ArrayList\u003cString\u003e cars = new ArrayList\u003cString\u003e(); ","date":"2022-04-04","objectID":"/cheatsheet/java/:10:0","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Threading //there are 3 ways to create a thread //extends a thread class NewThread t = new NewThread(); t.start(); //create a runnable Thread t = new Thread(new MyRunnable()); t.start(); //create a task Callable\u003cString\u003e callableTask = () -\u003e { TimeUnit.MILLISECONDS.sleep(300); return \"Task's execution\"; }; ExecutorService executor = Executors.newFixedThreadPool(10); Future\u003cString\u003e result = executor.submit(() -\u003e { new Task(); }); result.get(); //a lock, please aware of lock ownership. Reentrantlock lock = new Reentrantlock(); lock.lock(); lock.tryLock(); lock.unlock(); Semaphore seml new Semaphore(1); static syncrhonized void myMethod(){} //lock on class level syncrhonized void myMethod(){} //lock on object level ","date":"2022-04-04","objectID":"/cheatsheet/java/:11:0","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Stream and reactive programming //create stream private static List\u003cEmployee\u003e empList = Arrays.asList(arrayOfEmps); empList.stream(); Stream.of(arrayOfEmps[0], arrayOfEmps[1], arrayOfEmps[2]); Stream.Builder\u003cEmployee\u003e empStreamBuilder = Stream.builder(); empStreamBuilder.accept(arrayOfEmps[0]); empStreamBuilder.accept(arrayOfEmps[1]); empStreamBuilder.accept(arrayOfEmps[2]); Stream\u003cEmployee\u003e empStream = empStreamBuilder.build(); //for-each empList.stream().forEach(e -\u003e e.salaryIncrement(10.0)); //map and reduce Double sumSal = empList.stream() .map(Employee::getSalary) .reduce(0.0, Double::sum); //filter mployees = Stream.of(empIds).map(employeeRepository::findById).filter(e -\u003e e != null) //flatMap List\u003cString\u003e namesFlatStream = namesNested.stream().flatMap(Collection::stream) .collect(Collectors.toList()); //others: sorted, findFirst, orElse, min, max, distinct, allMatch, anyMatch, noneMatch, takeWhile, dropWhile //collect function //toList List\u003cEmployee\u003e employees = empList.stream().collect(Collectors.toList()); //toArray Employee[] employees = empList.stream().toArray(Employee[]::new); //others: joining, toSet, toCollection, summarizingDouble, groupingBy, partitioningBy, reducing, //parallel stream. Default pool is ForkJoinPool.commonPool(), you can assign a pool for it. ForkJoinPool customThreadPool = new ForkJoinPool(4); long actualTotal = customThreadPool.submit( () -\u003e aList.parallelStream().reduce(0L, Long::sum)).get(); ","date":"2022-04-04","objectID":"/cheatsheet/java/:12:0","tags":null,"title":"Java","uri":"/cheatsheet/java/"},{"categories":null,"content":"Javascript ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:1:0","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Basic structure ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:2:0","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Simple declaration var x = 5; const PI = 3.141592653589793; let x = 2; ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:2:1","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Declare array var cars = [] var cars = [\"Saab\", \"Volvo\", \"BMW\"]; var arr_length = cars.length; ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:2:2","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Declare structure class Car { constructor(name, year) { this.name = name; this.year = year; } } let myCar1 = new Car(\"Ford\", 2014); ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:2:3","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Enum No such thing ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:2:4","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Control structure const component = require('component') //runtime import component2 from \"component2\"; //compile time ES6 try { var cars = [\"Volvo\", \"BMW\", \"Ford\", \"Mazda\", null]; for(var i=0; i\u003ccars.length; ++i){ let car = cars[i]; if(car === null) console.log(\"Hello Hell!\"); else console.log(\"Hello \" + car + \"!\"); } } catch(err) { //document.getElementById(\"demo\").innerHTML = err.message; console.error(err.message); } ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:3:0","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"String ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:4:0","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Basic operation var greeting = \"Hello\"; var len = txt.Length var upper = greeting.toUpperCase() var trim = banner.trim(); var isOK = test.startsWith(\"\u003c\") var pos = \"test: enabled\".indexOf(\": \"); var substr1 = \"Hello world!\".substr(1, 4); //'ello' var substr2 = \"Hello world!\".substring(1, 4); // 'ell' var masked = last4Digits.padStart(fullNumber.length, '*'); var intVal = \"1\".valueOf(); ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:4:1","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Replace var x =\"Visit Microsoft!\".replace(\"Microsoft\", \"W3Schools\"); ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:4:2","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Concat and compare var name = firstName.concat(lastName); var x = \"2\" \u003e \"12\"; //true var y = 2 \u003c \"12\" //true ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:4:3","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Array ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:5:0","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Basic operation, access of element var cars = [\"Saab\", \"Volvo\", \"BMW\"]; document.getElementById(\"demo\").innerHTML = cars[0]; cars.push(\"Tesla\") cars.concat([\"Xiapeng, Biadi\"]]) var text = \"hi: \" var numbers = [45, 4, 9, 16, 25]; numbers.forEach(value =\u003e {return txt = txt+ value + \"\u003cbr/\u003e\";} ); var numberSq = numbers.map(value =\u003e {return value * 2;} ); var filtered = numbers.filter((value, index, array) =\u003e {return value \u003e 18;} ); var a = fruits.indexOf(\"Apple\"); ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:5:1","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Traverse, sort var fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"]; fruits.sort(); // Sorts the elements of fruits ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:5:2","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Date ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:6:0","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"New date var d = new Date(); var d = new Date(2018, 11, 24, 10); d.setHours(0, 0, 0, 0); //to get only date ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:6:1","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Add days var date = new Date(); console.log(date.addDays(5)); ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:6:2","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Compare date, diff date if (date1\u003edate2) return (\"Date1 \u003e Date2\"); else if (date1\u003cdate2) return (\"Date2 \u003e Date1\"); else return (\"Date1 = Date2\"); ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:6:3","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Format date d.toString(); //Wed Mar 25 2015 08:00:00 GMT+0800 (台北標準時間) d.toDateString(); //Sat Dec 05 2020 d.toISOString(); //\"2015-03-25\" var dateFormat = require('dateformat'); var now = new Date(); dateFormat(now, \"dddd, mmmm dS, yyyy, h:MM:ss TT\"); ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:6:4","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"File ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:7:0","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Console read write console.log(\"Hello World!\"); ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:7:1","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Read write line with UTF-8 \u003c!-- The `multiple` attribute lets users select multiple files. --\u003e \u003cinput type=\"file\" id=\"file-selector\" multiple\u003e \u003cscript\u003e const fileSelector = document.getElementById('file-selector'); fileSelector.addEventListener('change', (event) =\u003e { const fileList = event.target.files; console.log(fileList); }); \u003c/script\u003e //File reader const reader = new FileReader(); reader.addEventListener('load', (event) =\u003e { img.src = event.target.result; }); reader.readAsDataURL(file); //fetch api fetch('file.txt') .then(response =\u003e response.text()) .then(text =\u003e console.log(text)) ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:7:2","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Database - MySQL ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:8:0","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Connection string list Install package instead of a common interface. ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:8:1","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Open connection var mysql = require('mysql'); var con = mysql.createConnection({ host: \"localhost\", user: \"yourusername\", password: \"yourpassword\" }); con.connect(function(err) { if (err) throw err; console.log(\"Connected!\"); }); ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:8:2","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Execute update/insert con.connect(function(err) { if (err) throw err; console.log(\"Connected!\"); var sql = \"INSERT INTO customers (name, address) VALUES ('Company Inc', 'Highway 37')\"; con.query(sql, function (err, result) { if (err) throw err; console.log(\"1 record inserted\"); }); }); ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:8:3","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Execute select con.connect(function(err) { if (err) throw err; con.query(\"SELECT * FROM customers\", function (err, result, fields) { if (err) throw err; console.log(result); }); }); /* [ { id: 1, name: 'John', address: 'Highway 71'}, { id: 2, name: 'Peter', address: 'Lowstreet 4'}, { id: 3, name: 'Amy', address: 'Apple st 652'}, ... ] */ ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:8:4","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Traverse the dataset Traverse as json object ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:8:5","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Popular format ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:9:0","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"CSV Use a library call Papa parser https://www.papaparse.com/ Read var data = Papa.parse(csv); //csv as string // Parse local CSV file Papa.parse(file, { complete: function(results) { console.log(\"Finished:\", results.data); } }); Write var csv = Papa.unparse(data); ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:9:1","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"DOM / XML Read / Write text = \"\u003cbookstore\u003e\u003cbook\u003e\" + \"\u003ctitle\u003eEveryday Italian\u003c/title\u003e\" + \"\u003cauthor\u003eGiada De Laurentiis\u003c/author\u003e\" + \"\u003cyear\u003e2005\u003c/year\u003e\" + \"\u003c/book\u003e\u003c/bookstore\u003e\"; parser = new DOMParser(); xmlDoc = parser.parseFromString(text,\"text/xml\"); var a = xmlDoc.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue; Write Skip for the time being Traverse const names = xml.getElementsByTagName(\"name\"); for (var i = 0; i \u003c names.length; i++) { var name = names[i].firstChild.nodeValue; var div = document.createElement(\"div\"); var textNode = document.createTextNode(name); div.appendChild(textNode); document.getElementById(\"wrapper\").appendChild(div); } Select element //XPath var nodes = xml.evaluate(\"/bookstore/book[price\u003e35]/title\", xml, null, XPathResult.ANY_TYPE, null); var result = nodes.iterateNext(); while (result) { txt += result.childNodes[0].nodeValue + \"\u003cbr\u003e\"; result = nodes.iterateNext(); } ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:9:2","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"JSON Read / Write var obj = JSON.parse('{ \"name\":\"John\", \"age\":30, \"city\":\"New York\"}'); Write var obj = { name: \"John\", age: 30, city: \"New York\" }; var myJSON = JSON.stringify(obj); ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:9:3","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Yaml //install package js-yaml const yaml = require('js-yaml'); const fs = require('fs'); try { const doc = yaml.load(fs.readFileSync('/home/ixti/example.yml', 'utf8')); console.log(doc); } catch (e) { console.log(e); } //write dump(object, { 'styles': { '!!null': 'canonical' // dump null as ~ }, 'sortKeys': true // sort object keys }); ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:9:4","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Web/API call Axios: https://github.com/axios/axios Fetch http //no cookie //further info:https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch fetch('http://example.com/movies.json') .then(response =\u003e response.json()) .then(data =\u003e console.log(data)); Call api //https://github.com/axios/axios const axios = require('axios'); // Make a request for a user with a given ID axios.get('/user?ID=12345') .then(function (response) { // handle success console.log(response); }) .catch(function (error) { // handle error console.log(error); }) .then(function () { // always executed }); ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:9:5","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"Advance structure / Popular structure //map var mapObj = {\"one\":1,\"two\":2,\"three\":3} //record var record = {firstName:\"Tom\",lastName:\"Smith\"} //json table var persons = {}; persons[\"2901465\"] = {id: 2901465, name:\"Tom\"}; persons[\"3305579\"] = {id: 3305579, name:\"Su\"}; persons[\"6492003\"] = {id: 6492003, name:\"Pete\"}; try { localStorage[\"personTable\"] = JSON.stringify( persons); } catch (e) { alert(\"Error when writing to Local Storage\\n\" + e); } ","date":"2022-04-04","objectID":"/cheatsheet/javascript/:10:0","tags":null,"title":"Javascript","uri":"/cheatsheet/javascript/"},{"categories":null,"content":"K8s ","date":"2022-04-04","objectID":"/cheatsheet/k8s/:1:0","tags":null,"title":"K8S","uri":"/cheatsheet/k8s/"},{"categories":null,"content":"Basic admin See k8s dashboard kubectl proxy ssh -L 8001:localhost:8001 ubuntu@192.168.100.21 Find the token for login k8s console kubectl -n kubernetes-dashboard get secret $(kubectl -n kubernetes-dashboard get sa/admin-user -o jsonpath=\"{.secrets[0].name}\") -o go-template=\"{{.data.token | base64decode}}\" Remove all dead port kubectl get pods --no-headers=true | awk '/replicator/{print $1}'| xargs kubectl delete pod ","date":"2022-04-04","objectID":"/cheatsheet/k8s/:2:0","tags":null,"title":"K8S","uri":"/cheatsheet/k8s/"},{"categories":null,"content":"Cert manager Cert manager automatically renew. https://cert-manager.io/docs/usage/certificate/ ","date":"2022-04-04","objectID":"/cheatsheet/k8s/:3:0","tags":null,"title":"K8S","uri":"/cheatsheet/k8s/"},{"categories":null,"content":"Ingress For exporting stuff ","date":"2022-04-04","objectID":"/cheatsheet/k8s/:3:1","tags":null,"title":"K8S","uri":"/cheatsheet/k8s/"},{"categories":null,"content":"Cheatsheet https://kubernetes.io/docs/reference/kubectl/cheatsheet/ ","date":"2022-04-04","objectID":"/cheatsheet/k8s/:3:2","tags":null,"title":"K8S","uri":"/cheatsheet/k8s/"},{"categories":null,"content":"Create a new worker node #Tested on ubuntu 22.04 LTS #install the following curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add echo \"deb https://apt.kubernetes.io/ kubernetes-xenial main\" \u003e\u003e ~/kubernetes.list sudo mv ~/kubernetes.list /etc/apt/sources.list.d sudo apt update sudo apt install kubelet=1.22.8-00 sudo apt install kubeadm=1.22.8-00 sudo apt install kubectl=1.22.8-00 # install docker curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/ docker-archive-keyring.gpg echo \\ \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list \u003e /dev/null sudo apt-get install docker-ce docker-ce-cli containerd.io # enable cri for containerd nano /etc/containerd/config.toml sudo swapoff -a sudo nano /etc/fstab sudo hostnamectl set-hostname kubernetes-master # remove all useless iptables rules iptables -F \u0026\u0026 iptables -t nat -F \u0026\u0026 iptables -t mangle -F \u0026\u0026 iptables -X lsmod | grep br_netfilter sudo modprobe br_netfilter sudo sysctl net.bridge.bridge-nf-call-iptables=1 # if error popout telling [ERROR FileContent--proc-sys-net-ipv4-ip_forward]: /proc/sys/net/ipv4/ip_forward contents are not set to 1, run this echo 1 \u003e /proc/sys/net/ipv4/ip_forward kubeadm token create --print-join-command # if kube-flannel and kube-proxy crash, should have some problem with cidr kubectl patch node k8s-node02 -p '{\"spec\":{\"podCIDR\":\"10.244.4.0/24\"}}' # don't know your podcidr? kubectl cluster-info dump ","date":"2022-04-04","objectID":"/cheatsheet/k8s/:3:3","tags":null,"title":"K8S","uri":"/cheatsheet/k8s/"},{"categories":null,"content":"Running helm chart All the chart are to be downloaded first and modify before deploy. # download the chart helm pull bitnami/mysql --untar=true # add myvalue.yml for customerization # generate the yaml helm install my-release ./xxxxxx --values=./xxx/myvalue.yaml # generate the yaml helm template monitoring ./xxxxxx --values=./xxx/myvalue.yaml \u003e ./xxx/stack.yaml # install the yaml k8s apply -f ./xxx/stack.yaml ","date":"2022-04-04","objectID":"/cheatsheet/k8s/:4:0","tags":null,"title":"K8S","uri":"/cheatsheet/k8s/"},{"categories":null,"content":"Create a service account kubectl create role spark-submitter --verb=get --verb=list --verb=create --verb=delete --resource=sparkapplications.sparkoperator.k8s.io --namespace=spark-operator kubectl create sa spark-submitter-sa -n spark-operator kubectl create rolebinding spark-submitter-binding --role=spark-submitter --serviceaccount=spark-operator:spark-submitter-sa -n spark-operator # can across different namespaces kubectl create rolebinding spark-submitter-binding2 --role=spark-submitter --serviceaccount=system-design:spark-submitter-sa -n spark-operator ","date":"2022-04-04","objectID":"/cheatsheet/k8s/:5:0","tags":null,"title":"K8S","uri":"/cheatsheet/k8s/"},{"categories":null,"content":"Calling from pod token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token) curl -v --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt -H \"Authorization: Bearer $token\" https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_PORT_443_TCP_PORT/apis/sparkoperator.k8s.io/v1beta2/namespaces/spark-operator/sparkapplications/spark-pi curl -v --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt -H \"Authorization: Bearer $token\" https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_PORT_443_TCP_PORT/apis/sparkoperator.k8s.io/v1beta2/namespaces/spark-operator/sparkapplications?limit=500 ","date":"2022-04-04","objectID":"/cheatsheet/k8s/:6:0","tags":null,"title":"K8S","uri":"/cheatsheet/k8s/"},{"categories":null,"content":"Python ","date":"2022-04-04","objectID":"/cheatsheet/python/:1:0","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Basic structure ","date":"2022-04-04","objectID":"/cheatsheet/python/:2:0","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Simple declaration x = 5 y = \"John\" p1 = MyClass() print(p1.x) ","date":"2022-04-04","objectID":"/cheatsheet/python/:2:1","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Declare array cars = [\"Ford\", \"Volvo\", \"BMW\"] x = len(cars) ","date":"2022-04-04","objectID":"/cheatsheet/python/:2:2","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Declare structure class Person: def __init__(self, name, age): self.name = name self.age = age def myfunc(self): print(\"Hello my name is \" + self.name) ","date":"2022-04-04","objectID":"/cheatsheet/python/:2:3","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Lambda x = lambda a, b : a * b ","date":"2022-04-04","objectID":"/cheatsheet/python/:2:4","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Enum from enum import Enum class Color(Enum): RED = 1 GREEN = 2 BLUE = 3 ","date":"2022-04-04","objectID":"/cheatsheet/python/:2:5","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Control structure A code segment which show the following * Loop * If check null * Try catch * Import Library * Define a function * Declare a class from sample_module import sample_func import traceback def main(): try: cars = [\"Volvo\", \"BMW\", \"Ford\", \"Mazda\", None] for i in range(len(cars)): car = cars[i] if car is None: print(\"Hello Hell!\") else print(\"Hello \" + car + \"!\") except NameError: print(\"Variable x is not defined\") except Exception as e: print(\"Something else went wrong\", e.__class__) traceback.print_exception(*sys.exc_info()) if __name__ == '__main__': print 'Number of arguments:', len(sys.argv), 'arguments.' print 'Argument List:', str(sys.argv) main() # 或是任何你想執行的函式 ","date":"2022-04-04","objectID":"/cheatsheet/python/:3:0","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"String ","date":"2022-04-04","objectID":"/cheatsheet/python/:4:0","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Basic operation a = \"\"\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"\"\" print(a[1]) print(a[2:5]) if \"free\" in txt: print(\"Yes, 'free' is present.\") a.upper() a.strip() # escape character is \\ ","date":"2022-04-04","objectID":"/cheatsheet/python/:4:1","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Replace a = \"Hello, World!\" a.replace(\"H\", \"J\") a.split(\",\") ","date":"2022-04-04","objectID":"/cheatsheet/python/:4:2","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Concat and compare = \"Hello\" b = \"World\" c = a + b ","date":"2022-04-04","objectID":"/cheatsheet/python/:4:3","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Regular expression import re txt = \"The rain in Spain\" x = re.search(\"\\s\", txt) print(\"The first white-space character is located in position:\", x.start()) //None if not found ","date":"2022-04-04","objectID":"/cheatsheet/python/:4:4","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Array ","date":"2022-04-04","objectID":"/cheatsheet/python/:5:0","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Basic operation, access of element thislist = [\"apple\", \"banana\", \"cherry\"] tropical = [\"mango\", \"pineapple\", \"papaya\"] print(len(thislist)) print(thislist[2:5]) thislist[1:3] = [\"watermelon\"] thislist.append(\"orange\") thislist.insert(1, \"orange\") thislist.remove(\"banana\") thislist.pop() thislist.clear() thislist.extend(tropical) ","date":"2022-04-04","objectID":"/cheatsheet/python/:5:1","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Traverse, sort thislist = [\"apple\", \"banana\", \"cherry\"] for x in thislist: print(x) newlist = [x for x in fruits if \"a\" in x] thislist.sort() ","date":"2022-04-04","objectID":"/cheatsheet/python/:5:2","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Date ","date":"2022-04-04","objectID":"/cheatsheet/python/:6:0","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"New date import datetime x = datetime.datetime.now() x = datetime.datetime(2020, 5, 17) print(x) print(x.date()) #only return date part ","date":"2022-04-04","objectID":"/cheatsheet/python/:6:1","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Add days end_date = date_1 + datetime.timedelta(days=10) import pandas as pd startdate = \"10/10/2011\" enddate = pd.to_datetime(startdate) + pd.DateOffset(days=5) ","date":"2022-04-04","objectID":"/cheatsheet/python/:6:2","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Compare date, diff date # date in yyyy/mm/dd format d1 = datetime.datetime(2018, 5, 3) d2 = datetime.datetime(2018, 6, 1) print(\"d1 is less than d2 : \", d1 \u003c d2) ","date":"2022-04-04","objectID":"/cheatsheet/python/:6:3","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Format date print(x.strftime(\"%B\")) print(x.strftime(\"%b %d %Y %H:%M:%S\")) # %b is month in text %m is number %H datetime.datetime.strptime('Mon Feb 15 2010', '%a %b %d %Y').strftime('%d/%m/%Y') ","date":"2022-04-04","objectID":"/cheatsheet/python/:6:4","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"File ","date":"2022-04-04","objectID":"/cheatsheet/python/:7:0","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Console read write # input input1 = input() # output print(input1) ","date":"2022-04-04","objectID":"/cheatsheet/python/:7:1","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Read write line with UTF-8 # a = append and w = write f = open(\"demofile.txt\", \"r\", encoding='UTF-8') # read print(f.readline()) content = f.read() # write f.write(\"Woops! I have deleted the content!\") f.close() ","date":"2022-04-04","objectID":"/cheatsheet/python/:7:2","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"File system operation import os if os.path.exists(\"demofile.txt\"): os.remove(\"demofile.txt\") else: print(\"The file does not exist\") os.rmdir(\"myfolder\") fileAndDir = listdir(mypath) ","date":"2022-04-04","objectID":"/cheatsheet/python/:7:3","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Database ","date":"2022-04-04","objectID":"/cheatsheet/python/:8:0","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Connection string list ","date":"2022-04-04","objectID":"/cheatsheet/python/:8:1","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Open connection import mysql.connector mydb = mysql.connector.connect( host=\"localhost\", user=\"yourusername\", password=\"yourpassword\" ) mycursor = mydb.cursor() ","date":"2022-04-04","objectID":"/cheatsheet/python/:8:2","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Execute update/insert mycursor = mydb.cursor() sql = \"INSERT INTO customers (name, address) VALUES (%s, %s)\" val = (\"John\", \"Highway 21\") mycursor.execute(sql, val) mydb.commit() print(mycursor.rowcount, \"record inserted.\") ","date":"2022-04-04","objectID":"/cheatsheet/python/:8:3","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Execute select mycursor = mydb.cursor() mycursor.execute(\"SELECT * FROM customers\") myresult = mycursor.fetchall() ","date":"2022-04-04","objectID":"/cheatsheet/python/:8:4","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Traverse the dataset for x in myresult: print(x) ","date":"2022-04-04","objectID":"/cheatsheet/python/:8:5","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Popular format ","date":"2022-04-04","objectID":"/cheatsheet/python/:9:0","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"CSV Read import csv # 開啟 CSV 檔案 with open('iris.csv', newline='') as csvfile: # 讀取 CSV 檔案內容 rows = csv.reader(csvfile) # 以迴圈輸出每一列 for row in rows: print(row) Write import csv # 開啟輸出的 CSV 檔案 with open('output.csv', 'w', newline='') as csvfile: # 建立 CSV 檔寫入器 writer = csv.writer(csvfile) # 寫入一列資料 writer.writerow(['姓名', '身高', '體重']) # 寫入另外幾列資料 writer.writerow(['令狐沖', 175, 60]) writer.writerow(['岳靈珊', 165, 57]) with open('output.csv', 'w', newline='') as csvfile: # 定義欄位 fieldnames = ['姓名', '身高', '體重'] # 將 dictionary 寫入 CSV 檔 writer = csv.DictWriter(csvfile, fieldnames=fieldnames) # 寫入第一列的欄位名稱 writer.writeheader() # 寫入資料 writer.writerow({'姓名': '令狐沖', '身高': 175, '體重': 60}) writer.writerow({'姓名': '岳靈珊', '身高': 165, '體重': 57}) ","date":"2022-04-04","objectID":"/cheatsheet/python/:9:1","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"DOM / XML \u003ccollection shelf=\"New Arrivals\"\u003e \u003cmovie title=\"Enemy Behind\"\u003e \u003ctype\u003eWar, Thriller\u003c/type\u003e \u003cformat\u003eDVD\u003c/format\u003e \u003cyear\u003e2003\u003c/year\u003e \u003crating\u003ePG\u003c/rating\u003e \u003cstars\u003e10\u003c/stars\u003e \u003cdescription\u003eTalk about a US-Japan war\u003c/description\u003e \u003c/movie\u003e ... \u003c/collection\u003e Read from xml.dom.minidom import parse import xml.dom.minidom # 使用minidom解析器打开 XML 文档 DOMTree = xml.dom.minidom.parse(\"movies.xml\") collection = DOMTree.documentElement if collection.hasAttribute(\"shelf\"): print \"Root element : %s\" % collection.getAttribute(\"shelf\") Select element # 在集合中获取所有电影 movies = collection.getElementsByTagName(\"movie\") Traverse # 打印每部电影的详细信息 for movie in movies: print \"*****Movie*****\" if movie.hasAttribute(\"title\"): print \"Title: %s\" % movie.getAttribute(\"title\") type = movie.getElementsByTagName('type')[0] print \"Type: %s\" % type.childNodes[0].data format = movie.getElementsByTagName('format')[0] print \"Format: %s\" % format.childNodes[0].data rating = movie.getElementsByTagName('rating')[0] print \"Rating: %s\" % rating.childNodes[0].data description = movie.getElementsByTagName('description')[0] print \"Description: %s\" % description.childNodes[0].data Write import xml.etree.ElementTree as ET # create the file structure data = ET.Element('data') items = ET.SubElement(data, 'items') item1 = ET.SubElement(items, 'item') item2 = ET.SubElement(items, 'item') item1.set('name','item1') item2.set('name','item2') item1.text = 'item1abc' item2.text = 'item2abc' # create a new XML file with the results mydata = ET.tostring(data) myfile = open(\"items2.xml\", \"w\") myfile.write(mydata) ","date":"2022-04-04","objectID":"/cheatsheet/python/:9:2","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"JSON Read / Write import json data = [ { 'a' : 1, 'b' : 2, 'c' : 3, 'd' : 4, 'e' : 5 } ] data2 = json.dumps(data) # beware of dump(), which write to file. jsonData = '{\"a\":1,\"b\":2,\"c\":3,\"d\":4,\"e\":5}' text = json.loads(jsonData) print(text) # {u'a': 1, u'c': 3, u'b': 2, u'e': 5, u'd': 4} me = Object() me.name = \"Onur\" me.age = 35 me.dog = Object() me.dog.name = \"Apollo\" print(me.toJSON()) # output #{ # \"age\": 35, # \"dog\": { # \"name\": \"Apollo\" # }, # \"name\": \"Onur\" #} ","date":"2022-04-04","objectID":"/cheatsheet/python/:9:3","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Yaml # install pyyaml from yaml import load, dump try: from yaml import CLoader as Loader, CDumper as Dumper except ImportError: from yaml import Loader, Dumper secret_path = os.path.join(os.path.dirname(os.path.realpath(__file__)), \"..\", \"test.yaml\") stream = open(secret_path, \"r\") data = yaml.safe_load(stream) data = load(stream, Loader=Loader) output = dump(data, Dumper=Dumper) ","date":"2022-04-04","objectID":"/cheatsheet/python/:9:4","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Web/API call Fetch http import urllib.request with urllib.request.urlopen('http://www.example.com/') as f: html = f.read().decode('utf-8') Call api pip install requests import requests r = requests.get(\"https://opendata.epa.gov.tw/ws/Data/AQI/?$format=json\", verify=False) list_of_dicts = r.json() print(type(r)) print(type(list_of_dicts)) for i in list_of_dicts: print(i[\"County\"], i[\"SiteName\"], i[\"PM2.5\"]) # defining the api-endpoint API_ENDPOINT = \"http://pastebin.com/api/api_post.php\" # your API key here API_KEY = \"XXXXXXXXXXXXXXXXX\" # your source code here source_code = '' data = {'api_dev_key':API_KEY, 'api_option':'paste', 'api_paste_code':source_code, 'api_paste_format':'python'} # sending post request and saving response as response object r = requests.post(url = API_ENDPOINT, data = data) pastebin_url = r.text print(\"The pastebin URL is:%s\"%pastebin_url) ","date":"2022-04-04","objectID":"/cheatsheet/python/:9:5","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Advance structure / Popular structure # tuple mytuple = (\"apple\", \"banana\", \"cherry\") # set myset = {\"apple\", \"banana\", \"cherry\"} # dictionary thisdict = { \"brand\": \"Ford\", \"model\": \"Mustang\", \"year\": 1964 } if \"year\" in thisdict.keys(): pass ","date":"2022-04-04","objectID":"/cheatsheet/python/:10:0","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Numpy import numpy as np arr = np.array([1, 2, 3, 4, 5]) np.concatenate((arr1, arr2)) np.sort(arr) x = np.where(arr == 4) # return (array([3])) x = [True, False, True, False, False] newarr = arr[x] # return [1, 3] ","date":"2022-04-04","objectID":"/cheatsheet/python/:10:1","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Pandas import pandas as pd # 引用套件並縮寫為 pd df = pd.read_csv('shop_list.csv') print(df) cars = [\"BMW\", \"BENZ\", \"Toyota\", \"Nissan\", \"Lexus\"] select = pd.Series(cars) groups = [\"Movies\", \"Sports\", \"Coding\", \"Fishing\", \"Dancing\", \"cooking\"] num = [46, 8, 12, 12, 6, 58] dict = {\"groups\": groups, \"num\": num } select_df = pd.DataFrame(dict) out_df = select_df[select_df.loc[:,\"num\"] \u003e 10] # 選出人數超過 10 的群組 # iterate and update value for index, row in data_loc.iterrows(): data_loc.set_value(index,'real_distict',findDistrict(Point(row['lng'], row['lat']))) # Set index dataframe.set_index('Date', inplace=True) # Pandas date operation #generate date range #date diff date_df['diff_days'] = date_df['Date'].diff().dt.days # ","date":"2022-04-04","objectID":"/cheatsheet/python/:10:2","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Reproduce SQL function Opertion SQL example How to do in pandas select select * from airports airports select select * from airports limit 3 airports.head(3) select select id from airports where ident=‘KLAX’ airports[airports.ident=‘KLAX’].id select select distinct type from airport airports.type.unique() where select * from airports where iso_region=‘US-CA’ and type=‘seaplane_base’ airports[(airports.iso_region==‘US-CA) \u0026 airports.type == ‘seaplane_base’] where select ident, name, municipality from airports where iso_region=‘US-CA’ and type=‘seaplane_base’ airports[(airports.iso_region==‘US-CA) \u0026 airports.type == ‘seaplane_base’)][[‘ident’, ’name’, ‘municipality’] order by select * from airport_freq where airport_ident=‘KLAX’ order by type airport_freq[airport_freq.airport_ident == ‘KLAX’].sort_values(’type’) order by select * from airport_freq where airport_ident = ‘KLAX’ order by type desc airport_freq[airport_freq.airport_ident == ‘KLAX’].sort_values(’type’, ascending=False) in select * from airports where type in (‘heliport’, ‘balloonport’) airports[airports.type.isin([‘heliport’, ‘balloonport’])] not in select * from airports where type not in (‘heliport’, ‘balloonport’) airports[~airports.type.isin([‘heliport’, ‘balloonport’])] group+count select iso_country, type, count(*) from airports group by iso_country, type order by iso_country, type airports.groupby([‘iso_country’, ’type’]).size() group+count+order select iso_country, type, count(*) from airports group by iso_country, type order by iso_country, count(*) desc airports.groupby([‘iso_country’, ’type’]).size().to_frame(‘size’).reset_index().sort_values([‘iso_country’, ‘size’], ascending=[True, False]) having select type, count(*) from airports where iso_country = ‘US’ group by type having count(*) \u003e 1000 order by count(*) desc irports[airports.iso_country == ‘US’].groupby(’type’).filter(lambda g: len(g) \u003e 1000).groupby(’type’).size().sort_values(ascending=False) topN select iso_country from by_country order by size desc limit 10 by_country.nlargest(10, columns=‘airport_count’) topN+offset select iso_country from by_country order by size desc limit 10 offset 10 by_country.nlargest(20, columns=‘airport_count’).tail(10) aggregate select max(length_ft), min(length_ft), avg(length_ft), median(length_ft) from runways runways.agg({’length_ft’: [‘min’, ‘max’, ‘mean’, ‘median’]}) join select airport_ident, type, description, frequency_mhz from airport_freq join airports on airport_freq.airport_ref = airports.id where airports.ident = ‘KLAX’ airport_freq.merge(airports[airports.ident == ‘KLAX’][[‘id’]], left_on=‘airport_ref’, right_on=‘id’, how=‘inner’)[[‘airport_ident’, ’type’, ‘description’, ‘frequency_mhz’]] union select name, municipality from airports where ident = ‘KLAX’ union all select name, municipality from airports where ident = ‘KLGB’ pd.concat([airports[airports.ident == ‘KLAX’][[’name’, ‘municipality’]], airports[airports.ident == ‘KLGB’][[’name’, ‘municipality’]]]) insert create table… insert… df1 = pd.DataFrame({‘id’: [1, 2], ’name’: [‘Harry Potter’, ‘Ron Weasley’]}) df2 = pd.DataFrame({‘id’: [3], ’name’: [‘Hermione Granger’]}) pd.concat([df1, df2]).reset_index(drop=True) update update airports set home_link = ‘http://www.lawa.org/welcomelax.aspx'where ident == ‘KLAX’ airports.loc[airports[‘ident’] == ‘KLAX’, ‘home_link’] = ‘http://www.lawa.org/welcomelax.aspx' delete delete from lax_freq where type = ‘MISC’ lax_freq = lax_freq[lax_freq.type != ‘MISC’] Summary from here Link ","date":"2022-04-04","objectID":"/cheatsheet/python/:10:3","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Flask Useful cheatsheet from Pretty Printed Cheatsheet ","date":"2022-04-04","objectID":"/cheatsheet/python/:11:0","tags":null,"title":"Python","uri":"/cheatsheet/python/"},{"categories":null,"content":"Doing AWS Solution Architect Professional is like following road signs. It is intangible, it does not make you money, it does not teach you to make website. You just need to know enough to pass the exam and I advise you to take a breath first search approach to explore. The 5 domains are just nonsense. After reading them, you may ask yourself why you waste your precious life to do this. This is the worst marketing I have ever seen. Passing AWS solution architect Professional is not that easy. The skills you need to master are: Have ideas of more than 30+ AWS services Know details on critical AWS services like EC2, S3, Route 53 and Security and VPC Read fast, reasoning fast, which can practice through mock exam At this time, you are an AWS Solution Architect Associate, but you have no idea why you pass the exam, and of course, you don’t know much about AWS cloud. How to advance to professional? ","date":"2020-06-14","objectID":"/blog/passing-aws-solution-architect-prof/:0:0","tags":["computer science","infrastructure"],"title":"Passing AWS Solution Architect Professional","uri":"/blog/passing-aws-solution-architect-prof/"},{"categories":null,"content":"1. Read the requirement The first thing you do is to read the requirement, you just read it and then print it out, pin it to the wall somewhere, just to remind you why you study. https://d1.awsstatic.com/training-and-certification/docs-sa-pro/AWS-Certified-Solutions-Architect-Professional_Exam-Guide.pdf Every day, you read a paper or a video or an AWS reinvent show, you can tie up your idea to a point in the exam guide. Domain 1: Design for Organizational Complexity 12.5% Domain 2: Design for New Solutions 31% Domain 3: Migration Planning 15% Domain 4: Cost Control 12.5% Domain 5: Continuous Improvement for Existing Solutions 29% ","date":"2020-06-14","objectID":"/blog/passing-aws-solution-architect-prof/:0:1","tags":["computer science","infrastructure"],"title":"Passing AWS Solution Architect Professional","uri":"/blog/passing-aws-solution-architect-prof/"},{"categories":null,"content":"2. Have an idea on 30+ AWS service Now you have to find someone who can help you to know as many AWS service as you can in a visual way, I think ACloudGuru https://acloud.guru/ really helps you to get a grip on these services. I have seen reviews you that even you study through the course, you DON’T know how to start a project, you DON’T know how to create a website. I don’t deny it. I think ACloudGuru does its job, to introduce you as many AWS services you need to know in the exam. The subscription service is of good value, you can access to many courses. For example, I am a developer, I don’t have much idea on networking. AWS Solution architect professional course also does not says much on networking, firewall, and AWS Direct Connect, but you can watch the AWS Advanced network certification course to get the idea. ACloudGuru also helps you to build up your VPC skill, which is very important. ","date":"2020-06-14","objectID":"/blog/passing-aws-solution-architect-prof/:0:2","tags":["computer science","infrastructure"],"title":"Passing AWS Solution Architect Professional","uri":"/blog/passing-aws-solution-architect-prof/"},{"categories":null,"content":"3. Know details on critical AWS service As an AWS solution architect associate, you know how to use it, when to use it. Now, as a solution architect professional, you have to make decision on how to use these critical AWS services efficiently. This is the part that you need to read WHITE PAPER. Read white papers when you have fragment time, read more of it, you get more ideas to sleep on. You then sit down and allocate 2-3 hours every week to consolidate your ideas. To study the exam, the best way is to do mock exams. A good mock exam can be found at Udemy. https://www.udemy.com/course/aws-solutions-architect-professional-practice-exams-amazon/learn/quiz/4473244/results?expanded=217468506#overview The objective of doing these papers is to give you ideas on the 5 domains. By now you should know what the 5 domains are. ","date":"2020-06-14","objectID":"/blog/passing-aws-solution-architect-prof/:0:3","tags":["computer science","infrastructure"],"title":"Passing AWS Solution Architect Professional","uri":"/blog/passing-aws-solution-architect-prof/"},{"categories":null,"content":"4. Practice, read fast, reasoning fast The final objective is to practice, this is not an easy exam. You need to answer questions very fast. I am an Asian I don’t complain that. This is my edge. I know how to pass the exam by sitting down, doing mock exams, and doing mock exams faster. I don’t know why the exam is designed in this way and I don’t care. This AWS free course helps your preparation. https://www.aws.training/Details/eLearning?id=34737 Now you have mock exams from ACloud Guru and Udemy too, and you know the 5 domains. You now book the exam and hope you pass ","date":"2020-06-14","objectID":"/blog/passing-aws-solution-architect-prof/:0:4","tags":["computer science","infrastructure"],"title":"Passing AWS Solution Architect Professional","uri":"/blog/passing-aws-solution-architect-prof/"},{"categories":null,"content":"5. Final words You should at the end of the studying journey, have done the following Read 20+ white paper, just grab the idea Do mock exams a couple of times, and ensure that you have 80% or above. I have done 13 times, average 2 times per mock exam Create a mind map, like this https://mm.tt/1336038621?t=VeN0xGMrVx Book the exam, and allocate some time before the exam to do a final preparation. My mock exam result Round Score 1 47% 2 78% 3 95% 4 58% 5 66% 6 60% 7 58% 8 90% 9 90% 10 90% 11 90% 12 75% 13 83% My final result is 826/1000, 750 is required to pass. ","date":"2020-06-14","objectID":"/blog/passing-aws-solution-architect-prof/:0:5","tags":["computer science","infrastructure"],"title":"Passing AWS Solution Architect Professional","uri":"/blog/passing-aws-solution-architect-prof/"},{"categories":null,"content":"I am a software engineer working in HK for 7 years, no much security background. I did work on machine code debugging to get what I want, you know when playing game and submitting homework assignment. I know OSCP for long, when Kali was still named as BackTrack. I thought that getting OSCP was hard and somehow I was worrying if I can complete the whole course. I have read BackTrack and play with Metasploit when I was studying Mphil. date back to 2010. Just 300-400 bytes of machine code allows you to exploit almost everything you can imagine. I felt so overpowered, so glad I don’t do anything silly at that time. You know, when you get a hammer, everything is just like nails. In previous year, a friend of mine passed OSCP. He recommend me to take OSCP course. He said this is totally worth it. He was not lying. OSCP seems like an expensive game to play, but the lesson learnt is so valuable. ","date":"2019-02-07","objectID":"/blog/oscp-journey/:0:0","tags":["computer science","infrastructure"],"title":"My OSCP Journey","uri":"/blog/oscp-journey/"},{"categories":null,"content":"OSCP training from Oct to Jan I start on Oct, 2018 and signed up for 30 days. The lab contains 4 network segments, and 50+ machines. 30+ machines on Public network and 3-6 machines on other networks. I have a full time job and other thing to do, so I was working at 1 machine per day. If you start now, I would suggest you to exploit a few machines first and come up with you note style. This is very important!!! or you have to redo all the machine just to find the key to get into other machine. My note is like that, you can come up with your style. P.S. I love markdown, it does its job and does it right! Github, Visual code all supporting markdown. I am using Visual code as a note taking software. # Summary # Information Gathering ## Port scanning ### TCP port 3389 (Default port for Remote desktop) ## Service SMB # Limited Shell # Privilege escalation ## Information gathering ## Administrative shell # Post Exploitation ## Shell ## Hash and Password ## Network Connection ## Network traffic ## Database ## User folder ## GUI ## System information ## Loot Reentrance of this machine I use Metasploit and metrepreter a lot, Yes, you cannot use it in exam, and also forum hints. I think it is better to have the mindset instead of focus on technical stuff. My friend said that you cannot learn much if you use them. I don’t know, I think I am kind of goal oriented, and I think if I learn a skill which I cannot use it to earn money, it is pretty a waste of time. By tying your hand without Metasploit and work on all lab machines. errr… Not for me. Of course, my mindset is how to put what I have learnt in practice and how to pass to exam, so I do redo some machines when I think doing so can help me pass the exam. My friend said that a guy who cannot pass because he always use Metasploit and forum hints. Haha, not me. (From forum, I know that some people use eternal blue for every Windows machine instead of the intended way. At my time, this issue was fixed, no more cheesing.) I do say OSCP bring you to the other side of the web, and ask you to use malicious code against others, mostly using publicly known exploit. The technique is a bit old I can say. AFAIK, you will not learn pwning WordPress in the course. Haha. Most of the time, you are working on Win XP, 7, 2008 and Linux kernel version 2.4 up to 3.x, or some softwares which are ceased to exist. As a software engineer, I know MNC and bank should already replaced these old OS. I remembered that at late 2014, when I working for a bank, I received an email from security team about Shell-shock. Impressive work done. For other small and medium companies, or companies which does not give a shit about IT should be able to present you these opportunities. (They are in way over their heads.) I think that in real world, the machine is either very easy to pwn, or impossible, because it is either being taken care of or the staff maintaining the machine is gone and gone forever. To sum up, 30 days is not for novice with full time job, there are too many thing you have to learnt to pull things off. I end up using 90 days to complete all the lab machines. Things to learnt: Writing exploit Using Metasploit Using msfvenom to generate payload Study of famous exploit technique SSH tunneling Active directory and SMB SSH using cert Learn the instinct for Linux and Windows environment to get the passwords and valuable information. Except for 6, You can learn them in HackTheBox and Vulnhub for free before OSCP, but if money is not on the line, pretty sure some people, including me, won’t take it seriously. ","date":"2019-02-07","objectID":"/blog/oscp-journey/:0:1","tags":["computer science","infrastructure"],"title":"My OSCP Journey","uri":"/blog/oscp-journey/"},{"categories":null,"content":"Exam on Feb 6 I start working the exam on 05:00. Mac book is totally worth it, because my Logitech webcam just couldn’t focus and I was ask to present my ID to examiner. I finished 4 machines around 20:00, ended up earning 80 points which I should be able to pass, and start doing the report, you know, to secure what I have got. I think that Dirb, Nmap, Nikto can give you points on an easy machine, and practice buffer overflow should allow you to secure 20+ points, and the rest, you have to use your instinct, and I can say you have little time to master new concept in this 24 hour. I am glad I do my all my lab machines and I am nosy enough to find the way up to privilege escalation The plan is that: (For those who uses Metasploit and forum hints extensively) Do full scan of all machine on the first 2 hours Switch machine every 2 hours, and got familiar to all machines. By now, you should have half your notes fill with information. Do buffer overflow at the 6th-8th hours. Go back to the rest, If 2 hours cannot make it, work on other machine. Get enough marks and start doing the report, and read the exam requirement carefully. There are unforeseen contingency when I took the exam and had to email to support a couple of time. ","date":"2019-02-07","objectID":"/blog/oscp-journey/:0:2","tags":["computer science","infrastructure"],"title":"My OSCP Journey","uri":"/blog/oscp-journey/"},{"categories":null,"content":"Passed!! I have received an email on 10 Feb (Sunday) 06:00 saying that I have passed the exam. I am so happy! They are going to ship me the certification via DHL. ","date":"2019-02-07","objectID":"/blog/oscp-journey/:0:3","tags":["computer science","infrastructure"],"title":"My OSCP Journey","uri":"/blog/oscp-journey/"},{"categories":null,"content":"Certificate Got my certificate today!! 23 Feb. ","date":"2019-02-07","objectID":"/blog/oscp-journey/:0:4","tags":["computer science","infrastructure"],"title":"My OSCP Journey","uri":"/blog/oscp-journey/"},{"categories":null,"content":"Spark is a useful Big data tool and set up a Spark cluster usually difficult. In the past, I have tried using Spark as a single node mode. But now with the technology advancement, I can use Docker and Kubernetes to test Spark cluster instead of using Oracle VirtualBox. If you want to try out Kubernetes. I recommend you to try it on GCP first. Kubernetes is already set up there and you can try out the concept first before troubleshooting incorrect setup. It also has a nice tutorial to walk you through how to create service on GCP with the help of Kubernetes Then I turn my study to a book Mastering Kubernetes – Gigi Sayfan. Reading first 2 chapter is enough for you to set up Spark cluster on Kubernetes. Why I am writing this is that some contents I found on books and web (Stackoverflow, forums) are outdated. Setting up Kubernetes on Windows VirtualBox Kubectl Minikube Downloading the latest executable is important or you end up troubleshooting incompatibility issues. Put the downloaded executable to C:\\Windows may work but I suggest to create a folder and put Kubectl and Minikube inside it, and set Window %PATH% variable to point to this folder. I am using Windows Powershell. To build a cluster, use minikube-windows-amd64.exe start. You can always delete your cluster by minikube-windows-amd64.exe disable and remove all the file inside C:\\Users\\USER.minikube PS C:\\Users\\USER\u003e minikube-windows-amd64.exe start minikube-windows-amd64 : W0914 08:39:56.582285 3148 root.go:148] Error reading config file at C:\\Users\\USER\\.minikube\\config\\config.json: open C:\\Users\\USER\\.minikube\\config\\config.json: The system cannot find the path spec ified. 位於 C:\\Users\\USER\\OneDrive\\文件\\WindowsPowerShell\\Microsoft.PowerShellISE_profile.ps1:4 字元:1 + minikube-windows-amd64 ` + ~~~~~~~~~~~~~~~~~~~~~~~~ + CategoryInfo : NotSpecified: (W0914 08:39:56….path specified.:String) [], RemoteException + FullyQualifiedErrorId : NativeCommandError There is a newer version of minikube available (v0.28.2). Download it here: https://github.com/kubernetes/minikube/releases/tag/v0.28.2 To disable this notification, run the following: minikube config set WantUpdateNotification false Starting local Kubernetes v1.11.0 cluster… Starting VM… Downloading Minikube ISO 0 B / 161.76 MB 0.00% 67.57 KB / 161.76 MB 0.04% 57m18s 84.57 KB / 161.76 MB 0.05% 58m51s … 159.81 MB / 161.76 MB 98.79% 0s 161.13 MB / 161.76 MB 99.61% 0s 161.76 MB / 161.76 MB 100.00% 0s Creating CA: C:\\Users\\USER\\.minikube\\certs\\ca.pem Creating client certificate: C:\\Users\\USER\\.minikube\\certs\\cert.pem Downloading C:\\Users\\USER\\.minikube\\cache\\boot2docker.iso from file://C:/Users/USER/.minikube/cache/iso/minikube-v0.28.0.iso… Creating VirtualBox VM… Creating SSH key… Starting the VM… Check network to re-create if needed… Windows might ask for the permission to configure a dhcp server. Sometimes, such confirmation window is minimized in the taskbar. Waiting for an IP… Setting Docker configuration on the remote daemon… Getting VM IP address… Moving files into cluster… Downloading kubeadm v1.11.0 Downloading kubelet v1.11.0 Finished Downloading kubeadm v1.11.0 Finished Downloading kubelet v1.11.0 sudo systemctl daemon-reload \u0026\u0026 sudo systemctl enable kubelet \u0026\u0026 sudo systemctl start kubelet Setting up certs… Connecting to cluster… Setting up kubeconfig… I0914 08:42:14.462949 3148 config.go:101] Using kubeconfig: C:\\Users\\USER/.kube/config Starting cluster components… sudo /usr/bin/kubeadm init –config /var/lib/kubeadm.yaml –ignore-preflight-errors=DirAvailable–etc-kubernetes-manifests –ignore-preflight-errors=DirAvailable–data-minikube –ignore-preflight-errors=Port-10250 –ignore-prefl ight-errors=FileAvailable–etc-kubernetes-manifests-kube-scheduler.yaml –ignore-preflight-errors=FileAvailable–etc-kubernetes-manifests-kube-apiserver.yaml –ignore-preflight-errors=FileAvailable–etc-kubernetes-manifests-kube -controller-manager.yaml –ignore-preflight-errors=FileAvailable–etc-kubernetes-manifests-etcd.yaml –ignore-preflig","date":"2018-09-14","objectID":"/blog/setup-spark-k8s-win/:0:0","tags":["computer science","infrastructure"],"title":"Setting up Spark servers on Kubernetes on Windows","uri":"/blog/setup-spark-k8s-win/"},{"categories":null,"content":"Term 3, the final term is finished, and I want to share with you want I have learned in this term. This term focuses on self-driving car brian: Behavior Planning: Write a drive computer to drive, while collecting data and predict using what you have learned in Term 2 (e.g. EKF, UKF, particle filter, PID, etc…) Interlude: Lyft challenge on semantic segmentation Semantic Segmentation: To let the car know what these point clouds are, e.g. Car, pedestrian, road, bike, etc… Functional safety: It is a very interesting topic and introduces me International standard ASIL (Automotive Safety Integrity Level). This makes sure your system is resilient and don’t cross lines. Final project: To drive a car around the yard and stop in front of a traffic light. ","date":"2018-09-04","objectID":"/blog/udacity-self-driving-car-term3/:0:0","tags":["computer science","artificial intelligence"],"title":"Udacity Self Driving Car Term3","uri":"/blog/udacity-self-driving-car-term3/"},{"categories":null,"content":"Behavior Planning The original project is lack of structure makes it complained by many students. But none the less, it is a very good opportunity for me to test my system design capability after working 5+ years as a software engineer. Baidu Appollo is the project I look to while I try to come up with my design. I combine what I have learned in the course and cross check with Baidu Appollo to come up with my own design, you can see my write-up at here. There are still some bugs in the project, see if you can find it. Baidu is lacking behind Tencent and Alibaba recently. I feel sad about it. ","date":"2018-09-04","objectID":"/blog/udacity-self-driving-car-term3/:0:1","tags":["computer science","artificial intelligence"],"title":"Udacity Self Driving Car Term3","uri":"/blog/udacity-self-driving-car-term3/"},{"categories":null,"content":"Interlude: Lyft challenge This challenge really let me realized that I just know a little bit about Tensorflow. The challenge is to create a Semantic Segmentation model and to locate car and road in the video prepared using CARLA CARLA is a simulator and it creates a high-quality simulated environment for testing driving algorithms. The competition was fierce, and I dug myself into reading research papers and thought that Google DeepLab v3 should be able to make me rank high enough. But I was wrong. The winner used the simple network (FCN-VGG16) taught in the lesson and hack the evaluation metrics. This simple network runs fast (e.g. 16fps) and the winner had the patient to train it to perfect. While I was struggling which network should I use and how to improve Tensorflow performance (dead end). My submission is 9 points lower than that of the winner and runs only at 7fps. Landing me at 57 over 155. This really taught me a lesson. Simple is the best. I should have refined my basic model first before window shopping another stuff. Another interesting observation is that UNet, a neural network proposed to extract pattern in medical images does help people rank high. This is my result on judge test set Here is the winner writeup: https://www.linkedin.com/pulse/how-i-won-lyft-perception-challenge-asad-zia/ ","date":"2018-09-04","objectID":"/blog/udacity-self-driving-car-term3/:0:2","tags":["computer science","artificial intelligence"],"title":"Udacity Self Driving Car Term3","uri":"/blog/udacity-self-driving-car-term3/"},{"categories":null,"content":"Semantic Segmentation (Elective) After the interlude, I took this project more seriously when working on it. My aim was to make my FCN-VGG16 model a perfect model. I have uses both Kitti dataset and Cityscapes Dataset You can see how I applied myself by checking out this write-up The project just requires you to detect the road, but some other students push the FCN-VGG16 model further to detect all the object labels in Cityscapes Dataset. I am really impressed by their hard work. Here are the results: Images: result result result Video: ","date":"2018-09-04","objectID":"/blog/udacity-self-driving-car-term3/:0:3","tags":["computer science","artificial intelligence"],"title":"Udacity Self Driving Car Term3","uri":"/blog/udacity-self-driving-car-term3/"},{"categories":null,"content":"Functional safety (Elective) I chose Semantic segmentation as my elective, so I don’t put much effort into this module. I go through the video and find that someday maybe I can apply it elsewhere, right? You cannot really depend on you hard-code logic to do everything, sometimes, you just have to hand over your problem to a black-box. (e.g. neural network) But this does not make it an excuse for system failure. Having ASIL or something like that really help you have the confidence to use those tools that may be unpredictable and make systems more useful to people without hurting people. ","date":"2018-09-04","objectID":"/blog/udacity-self-driving-car-term3/:0:4","tags":["computer science","artificial intelligence"],"title":"Udacity Self Driving Car Term3","uri":"/blog/udacity-self-driving-car-term3/"},{"categories":null,"content":"Final Project I am working on it right now, and I hope to finish it by the end of this year. (My first submission is failed, but I can graduate with this submission). The final project makes use of ROS (Robot operating system) to drive Udacity car CARLA around a yard. For the simulator part, that was easy. What I have to do is to work hard and make the car in simulator runs. For the real testing. I really have no idea on how CARLA works, and so I have to go to the forum to ask for help from students who graduated or student living in the US. For those who want to know what is my team (Robocar) progress, you can take a look at this write-up ","date":"2018-09-04","objectID":"/blog/udacity-self-driving-car-term3/:0:5","tags":["computer science","artificial intelligence"],"title":"Udacity Self Driving Car Term3","uri":"/blog/udacity-self-driving-car-term3/"},{"categories":null,"content":"Final words This project really makes me know more about the modern world today. I am very happy that talented people are really putting effort to make self-driving car a dream come true. While I don’t know if I can get a job in this self-driving industry or should I, but I think that it is definitely worth paying for this course. You are being thrown with a great and meaningful challenge and you think about it, learn about it and practice about it. ","date":"2018-09-04","objectID":"/blog/udacity-self-driving-car-term3/:0:6","tags":["computer science","artificial intelligence"],"title":"Udacity Self Driving Car Term3","uri":"/blog/udacity-self-driving-car-term3/"},{"categories":null,"content":"Term 2 is finished, and I want to share with you want I have learned in this term. This term focus on control, I learn how to use Kalman filter, particle filter, PID controller and MPC controller. This term requires C++ to finish but I have used it before. In term 2, the course teaches you the followings: ","date":"2018-04-30","objectID":"/blog/udacity-self-driving-car-term2/:0:0","tags":["computer science","artificial intelligence"],"title":"Udacity Self Driving Car Term2","uri":"/blog/udacity-self-driving-car-term2/"},{"categories":null,"content":"Extended Kalman filter and Unscented Kalman filter When you have both lidar and radar and you want to extract the good from both of them, Kalman filter is the tool to use. It combines the information together, predicts the current location and also tells you how sure the prediction is. All you need is to tell the Kalman filter what your car model is. Kalman filter makes educated guesses based on the model, instead of blindly trust whatever data lidar and radar generated. The project only requires me to track my car, but in the real setting, it can track many objects at the same time. (e.g. the car in front, the car behind, cars on the other lane, pedestrians, and dogs) So your car doesn’t run into these object even when the time lidar or radar or both generate silly data during some short interval. Here is my write-up for Extended Kalman filter and Unscented Kalman filter ","date":"2018-04-30","objectID":"/blog/udacity-self-driving-car-term2/:0:1","tags":["computer science","artificial intelligence"],"title":"Udacity Self Driving Car Term2","uri":"/blog/udacity-self-driving-car-term2/"},{"categories":null,"content":"Particle filter To track your own car, you may think this is just like track your iPhone app, which periodically get the GPS signal and send it to the server. (I don’t know if the guy in Apple really does this, the iPhone get accelerometer and gyroscope, and also it has a WiFi receiver) But how about your car is in the tunnel, your car is in the area with inaccurate GPS. The particle filter is here to help you to improve the accuracy of the car location. What you have to do is to tell the particle filter how your car moves and a map. and your car continues to tell the particle filter what does your car sees on the map (poles, beacons, tree, etc.) and the particle filter uses a sophisticated formula deduced from Navie Bayes algorithm to tell you where your car is. Want to see it in action. You can read my write-up here. ","date":"2018-04-30","objectID":"/blog/udacity-self-driving-car-term2/:0:2","tags":["computer science","artificial intelligence"],"title":"Udacity Self Driving Car Term2","uri":"/blog/udacity-self-driving-car-term2/"},{"categories":null,"content":"PID controller I did PID in university and I am dealing with PID again. Recently, I want to buy a drone and seems drone also used PID controller too. Why? to make it stabilized. You have 3 parameters P, I and D, and what you do is to tune them, so that the drone weight, the inertia and the center of gravity, wind speed etc. are all considered. But there is no way to calculate P, I, D from drone physical properties, you have to use trial or error. I am doing the same on this project. I use the twiddle algorithm the course teach me to tune the PID but it turns out that the car keeps driving off track. I have to force myself to use traditional way to tune PID first and make the car drives stable enough, I run the car a few laps to find more accurate PID values. I make the PID controller works, but it is running at 50mph at most. Check out how my car move and my implementation. ","date":"2018-04-30","objectID":"/blog/udacity-self-driving-car-term2/:0:3","tags":["computer science","artificial intelligence"],"title":"Udacity Self Driving Car Term2","uri":"/blog/udacity-self-driving-car-term2/"},{"categories":null,"content":"MPC controller MPC controller is a new concept of controlling algorithm to me, and if I have time maybe I would like to try to implement one to a drone. (which is already done by someone on youtube) MPC knows your car model, and the desired path (from driving computer, navigation component) and find out the best way to use the control input to make the car drives down the desired path. For the model, there are the kinematic model and the dynamic model. The kinematic model considers how the car moves and tunes normally but not drifting or launching or other stunts. I use the kinematic model in this project. MPC controller predicts a few seconds forward and use the first set of control input to drive the car, and do it again maybe 100 ms second later. By doing so, the car should be on track. But how MPC predicts? MPC use optimization to find out the desired set of control input so that it can keep the car on-track for a few seconds. I did convex optimization before but MPC problem is not a convex problem (i have sine and cosine in the model). When it is not convex, the implication is that the result may be just a local minimum instead of global minimum, but as long as it is not a saddle point (which is not a minimum at all). It should be OK for the purpose. No more tuning and my car can run at a higher speed. Please check out the result and also the implementation. ","date":"2018-04-30","objectID":"/blog/udacity-self-driving-car-term2/:0:4","tags":["computer science","artificial intelligence"],"title":"Udacity Self Driving Car Term2","uri":"/blog/udacity-self-driving-car-term2/"},{"categories":null,"content":"Conclusion: I now have more stuff in my arsenal to tackle the self-driving car problem. In the next term, I will make it works on a real car !! I don’t know what it will be end-up to. ","date":"2018-04-30","objectID":"/blog/udacity-self-driving-car-term2/:0:5","tags":["computer science","artificial intelligence"],"title":"Udacity Self Driving Car Term2","uri":"/blog/udacity-self-driving-car-term2/"},{"categories":null,"content":"之前個網站係我自己台主機入面, 用Digital ocean reverse proxy 返過來，但係我發覺SSL 同 WordPress 係 reverse proxy 下實在太難搞，而且Google search console 又成日報錯，所以我決定搬出去。 AWS新手一名。之後都請大家多多指教。 ","date":"2018-04-28","objectID":"/blog/site-move-to-aws/:0:0","tags":["computer science","infrastructure"],"title":"這個網站已經搬住 amazon web service","uri":"/blog/site-move-to-aws/"},{"categories":null,"content":"A friend of mine told me about this course, and I cannot believe that I can actually complete it. For the price, It worths me 49 USD only for 5 courses. The pricing model is $49/month until your finish the specialization. I finish the course within a month. I can say it is a steal, for $49, you can have a taste of reproducing some good papers in the deep learning fields. (One disappointment is that it does not cover Q-learning or reinforcement learning, which I have to turn to OpenAI gym). Sorry I cannot publish my assignments because I will be accused of letting other to plagiarise my work. But I can briefly tell you how great this course is, and if you have time, go for it. ","date":"2018-02-06","objectID":"/blog/coursera-deep-learning/:0:0","tags":["computer science","artificial intelligence"],"title":"Cousera Deep Learning","uri":"/blog/coursera-deep-learning/"},{"categories":null,"content":"Part 1. Neural network and deep learning This course teaches you how to build your neural network from ground-up. You first learn linear regression and then write your own neural network. You will implement the forward-propagation and the backward-propagation and the logit function (cross entropy function). What is the meaning to implement your own version of forward-propagation and backward-propagation? My opinion is that if you have this knowledge, you can work with TensorFlow with more confident. In later course, you study more NN layer like convolution layer, max pooling layer, LSTM cell and GRU cell, and they all have their own version of forward-propagation and backward-propagation. ","date":"2018-02-06","objectID":"/blog/coursera-deep-learning/:0:1","tags":["computer science","artificial intelligence"],"title":"Cousera Deep Learning","uri":"/blog/coursera-deep-learning/"},{"categories":null,"content":"Part 2. Improving deep neural network This part discusses how to initialize the neural network, how to apply regularisation and dropout to reduce variance, and the effect of applying difference optimization algorithm to the neural network. (e.g. gradient descent, stochastic gradient descent and Adam Optimiser) In the final assignment, you also have a chance to use TensorFlow to run a neural network, which is much simpler compared to writing your own neural network from ground-up. ","date":"2018-02-06","objectID":"/blog/coursera-deep-learning/:0:2","tags":["computer science","artificial intelligence"],"title":"Cousera Deep Learning","uri":"/blog/coursera-deep-learning/"},{"categories":null,"content":"Part 3. Structuring machine learning project This part discusses how to structure your machine learning project so that you can consistently produce a good result within a reasonable time. It is an experience talks from Andrew Ng, and if you have a machine learning project, I recommend you revisiting this course once again before coding, defining project schedule or defining your test cases. ","date":"2018-02-06","objectID":"/blog/coursera-deep-learning/:0:3","tags":["computer science","artificial intelligence"],"title":"Cousera Deep Learning","uri":"/blog/coursera-deep-learning/"},{"categories":null,"content":"Part 4. Convolution neural network This course is to introduce convolution neural network and it is a very informative course. In this course, you first learn to how to write a forward propagation and a backward propagation through a CNN layer and a max pool layer (Ohhh wait, max pool layer is not differentiable, have I got this wrong?). Next, you learn how to use convolution NN to recognized hand sign representing 1, 2, 3, 4, 5. (~78%) Then you will learn Keras and use it to write a ResNet (over 150 layers) and recognized hand sign again with a higher accuracy. (~86%) Then the course teaches you how to implement YOLO and use it to detect car. I must say it is much better than my HOG-SVM implementation in Udacity self-driving course. In the final week, you implement yourself a face recognition NN which able to recognize people’s faces and a neural style transfer NN which changing the style of a picture while keeping most of the content in the picture. ","date":"2018-02-06","objectID":"/blog/coursera-deep-learning/:0:4","tags":["computer science","artificial intelligence"],"title":"Cousera Deep Learning","uri":"/blog/coursera-deep-learning/"},{"categories":null,"content":"Part 5. Sequence model During my study, this course is not yet well prepared, and the assignments somehow do not work. Maybe there will be improved later. In this course, you will have the chance to write forward and backward propagation of an LSTM cell, which is very hard indeed. Then, you generate some name for a dinosaur and jazz music. I don’t think these make sense but I now know the power of RNN network. Afterward, there is a project try to place an emoji at the end of each sentence, and in this project, you know the power of attention mechanism in RNN network. Without attention mechanism, the machine wrongly read “I am not happy” and think that it is a happy sentiment. and you also have a chance to build the word2vec algorithm proposed by Google, which assigning similarity of a word according to the words appear next to a word. Obtaining such a similarity help machine learn a given text much better. Next, we learn how to translate a date format from an unstructured format to a structured format. like 10.09.70 to 1970-09-10. and how to use trigger words to activate a device. In the case of Apple Siri, it is “Hey Siri”. ","date":"2018-02-06","objectID":"/blog/coursera-deep-learning/:0:5","tags":["computer science","artificial intelligence"],"title":"Cousera Deep Learning","uri":"/blog/coursera-deep-learning/"},{"categories":null,"content":"Conclusion I think the course provides a very solid corner-stone for the learner to continue their learning in deep learning. With these experience, I can have more confidence in reproducing the result of papers I read in the future or invent an innovative way to use neural network if the time comes. And it is quite cheap if you can schedule 3 days per week to work on this specialization. (I have a full-time job, but I do take the machine learning course by Andrew before, and I have experience on TensorFlow) ","date":"2018-02-06","objectID":"/blog/coursera-deep-learning/:0:6","tags":["computer science","artificial intelligence"],"title":"Cousera Deep Learning","uri":"/blog/coursera-deep-learning/"},{"categories":null,"content":"I have recently finished the Udacity self-driving car course Term 1. The course is great and out of my expectation. I joined the course because I want to consolidate my understanding of neural network an computer vision. The course does fulfill my wishes. In term 1, the course teaches you the followings: ","date":"2018-01-26","objectID":"/blog/udacity-self-driving-car-term1/:0:0","tags":["computer science","artificial intelligence"],"title":"Udacity Self Driving Car Term1","uri":"/blog/udacity-self-driving-car-term1/"},{"categories":null,"content":"Use computer vision to find the road The driving computer needs to know where the road is in order to drive. This is not a simple task, and if there are errors, the car can screw up heavily. There are 2 projects about finding roads in videos. Basic: writeup, result (1), result (2), result challenge Advance: writeup, result (1), result(2), result(3) ","date":"2018-01-26","objectID":"/blog/udacity-self-driving-car-term1/:0:1","tags":["computer science","artificial intelligence"],"title":"Udacity Self Driving Car Term1","uri":"/blog/udacity-self-driving-car-term1/"},{"categories":null,"content":"Use Neural network to detect traffic sign The driving computer must be able to read traffic signs. There is a paper which explains how to read German traffic sign at an accuracy of 98%, which is must higher than human. I cannot faithfully reproduce this paper and obtain a test set accuracy of 96.2%. My network failed to recognize the “Pedestrians” sign, which I can say it is not desirable. Here is my write-up ","date":"2018-01-26","objectID":"/blog/udacity-self-driving-car-term1/:0:2","tags":["computer science","artificial intelligence"],"title":"Udacity Self Driving Car Term1","uri":"/blog/udacity-self-driving-car-term1/"},{"categories":null,"content":"Use Neural network to mimic human driving This is an interesting project, Nvidia team published a paper to train the driving computer to drive around using just videos of human driving around. This assignment is to reproduce the paper in a simulator. I am quite satisfied with this project, I train the car to drive forward, but in the end, the car can drive backward, which implied that neural network is not just a memorizer, and it does learn something. Here are my write-up and the results (1), (2), (3), (4) ","date":"2018-01-26","objectID":"/blog/udacity-self-driving-car-term1/:0:3","tags":["computer science","artificial intelligence"],"title":"Udacity Self Driving Car Term1","uri":"/blog/udacity-self-driving-car-term1/"},{"categories":null,"content":"Use HOG-SVM to detect vehicles on the road The driving computer must be able to detect vehicles on the road. In the project, I have a thousand of car images and use it to train an SVM machine to decide if an image segment contains a vehicle. When processing the video, I have to break up the video input into many segments and pass it to SVM, if SVM says it is a car, I mark it on the image and finally create an image where the car is highlighted. Here is my write-up and result ","date":"2018-01-26","objectID":"/blog/udacity-self-driving-car-term1/:0:4","tags":["computer science","artificial intelligence"],"title":"Udacity Self Driving Car Term1","uri":"/blog/udacity-self-driving-car-term1/"},{"categories":null,"content":"Conclusion It pretty much a taste of writing a driving computer. I can say if I load my program and use it to drive a car. The car crashes at no-time. I need to further enhance these components before I can move forward before I can invent my self-driving car (or a self-driving RC car). ","date":"2018-01-26","objectID":"/blog/udacity-self-driving-car-term1/:0:5","tags":["computer science","artificial intelligence"],"title":"Udacity Self Driving Car Term1","uri":"/blog/udacity-self-driving-car-term1/"},{"categories":null,"content":"A week has gone and finally, I have nailed this problem. 80% is not high, but it lands me on 4% which is OK for me. The book Hands-On machine learning with scikit learn and Tensorflow really helps a lot in the process. It helps me to standardize what I have to do, so I don’t need to think over when doing another ML project. I have split my notebook into 3, and each focus on different area Spend 80% of your time in engineering your features https://www.kaggle.com/ymlai87416/titanic-score-over-80-part-1-data-preparation Then spend you 5% of time choosing model https://www.kaggle.com/ymlai87416/titanic-score-over-80-part-2-model-selection Then spend your cheap machine time to find a model which is good and not overfit. https://www.kaggle.com/ymlai87416/titanic-score-over-80-part-3-fine-tune ","date":"2017-07-16","objectID":"/blog/finish-kaggle-titanic/:0:0","tags":["computer science","artificial intelligence"],"title":"Finish Kaggle titanic with over 80%","uri":"/blog/finish-kaggle-titanic/"},{"categories":null,"content":"A very insightful course from Coursera and Udacity on Machine learning and deep learning using Tensorflow. Learn some stunts which cannot be done by Programming 101. Machine learning from Coursera: A very good course in general, especially the assignment, really provide you a platform to test out whatever you have learnt from the video. When I heard that I have to learn Octave, I thought “WOW, I have to learn again a new language”, but it turns out to be Matlab, which I have some experience before. I am never a big fan of Matlab and R, so I translated all the assignment from Matlab (Octave) to Python for my reference, it turned out to be a great decision when I was studying deep learning from Udacity. I encourage you if you have time to go through this course, even paying the cost of learning a new programming language… to understand what machine learning really are. If you really like to stick with Python, just take my code from my Github and put it into your personal arsenal. Below are the assignments: Hands-on machine learning: https://github.com/ymlai87416/PythonPlayground/blob/master/Python%20notebook/Machine%20learning%20by%20andrew%20ng/machine-learning-ex1/Assignment1.ipynb Computing J(theta) and L2 regularization: https://github.com/ymlai87416/PythonPlayground/blob/master/Python%20notebook/Machine%20learning%20by%20andrew%20ng/machine-learning-ex2/Assignment2.ipynb Playing with neural network and identify hand-written numbers https://github.com/ymlai87416/PythonPlayground/blob/master/Python%20notebook/Machine%20learning%20by%20andrew%20ng/machine-learning-ex3/Assignment3.ipynb Neural network back and forth, write a backward propagation yourself. https://github.com/ymlai87416/PythonPlayground/blob/master/Python%20notebook/Machine%20learning%20by%20andrew%20ng/machine-learning-ex4/Assignment4.ipynb Bias and variance, teach you how to use and evaluate L2 regularization. https://github.com/ymlai87416/PythonPlayground/blob/master/Python%20notebook/Machine%20learning%20by%20andrew%20ng/machine-learning-ex5/Assignment5.ipynb Support vector machine and detect spamming email https://github.com/ymlai87416/PythonPlayground/blob/master/Python%20notebook/Machine%20learning%20by%20andrew%20ng/machine-learning-ex6/Assignment6.ipynb K-mean and PCA. Want to see what face look like under PCA? https://github.com/ymlai87416/PythonPlayground/blob/master/Python%20notebook/Machine%20learning%20by%20andrew%20ng/machine-learning-ex7/Assignment7-part1.ipynb Anomaly detection and a movie recommendation system https://github.com/ymlai87416/PythonPlayground/blob/master/Python%20notebook/Machine%20learning%20by%20andrew%20ng/machine-learning-ex8/Assignment8.ipynb ","date":"2017-07-03","objectID":"/blog/coursera-machine-learning/:0:0","tags":["computer science","artificial intelligence"],"title":"Machine learning from Coursera by Andrew Ng","uri":"/blog/coursera-machine-learning/"},{"categories":null,"content":"Google hosts a Tensorflow course on Udacity, which is quite fun actually. Tensorflow makes creating a neural network like a breeze. If you went through the course “Machine learning by Andrew Ng” before, you will wonder where should you put the derivatives of a objective function. The answer is you don’t have to, Tensorflow computes the gradient numerically for you, you don’t have to differentiate any equations. Slow it is to compute gradient numerically, isn’t it? Maybe, but by harnessing the power of GPU, you can run even faster. Tensorflow compiles my Python code to CUDA and runs it on my GTX 980ti automatically. Deep learning is not new at all, it is a buzzword in 2015 because of the power of GPU. Neural network has been there for decades. Neural network (NN) does not scale well by nature, different layers in NN learns at a different rate. Sometimes, the value of backward propagation go to infinity (Exploding gradient) or go to zero (Vanishing gradient), which destroy the NN. There are techniques like gradient clipping and LSTM to deal with these problems. The course is a little bit too rush and requires you to read other material in order to finish the assignment, but still, it is a good introduction to deep learning. Here is the assignment completed by me, when you in doubt finding a working solution or want to compare your answer with someone. I think it is gonna to help. Assignment 1: 1_notmnist.ipynb Play with notMNIST dataset with Python library scikit-learn to get familiarized. My solution Assignment 2: 2_fullyconnected.ipynb Design a 1 layer NN to classify alphabets in notMNIST dataset My solution Assignment 3: 3_regularization.ipynb Here you learn L2 regularization. (I have done the same already in Andrew Ng course). you also implement a 4 layers NN classifying alphabets at (95.9%), The best reported is 97.1%, so powerful !!! My solution Assignment 4: 4_convolutions.ipynb Assignments become more difficult onward, require you to do some readings. I implemented a LeNets-alike to classify alphabets (95.5%) My solution Assignment 5: 5_word2vec.ipynb Converting one-hot-vector to embedding and discover an interesting relationship between words, I have also try TSNE mapping. My solution Assignment 6: 6_lstm.ipynb The first part is quite boring, train an NN to output non-sense. The second part is very challenging, it asks you to train an NN to reverse every word in the sentence. Not many I have found conquer this problem and post the solution on Github. My solution ","date":"2017-07-03","objectID":"/blog/tensorflow-tutorial-udacity/:0:0","tags":["computer science","artificial intelligence"],"title":"Tensorflow Tutorial Udacity","uri":"/blog/tensorflow-tutorial-udacity/"},{"categories":null,"content":"之前去investology 聽黃sir 講座, 佢提到港股期權市場其實係一個大戶市場. 入面既數據可以比較好地預測股票走勢. 佢仲話自己聰明絶頂, 自己揾人去幫自己起左個website 去幫人揾入市訊號. 雖然佢講到佢系統好勁, 但係我唔係好信. 所以我無俾錢, 反而自己寫左個website 幫自己揾黃sir 所講既入市信號. 個website 係: http://stockoption.ymlai87416.com 佢個入市訊號係唔係好勁我唔知. 不過我就分享一下我個呢個website 既心得. 資料: 資料係來自港交所, 每一個交易日佢都價發佈期權收市資訊. 個網址係: http://www.hkex.com.hk/eng/stat/dmstat/dayrpt/dqeYYMMDD.zip 個crawler 用 java/spring/hibernate 去寫, 之後試用都幾食RAM 同理runtime 都唔係好快. 因為我無特別做任何tuning. 網站: 個網站我用左 scala 去寫, 用anorm SQL 因為想比較簡單既ORM試下玩下. 用bootstrap 去layout UI. 我想將個website 轉 web service + angular 去寫, 不過為左趕得切朋友生日, 所以都係用左plain HTML + javascript 起貨. 大家如個對呢個system 有興趣可以去呢個repo 睇下: https://github.com/ymlai87416/investmentProject ","date":"2017-03-08","objectID":"/blog/%E8%82%A1%E7%A5%A8%E6%9C%9F%E6%AC%8A%E5%88%86%E6%9E%90/:0:0","tags":["trade"],"title":"股票期權分析","uri":"/blog/%E8%82%A1%E7%A5%A8%E6%9C%9F%E6%AC%8A%E5%88%86%E6%9E%90/"},{"categories":null,"content":"前陣子跟同事一同去投資講座 (investology). 黃sir 介紹一目均衡表 (ichimoku) 去預測股票走勢. 當然唔可以話一定準, 但係有時候總要放手一搏, 而個勝算就係用工具去演算出來. 之後同個同事講不如自己寫一個一目均衡表出來. 因為就算aastock 都無得用一目均衡表, 佢好熟Python. 佢之後寫左一個一目均衡表出來. 個repository 係: https://github.com/taihangFu/Ichimoku 註意: 本文章沒有介紹 investology成分. ","date":"2017-02-17","objectID":"/blog/ichimoku/:0:0","tags":["trade"],"title":"Ichimoku 一目均衡表","uri":"/blog/ichimoku/"},{"categories":null,"content":"Facebook hacker cup 2017 has come. and I am now sharpening my tools to join the fight. Facebook hacker cup can allow you to submit only 1 time for each problem, and give you only 6 minutes to do the submission. After trying several past year questions. I can conclude questions of the following type. Questions I can’t solve within the competition. Quick and swift by applying algorithm tricks, returning answer below 3 seconds. Long IO and hence make you nervous, returning answer in 3 minutes… Long processing time and hence make you nervous, returning answer in 3 minutes… So what can you do about case 3 and 4? I use Java to write my code, my default template is a single thread and reading input using Scanner. My computer is i7-5820, and currently having 16GB RAM, can I utilize what I have to improve my odds scoring a correct submission? JVM is Java 8, default using 1/4 of total computer memory for maximum heap size, which is 4GB RAM available. The following I have tried to improve my template to use threading and also replace Scanner with BufferedReader, to see the performance gain. Runtime analysis: Question Original version Thread version (8 threads) Runtime reduced by Fast IO version Runtime reduced by Facebook 2015 Round 1 25 Autocomplete 143,685ms 140,330ms 2.39% 1,669ms 98.8% 40 Corporate Gifting 45,085ms 12,719ms* 71.79% 41,814ms 7.26% Facebook 2016 Round 1 20 Laundro, Matt 3,945ms 1,097ms 72.19% – – 40 Boomerang Tournament 9,412ms 1,912ms 79.69% – – Facebook 2017 Qualification Round 20 Progress Pie 37ms 81ms -118.92% – – 30 Lazy Loading 65ms 98ms -50.77% – – * With IO improvement and reduced working set. Why can I not achieve a runtime reduction by 87.5% (8 times as fast)? For a simple problem, you only add overhead to the program, which makes the program run slower. Some test cases run faster, some are not, make the load not distributed evenly. in another word, you can distribute load evenly among the 8 threads you created. Conclusion: For a simple problem, you better go with a single thread. Adding thread make the program run slower, but acceptable. For input file of 10-20MB, changing from Scanner to BufferedReader can make the program 85 times faster (see 25 Autocomplete) than the original one. Don’t waste the precious 6 minutes on I/O. For tedious calculation problem like 20 Laundro, Matt, which uses priority queue extensively with the small working set. The improvement is of around 4 leaps. For dynamic programming problem, all work like a charm with at least 4 times boost. (e.g. Boomerang Tournament, which 5 times as fast) Tomorrow is facebook hacker cup 2017 Round 1. Enjoy! ","date":"2017-01-14","objectID":"/blog/2017-facebook-hackercup/:0:0","tags":["computer science"],"title":"2017 Facebook Hackercup","uri":"/blog/2017-facebook-hackercup/"},{"categories":null,"content":"現在server 己經設置好。 interactive broker 申請己經進行中。 我想我這3個月應該好好運用怎樣用程式做自動買賣吧。不能也最少參與一下股票期權的買賣。 以下是我這年多看的書，看得太多而什麼也不做好像有點過份。 目標 stock filter try to derive a trading strategy and review the result. try out the interactive broker interface trading Hong Kong stock options Paper trading 試驗場： Quantopian: https://www.quantopian.com/ 價值投資書 One up on the Wall street: How to use what you already know to make money in the market A Random Walk Down Wall Street: The Time-Tested Strategy for Successful Investing 林森池 – 平民資本家 林森池 – 證券分析實踐 The essay of Warren Buffett （QE… 現在只要有3厘回報人人都買儍了，樓價高企對有一層已供斷的我來說沒有什麼，但是層樓做維修比人圍就慘慘豬） 技術投資書 Trade Your Way to Financial Freedom Beyond Technical Analysis: How to Develop and Implement a Winning Trading System The Complete TurtleTrader: How 23 Novice Investors Became Overnight Millionaires The Evaluation and Optimization of Trading Strategies 故事書 The Snowball: Warren Buffett and the Business of Life ","date":"2016-10-02","objectID":"/blog/2016-q4-investment/:0:0","tags":["trade"],"title":"2016年 第4季投資目標","uri":"/blog/2016-q4-investment/"},{"categories":null,"content":"我用 Digital ocean VPS 來做以下的事： 建立一個 reverse proxy 建立一個 zabbix 來監察我家server 的情況 （遲些有機會再說） 什麼是reverse proxy 簡單來說是一個http server，將VPS 收到的request, 轉向我家的 server. 原來這樣做可以做到 load balancing. 我這樣做是我想將家hosting 的網站掛到互聯網上去。 例如我想掛2個servers，一個係blog，一個係Jenkins 原來2個server 的 Address 係 abc.no-ip.org:80 (blog) 同理 abc.no-ip.org:6000 (jenkins) 現在透過 reverse proxy 可以比個好名佢。例如 www.abc.com (blog) -\u003e abc.no-ip.org:80 jenkins.abc.com (jenkins) -\u003e jenkins.no-ip.org:6000 而且又可以做SSL（為 dynamic dns address 做 SSL，儍的嗎？），一石二鳥。 Wikipedia也有一篇文去解釋，看不明上面可以去這裹看看https://zh.wikipedia.org/wiki/反向代理 Digital ocean 的文檔很利害，所以我就直接介紹給你們看。用在自家server 也行。 https://www.digitalocean.com/community/tutorials/how-to-configure-nginx-as-a-reverse-proxy-for-apache 最重要的是以下的 config, 紅色的是我的 DDNS 地址 location / { proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $remote_addr; proxy_set_header Host $host; proxy_pass http://abc.ddns-provider.net:8080; } ","date":"2016-10-02","objectID":"/blog/digital-ocean-reverse-proxy/:0:0","tags":["computer science","infrastructure"],"title":"Digital Ocean Reverse Proxy","uri":"/blog/digital-ocean-reverse-proxy/"},{"categories":null,"content":"因為 Godaddy 買的東西不能掛 wordpress (五年前最平的套餐 ），所以我也有看看有沒有方法可以令到我用屋企IP 去建設網站，用過了 dynamic dns, no-ip, changeip, duckdns. 這是我一路來的感覺。 不用錢的東西不可靠 不可靠有兩個途徑解決。 付錢 設立1或者多個備用方案。 說一說我對各大DDNS 的感覺吧。 DuckDNS (http://www.duckdns.org) 這個是我唯人欣賞的，他的營運目標就是免費，而他不是空口說白話。 營運方針：http://www.duckdns.org/about.jsp 營運籌款：https://www.patreon.com/user?u=3209735而且亦有過住的記錄，希望他能夠繼續營運下去，直到永遠。阿門。 如果你們用過滿意的話，可以捐錢支持一下他們。 Dynamic DNS (www.dyn.com) 用了一陣，現在他不再提供免費 plan 了。 2016十月 NoIP (www.noip.com) 免費的 plan 很麻煩，他會每個月寄你一封信。說你不按link 就把你的 domain 給刪掉，很不人性化。我不想付錢，所以不買他，他亦不能作備用方案。因為我不管他，他會自動刪掉我的domain. ChangeIP (https://www.changeip.com/) 可以作為備用方案，但網上有人投訢他有downtime 6個小時長, 我不知道，但作為備用，也有點用吧。 現在我是用 duck dns（主要） + change ip（備用） 來設定 ddns, 當然向 DDNS update IP 的不是我家的router, 而是我家的舊電腦兼server. ","date":"2016-10-02","objectID":"/blog/dynamic-dns/:0:0","tags":["computer science","infrastructure"],"title":"Dynamic Dns","uri":"/blog/dynamic-dns/"},{"categories":null,"content":"免費的SSL: Let’s encrypt https://letsencrypt.org/ 免費，而且營運開支也是有大公司去做backup的。而公司的目的是要SSL不用錢就可以用到，從而建立安全的網上世界。 試想想大部份人都係用同一個 password login 十幾個 website。Facebook又用佢，網上不知名forum又用佢。如果不知名forum唔用SSL，個 可以用來login 佢 facebook 既 password 就好大機會落係hacker 手上）。我諗這個就是大公司support 佢既理由。 唯一的壞處是張證書只有3個月有效期，過了期要續。如果沒有以下法寶我可能不會用的。 自動 renew cert robot: CertBot https://certbot.eff.org 不用錢，對各大OS都有 Support，令到你只要打email 就可以申請到cert, 令你只要掛一個command 上cron job 就可以自動renew. 在此介紹如何在digital ocean VPS 安裝 let’s encrypt SSL. (自己server 都apply 到） https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-16-04 張cert 可以同時比nginx 同 apache 用，唔駛抄。（一抄你叫cert bot 點一次過 update 2 張 cert). ","date":"2016-10-02","objectID":"/blog/free-ssl/:0:0","tags":["computer science","infrastructure"],"title":"Free SSL","uri":"/blog/free-ssl/"},{"categories":null,"content":"Godaddy 是我五年前買下用來掛hosting 的。 30港紙用來掛wordpress 是會當掛的。之後我用blogspot 來寫，但是也沒有堅持多久。 但是domain 我是續了下來。就是這個website 的網址。 digital ocean 是我一個朋友介紹的，他自己做些小差，server 是用 digital ocean 起的。5美元一個vpn 真係平到笑。 如何整合 Godaddy 和 digital ocean 大致上來講係將 DNS 設在 digital ocean, 而 Godaddy 則幫我擁有和續約這個 domain. 我也不能不佩服 Digital ocean. 他的文檔可以話無人能出其右。 你可以直接用digital ocean 作為你website 的 installation guide. 這是如何在 Godaddy 設定 DNS 地址 為 digital ocean 的name server. https://www.digitalocean.com/community/tutorials/how-to-point-to-digitalocean-nameservers-from-common-domain-registrars 總合來說，我對 GoDaddy domain 同 digital ocean VPS 很滿意的說。 ","date":"2016-10-02","objectID":"/blog/godaddy-vs-digital-ocean/:0:0","tags":["computer science","infrastructure"],"title":"Godaddy vs Digital Ocean","uri":"/blog/godaddy-vs-digital-ocean/"},{"categories":null,"content":"前幾個月係日本返來之後係網上留意一個用JVM 行既 functional programming language. 之前係 StackOverflow Job 個度都見到有job requirement 要用呢種 language, 佢就係 Scala. 係一個月前我見到 Coursera 有呢隻language 既 course 開班就入左去望下 (自己睇書學理d返工都駛用個d 就咪搞我). 估唔到有意外收獲. Bonus 1 就係 Functional programming, 其實之前AI都有學但係真係用係AI 方面, 無諗過佢係 parallel architecture 個度都有 advantage Bonus 2 就係 immutable structure 的好處, 多執行緒都不用愁 locking. Locking 真係好麻煩. Bonus 3 Try, Future 同 Observable, 呢 d 新既 data structure 可以更加好地形容一個 parallel process. 次次都有Thread就 Readability 係差小小, 不過都係同Thread 一樣難. Bonus 4. Actor Model. 呢個主要係一個叫 Akka 既 Library 支持. 係某一些情況寫好個protocol 其實可以比寫Thread 更輕鬆. 想知多d 可以去 Coursera subscribe 以下兩個 course Scala函數式編程原理 響應式編程原理 ","date":"2014-07-02","objectID":"/blog/scala-and-akka-framework/:0:0","tags":["computer science"],"title":"Scala and Akka Framework","uri":"/blog/scala-and-akka-framework/"},{"categories":null,"content":"之前上網見到一個網站叫 coursera, 見到佢到有D我想睇既 course. 我register 左 3個 (到目前為止) 一個係 scala programming, 一個係 Finance Markets, 一個係 AI. 個course 主要係用視頻做教學手段 (對我來說沒什麼, 我的日文都是大陸視頻學返來的, 最主要看的是製作的有沒有用心, 有的話就事半功倍, 無的話睇到一半都想delete.) Finance Markets 個個係Yale 整既, 個professor 係 Robert Shiller (上圖), 我諗個視頻係2010年拍既. 個course 都有討論sub prime crisis. 我之前有睇過 Random Walk in the Wall Street. 個鋪排實在太似. 而且睇完書可能唔係幾吸收到, 睇視頻個教授比返d 簡單而真實既example 就而易明好多. Scala programming. 個video 好差, 有少少想放棄, 但係自己睇書又好似好辛苦. 個site 既content 都係唔同大學自己整, 良莠不齊. 個網仲有好多科目既, 如果你係大學生覺得自己個professor 講到 199, 又或者自己有興趣都可以上去望下. 每個course 都有 start date, end date, 過左 end date 就無得 enroll, enroll左之後就算個course 完左都有得睇返視頻. 每個course 都有 assignment 同理 exam, 暫時我見過都係 M.C. 但係我返工忙, 完全miss 哂 deadline. ","date":"2014-04-27","objectID":"/blog/finance-markets-coursera/:0:0","tags":["trade"],"title":"Finance Markets Coursera","uri":"/blog/finance-markets-coursera/"},{"categories":null,"content":"係讀 MPhil 個年我係我 supervisor 個 lab 度返工, 識左個聽講炒股好叻既人. 佢 recommend 左林森池 2 本書比我. 第一本係平民資本家, 另一本係證券分析實踐, 投資王道. 而家都好似無得買. 平民資本家 一本講歷史, 上車, 監察, 落車, 換馬, 泡沬, 同理有少少基礎分析既書, 不過我就唔係幾有心機去磨d 數出來. 這本書分析過既股票: 中國人壽, 中資銀行, HSBC 同理香港地產股 證券分析實踐 這本書真係就唔同既行業進行分析 行業包括: 電力, 銀行, 石油, 電訊, 人壽, 公路 再同你講買洐生就無運行. (有D人可能每月成副身家搏一鋪就唔係幾認同既) 再另加一大堆歷史. 數字方面係 P/E 外加 PEG 要睇管理層, 玩財技同理分大花紅但無建樹就好避之則吉. (無謂幫人養二世祖 XD) 市場專利 (舊時既HSBC, 中國電訊行業), 過度競爭行業好似輕工業就唔好掂. (而家分分鐘比人整頓就唔好拉) 公開大學講座 http://www.ouhk.edu.hk/wcsprd/Satellite?pagename=OUHK/tcSingPage\u0026c=C_PAU\u0026cid=191182068600\u0026lang=chi 都係講返前面個2本書投資個part , 同理叫人唔好去賭錢(玩洐生工具). 我諗睇完本書再聽下佢講野可以體會到佢本書既背後理念. (佢叫人唔好去賭個下真係好有霸氣) RTHK 林森池 錄音 呢個我係網上揾到未聽過. 條link 係下面遲下再分享. http://peers.cashmain.com/collectivecontent.php?contentid=130 ","date":"2014-04-27","objectID":"/blog/%E6%9E%97%E6%A3%AE%E6%B1%A0/:0:0","tags":["trade"],"title":"林森池","uri":"/blog/%E6%9E%97%E6%A3%AE%E6%B1%A0/"},{"categories":null,"content":"近日因為同朋友一齊炒股既關係, 上多左aastock. 發現成日係新聞紙都理電視都有講牛熊區或者蟹貨區. 今日就上網發現在有2個網站都係提供這個功能. 可以幫我更加了解點解隻騰訊點解會係500-530蚊浮浮沉沉 (泣…) 你會係圖既左邊見到一個打橫擺放既棒形圖, 每日收市有個價, 有成交, 如果個價係個510-520, 個日既成交量就會去左 510-520 個支棒個度. 如是者, 個圖就是這樣產生. 紅色是個日跌市既成交而綠色係個日升市既成交. 通常都係睇成條棒既長度就知道, 條棒越長, 個價格範圍就係一個支持位或者阻力位. 越長越強 好明顯, 今日4月27日, 700個價係523, 咁就係一個阻力位. 下一個位 500-510係一個支持位. 第一個網站係信報個港股 360 http://stock360.hkej.com/#spot2-tab 第二個網站係分析之師 http://www.analystz.hk/about/intro.php 不過我睇信報個個好係仲有少少bug, 玩耐左就shift 哂位, 反而分析之師雖然唔係interactive 但係起碼唔會shift 錯位. 我而家都睇緊有無d 免費可以一眼睇到牛熊重貨區, 分析之師是有資料的 (一張表格). 但係今日就寫住咁多先. ","date":"2014-04-27","objectID":"/blog/%E8%9F%B9%E8%B2%A8%E5%8D%80/:0:0","tags":["trade"],"title":"蟹貨區","uri":"/blog/%E8%9F%B9%E8%B2%A8%E5%8D%80/"}]